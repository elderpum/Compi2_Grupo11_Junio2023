
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'initleftORleftANDleftIGUALIGUALDIFERENTEleftMENORMAYORMENORIGUALMAYORIGUALleftMASMENOSleftPORDIVIMODULOrightNOTrightPOTENCIAAND COMA CORDER CORIZQ DIFERENTE DIVI DOSPUNTOS ID IGUAL IGUALIGUAL LLAVEDER LLAVEIZQ MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MODULO NOT NUMBER OR PARDER PARIZQ POR POTENCIA PUNTO PUNTOCOMA RANY RBOOL RBREAK RCONSOLE RCONTINUE RELSE RELSEIF RFALSE RFOR RFUNCTION RIF RINTERFACE RLENGTH RLET RLOG RNULL ROF RPOP RPUSH RRETURN RSTRING RTOEXPONENTIAL RTOFIXED RTOLOWERCASE RTOSTRING RTOUPPERCASE RTRUE RTYPEOF RWHILEinit   : instruccionesinstrucciones  : instrucciones instruccioninstrucciones  : instruccioninstruccion  : imprimir PUNTOCOMA\n                    | asignacion PUNTOCOMA\n                    | array PUNTOCOMA\n                    | condicional PUNTOCOMA\n                    | whilee PUNTOCOMA\n                    | forr PUNTOCOMA\n                    | struct PUNTOCOMA\n                    | functionn PUNTOCOMA\n                    | llamada PUNTOCOMA\n                    | BREAKk PUNTOCOMA\n                    | RETURNN PUNTOCOMA\n                    | CONTINUEE PUNTOCOMA\n                    | PUSHH PUNTOCOMA\n                    | POPP PUNTOCOMA\n                    | LENGHTT PUNTOCOMA\n                    PUSHH : RPUSH  PARIZQ expresion COMA expresion PARDERPOPP : RPOP PARIZQ expresion PARDERLENGHTT : RLENGTH PARIZQ expresion PARDERcondicional    : if_ RELSE LLAVEIZQ  instrucciones LLAVEDERcondicional    : if_BREAKk : RBREAKCONTINUEE : RCONTINUERETURNN : RRETURNRETURNN : RRETURN expresionif_ : RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDERif_ : if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDERwhilee : RWHILE PARIZQ  expresion PARDER LLAVEIZQ instrucciones LLAVEDERforr : RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDERforr : RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDERasignacion : RLET ID  IGUAL expresionasignacion : RLET ID DOSPUNTOS tipo IGUAL expresionasignacion : RLET ID DOSPUNTOS ID IGUAL expresionarray : RLET ID number_array lista_id IGUAL expresionarray : RLET ID number_array IGUAL expresionasignacion : ID lista_id IGUAL expresionlista_id : lista_id COMA IDlista_id : lista_id COMA ID number_arraylista_id : COMA IDlista_id : PUNTO ID number_arrayllamada : ID PARIZQ parametro_print PARDER llamada : ID PARIZQ PARDER functionn : RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDERfunctionn : RFUNCTION ID PARIZQ parametros_function PARDER  LLAVEIZQ instrucciones LLAVEDERparametros_function : parametros_function COMA IDparametros_function : parametros_function COMA ID DOSPUNTOS  tipoparametros_function : parametros_function COMA ID DOSPUNTOS  IDparametros_function : IDparametros_function : ID DOSPUNTOS tipoparametros_function : ID DOSPUNTOS IDstruct : RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDERparametros_struct : parametros_struct parametro_structparametros_struct : parametro_structparametro_struct : ID PUNTOCOMAparametro_struct : ID DOSPUNTOS tipo PUNTOCOMAparametro_struct : ID DOSPUNTOS ID PUNTOCOMAimprimir  : RCONSOLE PUNTO RLOG PARIZQ PARDERparametro_print  : parametro_print COMA expresionparametro_print    : expresiontipo : NUMBER\n            | RBOOL\n            | RSTRING\n            | RANY\n            | RNULLexpresion : exp_structexp_struct : exp_struct PUNTO IDexp_struct : exp_struct PUNTO ID number_arrayexp_struct : IDexp_struct : ID number_arraynumber_array : CORIZQ expresion CORDERnumber_array : number_array CORIZQ expresion CORDERexpresion : CORIZQ expresion_exp CORDERexpresion_exp : expresion_exp COMA expresionexpresion_exp : expresionexpresion : ID PARIZQ parametro_print PARDERexpresion : RPUSH NOT PARIZQ expresion COMA expresion PARDERexpresion : RPOP NOT PARIZQ expresion PARDERexpresion : RLENGTH PARIZQ expresion PARDERexpresion    : RTOFIXED PARIZQ expresion PARDER\n                    | RTOSTRING PARIZQ expresion PARDER\n                    | RTOEXPONENTIAL PARIZQ expresion PARDER\n                    | RTYPEOF PARIZQ expresion PARDER\n                    | RTOUPPERCASE PARIZQ expresion PARDER\n                    | RTOLOWERCASE PARIZQ expresion PARDERexpresion : expresion MAS expresion\n                 | expresion MENOS expresion\n                 | expresion POR expresion\n                 | expresion DIVI expresion\n                 | expresion POTENCIA expresion\n                 | expresion MODULO expresion\n                 | expresion IGUALIGUAL expresion\n                 | expresion DIFERENTE expresion\n                 | expresion MAYOR expresion\n                 | expresion MENOR expresion\n                 | expresion MAYORIGUAL expresion\n                 | expresion MENORIGUAL expresion\n                 | expresion AND expresion\n                 | expresion OR expresionexpresion    :  NOT expresionexpresion    : NUMBERexpresion    : RSTRINGexpresion    : RFALSE\n                    | RTRUEexpresion : RANYexpresion : IDexpresion : PARIZQ expresion PARDER'
    
_lr_action_items = {'RCONSOLE':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[19,19,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'RLET':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[20,20,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,101,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'ID':([0,2,3,20,25,26,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,54,55,58,64,66,68,82,83,84,85,87,88,90,91,92,98,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,121,127,128,129,130,131,132,133,148,149,154,156,161,162,182,185,186,194,199,200,201,209,210,211,212,214,215,216,218,232,237,238,244,245,247,250,251,254,255,256,258,259,263,269,272,273,],[21,21,-3,51,60,61,65,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,65,96,97,65,65,65,65,65,65,65,65,65,140,65,65,152,21,65,159,160,163,65,65,65,65,65,65,65,65,65,65,65,65,65,65,180,65,65,65,65,65,65,65,65,65,65,65,21,160,-55,65,65,65,65,65,65,65,21,65,-56,240,-54,242,21,246,21,21,21,21,21,65,21,21,65,-58,-57,21,266,21,21,21,21,]),'RWHILE':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[23,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'RFOR':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[24,24,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'RINTERFACE':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[25,25,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RFUNCTION':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[26,26,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'RBREAK':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[27,27,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'RRETURN':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[28,28,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'RCONTINUE':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[29,29,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RPUSH':([0,2,3,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,58,64,66,68,82,83,84,85,87,90,91,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,156,182,185,186,194,199,200,201,209,210,216,232,237,238,244,245,247,250,251,254,258,263,269,272,273,],[30,30,-3,67,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,67,67,67,67,67,67,67,67,67,67,67,67,30,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,30,67,67,67,67,67,67,67,30,67,30,30,30,30,30,30,67,30,30,67,30,30,30,30,30,]),'RPOP':([0,2,3,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,58,64,66,68,82,83,84,85,87,90,91,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,156,182,185,186,194,199,200,201,209,210,216,232,237,238,244,245,247,250,251,254,258,263,269,272,273,],[31,31,-3,69,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,69,69,69,69,69,69,69,69,69,69,69,69,31,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,31,69,69,69,69,69,69,69,31,69,31,31,31,31,31,31,69,31,31,69,31,31,31,31,31,]),'RLENGTH':([0,2,3,28,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,53,58,64,66,68,82,83,84,85,87,90,91,98,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,156,182,185,186,194,199,200,201,209,210,216,232,237,238,244,245,247,250,251,254,258,263,269,272,273,],[32,32,-3,70,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,70,70,70,70,70,70,70,70,70,70,70,70,32,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,32,70,70,70,70,70,70,70,32,70,32,32,32,32,32,32,70,32,32,70,32,32,32,32,32,]),'RIF':([0,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[33,33,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'$end':([1,2,3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,]),'LLAVEDER':([3,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,156,161,162,211,214,238,244,250,251,255,256,258,269,273,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,207,213,-55,-56,-54,252,257,261,262,-58,-57,265,271,274,]),'PUNTOCOMA':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,27,28,29,62,63,65,77,78,79,80,81,94,122,125,139,142,143,144,145,146,151,153,160,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,195,196,198,202,204,207,213,219,221,224,225,226,227,228,229,230,233,234,235,236,239,240,241,248,249,252,257,261,262,265,268,271,274,],[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,-23,-24,-26,-25,-27,-67,-70,-102,-103,-104,-105,-106,-44,-71,-101,-33,-62,-63,-64,-65,-66,-38,-43,211,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-68,-74,-108,-20,-21,-59,-37,-72,-22,-53,-69,-77,-80,-81,-82,-83,-84,-85,-86,-35,-34,-36,-73,254,255,256,-79,-19,-30,-45,-28,-29,-46,-78,-31,-32,]),'PUNTO':([19,21,63,65,89,122,180,204,219,236,],[50,55,118,-70,55,-71,-68,-72,-69,-73,]),'PARIZQ':([21,23,24,28,30,31,32,33,53,57,58,61,64,65,66,68,70,71,72,73,74,75,76,82,83,84,85,86,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,124,126,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[53,58,59,66,82,83,84,85,66,99,66,103,66,121,66,66,127,128,129,130,131,132,133,66,66,66,66,138,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,185,186,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'COMA':([21,52,63,65,77,78,79,80,81,89,93,95,96,119,120,122,125,134,142,143,144,145,146,147,152,155,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,204,205,206,219,220,221,222,224,225,226,227,228,229,230,236,242,243,246,248,266,267,268,],[54,92,-67,-70,-102,-103,-104,-105,-106,54,154,-61,-41,182,-76,-71,-101,194,-62,-63,-64,-65,-66,92,-39,-42,-50,218,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-68,-74,154,-108,-72,-40,-60,-69,-75,-77,247,-80,-81,-82,-83,-84,-85,-86,-73,-52,-51,-47,-79,-49,-48,-78,]),'RELSE':([22,261,262,],[56,-28,-29,]),'RELSEIF':([22,261,262,],[57,-28,-29,]),'CORIZQ':([28,51,53,58,64,65,66,68,82,83,84,85,87,89,90,91,97,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,122,127,128,129,130,131,132,133,148,149,152,154,155,180,182,185,186,194,199,200,201,204,205,210,219,236,247,254,],[64,90,64,64,64,90,64,64,64,64,64,64,64,149,64,64,90,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,149,64,64,64,64,64,64,64,64,64,90,64,149,90,64,64,64,64,64,64,64,-72,149,64,149,-73,64,64,]),'RTOFIXED':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'RTOSTRING':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'RTOEXPONENTIAL':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'RTYPEOF':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'RTOUPPERCASE':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'RTOLOWERCASE':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'NOT':([28,53,58,64,66,67,68,69,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[68,68,68,68,68,124,68,126,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'NUMBER':([28,53,58,64,66,68,82,83,84,85,87,88,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,212,215,247,254,259,],[77,77,77,77,77,77,77,77,77,77,77,142,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,142,142,77,77,142,]),'RSTRING':([28,53,58,64,66,68,82,83,84,85,87,88,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,212,215,247,254,259,],[78,78,78,78,78,78,78,78,78,78,78,144,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,144,144,78,78,144,]),'RFALSE':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'RTRUE':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'RANY':([28,53,58,64,66,68,82,83,84,85,87,88,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,212,215,247,254,259,],[81,81,81,81,81,81,81,81,81,81,81,145,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,145,145,81,81,145,]),'RLOG':([50,],[86,]),'IGUAL':([51,52,89,96,140,141,142,143,144,145,146,147,152,155,204,205,236,],[87,91,148,-41,199,200,-62,-63,-64,-65,-66,201,-39,-42,-72,-40,-73,]),'DOSPUNTOS':([51,160,163,246,],[88,212,215,259,]),'PARDER':([53,63,65,77,78,79,80,81,93,95,100,103,122,123,125,135,136,137,138,142,143,144,145,146,157,163,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,183,184,187,188,189,190,191,192,193,204,206,219,221,223,224,225,226,227,228,229,230,231,236,239,242,243,246,248,260,264,266,267,268,],[94,-67,-70,-102,-103,-104,-105,-106,153,-61,158,164,-71,184,-101,195,196,197,198,-62,-63,-64,-65,-66,208,-50,217,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-68,-74,221,-108,224,225,226,227,228,229,230,-72,-60,-69,-77,248,-80,-81,-82,-83,-84,-85,-86,249,-73,253,-52,-51,-47,-79,268,270,-49,-48,-78,]),'LLAVEIZQ':([56,60,158,164,197,208,217,253,270,],[98,102,209,216,232,237,245,263,272,]),'MAS':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[104,-67,-70,-102,-103,-104,-105,-106,104,104,104,-71,104,-101,104,104,104,104,104,104,104,104,-87,-88,-89,-90,-91,-92,104,104,104,104,104,104,104,104,-68,-74,-108,104,104,104,104,104,104,104,104,104,-72,104,-69,104,-77,104,104,-80,-81,-82,-83,-84,-85,-86,104,104,104,104,-73,104,-79,104,104,-78,]),'MENOS':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[105,-67,-70,-102,-103,-104,-105,-106,105,105,105,-71,105,-101,105,105,105,105,105,105,105,105,-87,-88,-89,-90,-91,-92,105,105,105,105,105,105,105,105,-68,-74,-108,105,105,105,105,105,105,105,105,105,-72,105,-69,105,-77,105,105,-80,-81,-82,-83,-84,-85,-86,105,105,105,105,-73,105,-79,105,105,-78,]),'POR':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[106,-67,-70,-102,-103,-104,-105,-106,106,106,106,-71,106,-101,106,106,106,106,106,106,106,106,106,106,-89,-90,-91,-92,106,106,106,106,106,106,106,106,-68,-74,-108,106,106,106,106,106,106,106,106,106,-72,106,-69,106,-77,106,106,-80,-81,-82,-83,-84,-85,-86,106,106,106,106,-73,106,-79,106,106,-78,]),'DIVI':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[107,-67,-70,-102,-103,-104,-105,-106,107,107,107,-71,107,-101,107,107,107,107,107,107,107,107,107,107,-89,-90,-91,-92,107,107,107,107,107,107,107,107,-68,-74,-108,107,107,107,107,107,107,107,107,107,-72,107,-69,107,-77,107,107,-80,-81,-82,-83,-84,-85,-86,107,107,107,107,-73,107,-79,107,107,-78,]),'POTENCIA':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[108,-67,-70,-102,-103,-104,-105,-106,108,108,108,-71,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,-68,-74,-108,108,108,108,108,108,108,108,108,108,-72,108,-69,108,-77,108,108,-80,-81,-82,-83,-84,-85,-86,108,108,108,108,-73,108,-79,108,108,-78,]),'MODULO':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[109,-67,-70,-102,-103,-104,-105,-106,109,109,109,-71,109,-101,109,109,109,109,109,109,109,109,109,109,-89,-90,-91,-92,109,109,109,109,109,109,109,109,-68,-74,-108,109,109,109,109,109,109,109,109,109,-72,109,-69,109,-77,109,109,-80,-81,-82,-83,-84,-85,-86,109,109,109,109,-73,109,-79,109,109,-78,]),'IGUALIGUAL':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[110,-67,-70,-102,-103,-104,-105,-106,110,110,110,-71,110,-101,110,110,110,110,110,110,110,110,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,110,110,-68,-74,-108,110,110,110,110,110,110,110,110,110,-72,110,-69,110,-77,110,110,-80,-81,-82,-83,-84,-85,-86,110,110,110,110,-73,110,-79,110,110,-78,]),'DIFERENTE':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[111,-67,-70,-102,-103,-104,-105,-106,111,111,111,-71,111,-101,111,111,111,111,111,111,111,111,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,111,111,-68,-74,-108,111,111,111,111,111,111,111,111,111,-72,111,-69,111,-77,111,111,-80,-81,-82,-83,-84,-85,-86,111,111,111,111,-73,111,-79,111,111,-78,]),'MAYOR':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[112,-67,-70,-102,-103,-104,-105,-106,112,112,112,-71,112,-101,112,112,112,112,112,112,112,112,-87,-88,-89,-90,-91,-92,112,112,-95,-96,-97,-98,112,112,-68,-74,-108,112,112,112,112,112,112,112,112,112,-72,112,-69,112,-77,112,112,-80,-81,-82,-83,-84,-85,-86,112,112,112,112,-73,112,-79,112,112,-78,]),'MENOR':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[113,-67,-70,-102,-103,-104,-105,-106,113,113,113,-71,113,-101,113,113,113,113,113,113,113,113,-87,-88,-89,-90,-91,-92,113,113,-95,-96,-97,-98,113,113,-68,-74,-108,113,113,113,113,113,113,113,113,113,-72,113,-69,113,-77,113,113,-80,-81,-82,-83,-84,-85,-86,113,113,113,113,-73,113,-79,113,113,-78,]),'MAYORIGUAL':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[114,-67,-70,-102,-103,-104,-105,-106,114,114,114,-71,114,-101,114,114,114,114,114,114,114,114,-87,-88,-89,-90,-91,-92,114,114,-95,-96,-97,-98,114,114,-68,-74,-108,114,114,114,114,114,114,114,114,114,-72,114,-69,114,-77,114,114,-80,-81,-82,-83,-84,-85,-86,114,114,114,114,-73,114,-79,114,114,-78,]),'MENORIGUAL':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[115,-67,-70,-102,-103,-104,-105,-106,115,115,115,-71,115,-101,115,115,115,115,115,115,115,115,-87,-88,-89,-90,-91,-92,115,115,-95,-96,-97,-98,115,115,-68,-74,-108,115,115,115,115,115,115,115,115,115,-72,115,-69,115,-77,115,115,-80,-81,-82,-83,-84,-85,-86,115,115,115,115,-73,115,-79,115,115,-78,]),'AND':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[116,-67,-70,-102,-103,-104,-105,-106,116,116,116,-71,116,-101,116,116,116,116,116,116,116,116,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,116,-68,-74,-108,116,116,116,116,116,116,116,116,116,-72,116,-69,116,-77,116,116,-80,-81,-82,-83,-84,-85,-86,116,116,116,116,-73,116,-79,116,116,-78,]),'OR':([62,63,65,77,78,79,80,81,95,100,120,122,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,187,188,189,190,191,192,193,202,203,204,206,219,220,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,239,248,260,264,268,],[117,-67,-70,-102,-103,-104,-105,-106,117,117,117,-71,117,-101,117,117,117,117,117,117,117,117,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-68,-74,-108,117,117,117,117,117,117,117,117,117,-72,117,-69,117,-77,117,117,-80,-81,-82,-83,-84,-85,-86,117,117,117,117,-73,117,-79,117,117,-78,]),'CORDER':([63,65,77,78,79,80,81,119,120,122,125,150,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,184,203,204,219,220,221,224,225,226,227,228,229,230,236,248,268,],[-67,-70,-102,-103,-104,-105,-106,181,-76,-71,-101,204,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-68,-74,-108,236,-72,-69,-75,-77,-80,-81,-82,-83,-84,-85,-86,-73,-79,-78,]),'RBOOL':([88,212,215,259,],[143,143,143,143,]),'RNULL':([88,212,215,259,],[146,146,146,146,]),'ROF':([159,],[210,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,98,209,216,232,237,245,263,272,],[2,156,238,244,250,251,258,269,273,]),'instruccion':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[3,34,3,34,3,3,3,3,34,34,3,34,34,34,3,34,3,34,]),'imprimir':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'asignacion':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'array':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'condicional':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'whilee':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forr':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'struct':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'functionn':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'llamada':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'BREAKk':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'RETURNN':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'CONTINUEE':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'PUSHH':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'POPP':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'LENGHTT':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'if_':([0,2,98,156,209,216,232,237,238,244,245,250,251,258,263,269,272,273,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'lista_id':([21,89,],[52,147,]),'expresion':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[62,95,100,120,123,125,134,135,136,137,139,150,151,157,166,167,168,169,170,171,172,173,174,175,176,177,178,179,95,187,188,189,190,191,192,193,202,203,206,220,222,223,231,233,234,235,239,260,264,]),'exp_struct':([28,53,58,64,66,68,82,83,84,85,87,90,91,99,104,105,106,107,108,109,110,111,112,113,114,115,116,117,121,127,128,129,130,131,132,133,148,149,154,182,185,186,194,199,200,201,210,247,254,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'number_array':([51,65,97,152,180,],[89,122,155,205,219,]),'parametro_print':([53,121,],[93,183,]),'expresion_exp':([64,],[119,]),'tipo':([88,212,215,259,],[141,241,243,267,]),'parametros_struct':([102,],[161,]),'parametro_struct':([102,161,],[162,214,]),'parametros_function':([103,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','sintactico.py',44),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','sintactico.py',48),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_ins','sintactico.py',54),
  ('instruccion -> imprimir PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',61),
  ('instruccion -> asignacion PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',62),
  ('instruccion -> array PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',63),
  ('instruccion -> condicional PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',64),
  ('instruccion -> whilee PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',65),
  ('instruccion -> forr PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',66),
  ('instruccion -> struct PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',67),
  ('instruccion -> functionn PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',68),
  ('instruccion -> llamada PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',69),
  ('instruccion -> BREAKk PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',70),
  ('instruccion -> RETURNN PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',71),
  ('instruccion -> CONTINUEE PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',72),
  ('instruccion -> PUSHH PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',73),
  ('instruccion -> POPP PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',74),
  ('instruccion -> LENGHTT PUNTOCOMA','instruccion',2,'p_instruccion','sintactico.py',75),
  ('PUSHH -> RPUSH PARIZQ expresion COMA expresion PARDER','PUSHH',6,'p_pushh','sintactico.py',83),
  ('POPP -> RPOP PARIZQ expresion PARDER','POPP',4,'p_popp','sintactico.py',87),
  ('LENGHTT -> RLENGTH PARIZQ expresion PARDER','LENGHTT',4,'p_lengthh','sintactico.py',91),
  ('condicional -> if_ RELSE LLAVEIZQ instrucciones LLAVEDER','condicional',5,'p_condicional_else','sintactico.py',97),
  ('condicional -> if_','condicional',1,'p_condicional','sintactico.py',101),
  ('BREAKk -> RBREAK','BREAKk',1,'p_break','sintactico.py',105),
  ('CONTINUEE -> RCONTINUE','CONTINUEE',1,'p_continue','sintactico.py',109),
  ('RETURNN -> RRETURN','RETURNN',1,'p_return','sintactico.py',113),
  ('RETURNN -> RRETURN expresion','RETURNN',2,'p_return_expresion','sintactico.py',117),
  ('if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','if_',7,'p_if','sintactico.py',122),
  ('if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','if_',8,'p_if_elseif','sintactico.py',126),
  ('whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER','whilee',7,'p_ins_while','sintactico.py',131),
  ('forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER','forr',10,'p_ins_for','sintactico.py',135),
  ('forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER','forr',12,'p_ins_for_incr','sintactico.py',139),
  ('asignacion -> RLET ID IGUAL expresion','asignacion',4,'p_asignacion','sintactico.py',144),
  ('asignacion -> RLET ID DOSPUNTOS tipo IGUAL expresion','asignacion',6,'p_asignacionTipo','sintactico.py',148),
  ('asignacion -> RLET ID DOSPUNTOS ID IGUAL expresion','asignacion',6,'p_asignacionTipo_id','sintactico.py',152),
  ('array -> RLET ID number_array lista_id IGUAL expresion','array',6,'p_asignacion_array_struct','sintactico.py',157),
  ('array -> RLET ID number_array IGUAL expresion','array',5,'p_asignacion_array','sintactico.py',161),
  ('asignacion -> ID lista_id IGUAL expresion','asignacion',4,'p_asignacion_STRUCT_variable','sintactico.py',166),
  ('lista_id -> lista_id COMA ID','lista_id',3,'p_lista_id','sintactico.py',170),
  ('lista_id -> lista_id COMA ID number_array','lista_id',4,'p_lista_id_array','sintactico.py',176),
  ('lista_id -> COMA ID','lista_id',2,'p_lista_id_u','sintactico.py',182),
  ('lista_id -> PUNTO ID number_array','lista_id',3,'p_lista_id_u_lista','sintactico.py',189),
  ('llamada -> ID PARIZQ parametro_print PARDER','llamada',4,'p_llamada','sintactico.py',196),
  ('llamada -> ID PARIZQ PARDER','llamada',3,'p_llamada_Solo','sintactico.py',200),
  ('functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER','functionn',7,'p_function','sintactico.py',205),
  ('functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER','functionn',8,'p_function_parametro','sintactico.py',209),
  ('parametros_function -> parametros_function COMA ID','parametros_function',3,'p_parametros_function','sintactico.py',213),
  ('parametros_function -> parametros_function COMA ID DOSPUNTOS tipo','parametros_function',5,'p_parametros_function2','sintactico.py',219),
  ('parametros_function -> parametros_function COMA ID DOSPUNTOS ID','parametros_function',5,'p_parametros_function2_id','sintactico.py',225),
  ('parametros_function -> ID','parametros_function',1,'p_parametros_function_unico','sintactico.py',231),
  ('parametros_function -> ID DOSPUNTOS tipo','parametros_function',3,'p_parametros_function_tipo','sintactico.py',239),
  ('parametros_function -> ID DOSPUNTOS ID','parametros_function',3,'p_parametros_function_tipo_id','sintactico.py',245),
  ('struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER','struct',5,'p_struct','sintactico.py',254),
  ('parametros_struct -> parametros_struct parametro_struct','parametros_struct',2,'p_parametros_struct','sintactico.py',258),
  ('parametros_struct -> parametro_struct','parametros_struct',1,'p_parametros_struct_unico','sintactico.py',264),
  ('parametro_struct -> ID PUNTOCOMA','parametro_struct',2,'p_parametro_struct_nulo','sintactico.py',271),
  ('parametro_struct -> ID DOSPUNTOS tipo PUNTOCOMA','parametro_struct',4,'p_parametro_struct','sintactico.py',278),
  ('parametro_struct -> ID DOSPUNTOS ID PUNTOCOMA','parametro_struct',4,'p_parametro_struct_id','sintactico.py',285),
  ('imprimir -> RCONSOLE PUNTO RLOG PARIZQ PARDER','imprimir',5,'p_print_v','sintactico.py',297),
  ('parametro_print -> parametro_print COMA expresion','parametro_print',3,'p_parametro_print','sintactico.py',302),
  ('parametro_print -> expresion','parametro_print',1,'p_parametro_print_exp','sintactico.py',308),
  ('tipo -> NUMBER','tipo',1,'p_tipo','sintactico.py',315),
  ('tipo -> RBOOL','tipo',1,'p_tipo','sintactico.py',316),
  ('tipo -> RSTRING','tipo',1,'p_tipo','sintactico.py',317),
  ('tipo -> RANY','tipo',1,'p_tipo','sintactico.py',318),
  ('tipo -> RNULL','tipo',1,'p_tipo','sintactico.py',319),
  ('expresion -> exp_struct','expresion',1,'p_variable','sintactico.py',324),
  ('exp_struct -> exp_struct PUNTO ID','exp_struct',3,'p_Expresion_Struct','sintactico.py',328),
  ('exp_struct -> exp_struct PUNTO ID number_array','exp_struct',4,'p_Expresion_Struct_lista','sintactico.py',333),
  ('exp_struct -> ID','exp_struct',1,'p_expresion_struct_id','sintactico.py',338),
  ('exp_struct -> ID number_array','exp_struct',2,'p_expresion_array_id','sintactico.py',343),
  ('number_array -> CORIZQ expresion CORDER','number_array',3,'p_expresion_id_content_unico','sintactico.py',349),
  ('number_array -> number_array CORIZQ expresion CORDER','number_array',4,'p_expresion_id_content','sintactico.py',356),
  ('expresion -> CORIZQ expresion_exp CORDER','expresion',3,'p_expresion_Array','sintactico.py',363),
  ('expresion_exp -> expresion_exp COMA expresion','expresion_exp',3,'p_coma_expresion','sintactico.py',367),
  ('expresion_exp -> expresion','expresion_exp',1,'p_coma_expresion_unico','sintactico.py',373),
  ('expresion -> ID PARIZQ parametro_print PARDER','expresion',4,'p_expresion_llamada','sintactico.py',386),
  ('expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER','expresion',7,'p_push_expresion','sintactico.py',391),
  ('expresion -> RPOP NOT PARIZQ expresion PARDER','expresion',5,'p_pop_expresion','sintactico.py',395),
  ('expresion -> RLENGTH PARIZQ expresion PARDER','expresion',4,'p_length_expresion','sintactico.py',399),
  ('expresion -> RTOFIXED PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',403),
  ('expresion -> RTOSTRING PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',404),
  ('expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',405),
  ('expresion -> RTYPEOF PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',406),
  ('expresion -> RTOUPPERCASE PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',407),
  ('expresion -> RTOLOWERCASE PARIZQ expresion PARDER','expresion',4,'p_nativa_individual','sintactico.py',408),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion','sintactico.py',413),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion','sintactico.py',414),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion','sintactico.py',415),
  ('expresion -> expresion DIVI expresion','expresion',3,'p_expresion','sintactico.py',416),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresion','sintactico.py',417),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion','sintactico.py',418),
  ('expresion -> expresion IGUALIGUAL expresion','expresion',3,'p_expresion','sintactico.py',419),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresion','sintactico.py',420),
  ('expresion -> expresion MAYOR expresion','expresion',3,'p_expresion','sintactico.py',421),
  ('expresion -> expresion MENOR expresion','expresion',3,'p_expresion','sintactico.py',422),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion','sintactico.py',423),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion','sintactico.py',424),
  ('expresion -> expresion AND expresion','expresion',3,'p_expresion','sintactico.py',425),
  ('expresion -> expresion OR expresion','expresion',3,'p_expresion','sintactico.py',426),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','sintactico.py',435),
  ('expresion -> NUMBER','expresion',1,'p_expresion_primitiva_int','sintactico.py',441),
  ('expresion -> RSTRING','expresion',1,'p_expresion_primitiva_string','sintactico.py',445),
  ('expresion -> RFALSE','expresion',1,'p_expresion_primitiva_bool','sintactico.py',449),
  ('expresion -> RTRUE','expresion',1,'p_expresion_primitiva_bool','sintactico.py',450),
  ('expresion -> RANY','expresion',1,'p_expresion_primitiva_any','sintactico.py',457),
  ('expresion -> ID','expresion',1,'p_variable_id','sintactico.py',461),
  ('expresion -> PARIZQ expresion PARDER','expresion',3,'p_agrupacion_expresion','sintactico.py',466),
]
