Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RNULL

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> nativas PTYCOMA
Rule 5     instruccion -> declaraciones PTYCOMA
Rule 6     instruccion -> condicional_ifs PTYCOMA
Rule 7     instruccion -> ciclos PTYCOMA
Rule 8     instruccion -> funciones PTYCOMA
Rule 9     instruccion -> llamadaFuncion PTYCOMA
Rule 10    instruccion -> cReturn PTYCOMA
Rule 11    instruccion -> asignaciones PTYCOMA
Rule 12    instruccion -> de_control PTYCOMA
Rule 13    instruccion -> imprimir PTYCOMA
Rule 14    instruccion -> creacionStruct PTYCOMA
Rule 15    instruccion -> nativas
Rule 16    instruccion -> declaraciones
Rule 17    instruccion -> condicional_ifs
Rule 18    instruccion -> ciclos
Rule 19    instruccion -> funciones
Rule 20    instruccion -> llamadaFuncion
Rule 21    instruccion -> cReturn
Rule 22    instruccion -> asignaciones
Rule 23    instruccion -> de_control
Rule 24    instruccion -> imprimir
Rule 25    instruccion -> creacionStruct
Rule 26    declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
Rule 27    creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER
Rule 28    atributos -> conTipo
Rule 29    atributos -> sinTipo
Rule 30    sinTipo -> sinTipo COMA listaAtr
Rule 31    sinTipo -> listaAtr
Rule 32    listaAtr -> ID DOSPTS expresion
Rule 33    expresion -> LLIZQ atributos LLDER
Rule 34    conTipo -> conTipo atributo
Rule 35    conTipo -> atributo
Rule 36    atributo -> ID DOSPTS tipo PTYCOMA
Rule 37    atributo -> ID DOSPTS ID PTYCOMA
Rule 38    nativas -> exponencial
Rule 39    nativas -> toLower
Rule 40    nativas -> toUpper
Rule 41    nativas -> toFixed
Rule 42    nativas -> splitss
Rule 43    nativas -> typeoff
Rule 44    nativas -> toString
Rule 45    nativas -> String
Rule 46    nativas -> push
Rule 47    nativas -> Concat
Rule 48    nativas -> Length
Rule 49    nativas -> Number
Rule 50    Number -> NNUMBER PARIZQ expresion PARDER
Rule 51    push -> ID PUNTO NPUSH PARIZQ expresion PARDER
Rule 52    push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
Rule 53    Length -> ID PUNTO NLENGTH PARIZQ PARDER
Rule 54    Length -> ID PUNTO NLENGTH
Rule 55    Length -> accesoArreglo PUNTO NLENGTH
Rule 56    Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER
Rule 57    Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
Rule 58    toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER
Rule 59    toString -> ID PUNTO NTOSTRING PARIZQ PARDER
Rule 60    String -> NSTRING PARIZQ ID PARDER
Rule 61    typeoff -> NTYPEOF PARIZQ expresion PARDER
Rule 62    typeoff -> NTYPEOF PARIZQ PARDER
Rule 63    splitss -> split
Rule 64    splitss -> splitSin
Rule 65    split -> ID PUNTO NSPLIT PARIZQ expresion PARDER
Rule 66    splitSin -> ID PUNTO NSPLIT PARIZQ PARDER
Rule 67    toLower -> ID PUNTO NLOWER PARIZQ PARDER
Rule 68    toUpper -> ID PUNTO NUPPER PARIZQ PARDER
Rule 69    exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER
Rule 70    de_control -> pBreak
Rule 71    de_control -> pContinue
Rule 72    pBreak -> RBREAK
Rule 73    pContinue -> RCONTINUE
Rule 74    asignaciones -> asignacionVariable
Rule 75    asignaciones -> asignacionArreglo
Rule 76    asignaciones -> asignacionAtributo
Rule 77    asignacionAtributo -> ID PUNTO ID IGUAL expresion
Rule 78    asignacionArreglo -> ID dimensiones IGUAL expresion
Rule 79    asignacionVariable -> ID IGUAL expresion
Rule 80    cReturn -> RRETURN expresion
Rule 81    expresion -> llamadaFuncion
Rule 82    llamadaFuncion -> llamadaParam
Rule 83    llamadaFuncion -> llamadaSin
Rule 84    llamadaParam -> ID PARIZQ paramsC PARDER
Rule 85    parametrosL -> parametrosL COMA parametroL
Rule 86    parametrosL -> parametroL
Rule 87    parametroL -> ID DOSPTS tipo
Rule 88    parametroL -> RLET ID DOSPTS tipo
Rule 89    parametroL -> ID
Rule 90    parametroL -> ID DOSPTS tipo CORIZQ CORDER
Rule 91    parametroL -> RLET ID DOSPTS tipo CORIZQ CORDER
Rule 92    llamadaSin -> ID PARIZQ PARDER
Rule 93    funciones -> funcionesP
Rule 94    funciones -> funcionesV
Rule 95    funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
Rule 96    funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
Rule 97    paramsC -> paramsC COMA paramC
Rule 98    paramsC -> paramC
Rule 99    paramC -> expresion
Rule 100   paramC -> CORIZQ paramsC CORDER
Rule 101   funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
Rule 102   funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
Rule 103   imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
Rule 104   declaraciones -> declaracion_normal
Rule 105   declaraciones -> declaracion_sin_tipo_normal
Rule 106   declaraciones -> declaracion_sin_valor
Rule 107   declaraciones -> declaracion_sin_tipo_valor
Rule 108   declaraciones -> declaracionArray
Rule 109   declaraciones -> declaracionArrayAny
Rule 110   declaraciones -> declaracionObjeto
Rule 111   declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER
Rule 112   declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
Rule 113   declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER
Rule 114   declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion
Rule 115   declaracion_sin_tipo_normal -> RLET ID IGUAL expresion
Rule 116   declaracion_sin_valor -> RLET ID DOSPTS tipo
Rule 117   declaracion_sin_tipo_valor -> RLET ID
Rule 118   condicional_ifs -> bloqueifs
Rule 119   bloqueifs -> soloif
Rule 120   bloqueifs -> ifelse
Rule 121   soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
Rule 122   ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse
Rule 123   velse -> RELSE soloelse
Rule 124   velse -> RELSE elseif
Rule 125   soloelse -> LLIZQ instrucciones LLDER
Rule 126   elseif -> soloif
Rule 127   elseif -> ifelse
Rule 128   ciclos -> cliclo_for
Rule 129   ciclos -> cicloForOf
Rule 130   ciclos -> cicloForIn
Rule 131   ciclos -> cicloWhile
Rule 132   cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
Rule 133   cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
Rule 134   cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
Rule 135   cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
Rule 136   cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
Rule 137   cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
Rule 138   tipo -> RSTRING
Rule 139   tipo -> RNUMBER
Rule 140   tipo -> RBOOLEAN
Rule 141   tipo -> RANY
Rule 142   tipo -> ID
Rule 143   expresion -> PARIZQ expresion PARDER
Rule 144   expresion -> expresion MAS expresion
Rule 145   expresion -> expresion MENOS expresion
Rule 146   expresion -> expresion POR expresion
Rule 147   expresion -> expresion DIV expresion
Rule 148   expresion -> expresion MODULO expresion
Rule 149   expresion -> expresion POTENCIA expresion
Rule 150   expresion -> expresion IGUALDAD expresion
Rule 151   expresion -> expresion DIFERENTE expresion
Rule 152   expresion -> expresion MAYOR expresion
Rule 153   expresion -> expresion MENOR expresion
Rule 154   expresion -> expresion MAYIGUAL expresion
Rule 155   expresion -> expresion MENIGUAL expresion
Rule 156   expresion -> expresion AND expresion
Rule 157   expresion -> expresion OR expresion
Rule 158   expresion -> nativas
Rule 159   expresion -> MENOS expresion
Rule 160   expresion -> NOT expresion
Rule 161   expresion -> expresion INCREMENTO
Rule 162   expresion -> expresion DECREMENTO
Rule 163   expresion -> ID
Rule 164   expresion -> accesoArreglo
Rule 165   expresion -> accesoAtributo
Rule 166   listaAtributo -> listaAtributo atr
Rule 167   listaAtributo -> atr
Rule 168   atr -> PUNTO ID
Rule 169   accesoAtributo -> ID listaAtributo
Rule 170   dimensiones -> dimensiones dimension
Rule 171   dimensiones -> dimension
Rule 172   dimension -> CORIZQ expresion CORDER
Rule 173   accesoArreglo -> ID dimensiones
Rule 174   expresion -> ENTERO
Rule 175   expresion -> DECIMAL
Rule 176   expresion -> CADENA
Rule 177   expresion -> RTRUE
Rule 178   expresion -> RFALSE

Terminals, with rules where they appear

AND                  : 156
CADENA               : 176
COMA                 : 30 85 97
CORDER               : 52 57 90 91 100 111 112 112 113 133 135 172
CORIZQ               : 52 57 90 91 100 111 112 112 113 133 135 172
DECIMAL              : 175
DECREMENTO           : 162
DIFERENTE            : 151
DIV                  : 147
DOSPTS               : 26 32 36 37 87 88 90 91 96 102 112 113 114 116
ENTERO               : 174
ID                   : 26 26 27 32 36 37 37 51 52 53 54 57 58 59 60 65 66 67 68 69 77 77 78 79 84 87 88 89 90 91 92 95 96 101 102 111 112 113 114 115 116 117 142 163 168 169 173
IGUAL                : 26 77 78 79 111 112 114 115
IGUALDAD             : 150
INCREMENTO           : 161
LLDER                : 26 27 33 95 96 101 102 121 122 125 132 133 134 135 136 137
LLIZQ                : 26 27 33 95 96 101 102 121 122 125 132 133 134 135 136 137
MAS                  : 144
MAYIGUAL             : 154
MAYOR                : 152
MENIGUAL             : 155
MENOR                : 153
MENOS                : 145 159
MODULO               : 148
NCONCAT              : 57
NEXP                 : 69
NFIXED               : 58
NLENGTH              : 53 54 55 56
NLOWER               : 67
NNUMBER              : 50
NOT                  : 160
NPUSH                : 51 52
NSPLIT               : 65 66
NSTRING              : 60
NTOSTRING            : 59
NTYPEOF              : 61 62
NUPPER               : 68
OR                   : 157
PARDER               : 50 51 52 53 56 57 58 59 60 61 62 65 66 67 68 69 84 92 95 96 101 102 103 121 122 132 133 134 135 136 137 143
PARIZQ               : 50 51 52 53 56 57 58 59 60 61 62 65 66 67 68 69 84 92 95 96 101 102 103 121 122 132 133 134 135 136 137 143
POR                  : 146
POTENCIA             : 149
PTYCOMA              : 4 5 6 7 8 9 10 11 12 13 14 36 37 137 137
PUNTO                : 51 52 53 54 55 56 57 58 59 65 66 67 68 69 77 103 168
RANY                 : 141
RBOOLEAN             : 140
RBREAK               : 72
RCONSOLE             : 103
RCONTINUE            : 73
RELSE                : 123 124
RFALSE               : 178
RFOR                 : 133 134 135 136 137
RFUNCTION            : 95 96 101 102
RIF                  : 121 122
RIN                  : 133 134
RINTERFACE           : 27
RLET                 : 26 88 91 111 112 113 114 115 116 117
RLOG                 : 103
RNULL                : 
RNUMBER              : 139
ROF                  : 135 136
RRETURN              : 80
RSTRING              : 138
RTRUE                : 177
RWHILE               : 132
error                : 

Nonterminals, with rules where they appear

Concat               : 47
Length               : 48
Number               : 49
String               : 45
accesoArreglo        : 55 56 164
accesoAtributo       : 165
asignacionArreglo    : 75
asignacionAtributo   : 76
asignacionVariable   : 74
asignaciones         : 11 22
atr                  : 166 167
atributo             : 34 35
atributos            : 26 27 33
bloqueifs            : 118
cReturn              : 10 21
cicloForIn           : 130
cicloForOf           : 129
cicloWhile           : 131
ciclos               : 7 18
cliclo_for           : 128
conTipo              : 28 34
condicional_ifs      : 6 17
creacionStruct       : 14 25
de_control           : 12 23
declaracionArray     : 108
declaracionArrayAny  : 109
declaracionObjeto    : 110
declaracion_normal   : 104
declaracion_sin_tipo_normal : 105
declaracion_sin_tipo_valor : 107
declaracion_sin_valor : 106
declaraciones        : 5 16 133 134 135 136 137
dimension            : 170 171
dimensiones          : 78 170 173
elseif               : 124
exponencial          : 38
expresion            : 32 50 51 58 61 65 69 77 78 79 80 99 114 115 121 122 132 134 136 137 137 143 144 144 145 145 146 146 147 147 148 148 149 149 150 150 151 151 152 152 153 153 154 154 155 155 156 156 157 157 159 160 161 162 172
funciones            : 8 19
funcionesP           : 93
funcionesV           : 94
ifelse               : 120 127
imprimir             : 13 24
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 95 96 101 102 121 122 125 132 133 134 135 136 137
listaAtr             : 30 31
listaAtributo        : 166 169
llamadaFuncion       : 9 20 81
llamadaParam         : 82
llamadaSin           : 83
nativas              : 4 15 158
pBreak               : 70
pContinue            : 71
paramC               : 97 98
parametroL           : 85 86
parametrosL          : 85 95 96
paramsC              : 52 57 84 97 100 103 111 112 133 135
push                 : 46
sinTipo              : 29 30
soloelse             : 123
soloif               : 119 126
split                : 63
splitSin             : 64
splitss              : 42
tipo                 : 36 87 88 90 91 96 102 112 113 114 116
toFixed              : 41
toLower              : 39
toString             : 44
toUpper              : 40
typeoff              : 43
velse                : 122

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    $end            reduce using rule 1 (init -> instrucciones .)
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 3

    (3) instrucciones -> instruccion .

    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    RINTERFACE      reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    NTYPEOF         reduce using rule 3 (instrucciones -> instruccion .)
    NSTRING         reduce using rule 3 (instrucciones -> instruccion .)
    NNUMBER         reduce using rule 3 (instrucciones -> instruccion .)
    RLET            reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLDER           reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> nativas . PTYCOMA
    (15) instruccion -> nativas .

    PTYCOMA         shift and go to state 68
    RRETURN         reduce using rule 15 (instruccion -> nativas .)
    RCONSOLE        reduce using rule 15 (instruccion -> nativas .)
    RINTERFACE      reduce using rule 15 (instruccion -> nativas .)
    ID              reduce using rule 15 (instruccion -> nativas .)
    NTYPEOF         reduce using rule 15 (instruccion -> nativas .)
    NSTRING         reduce using rule 15 (instruccion -> nativas .)
    NNUMBER         reduce using rule 15 (instruccion -> nativas .)
    RLET            reduce using rule 15 (instruccion -> nativas .)
    RFOR            reduce using rule 15 (instruccion -> nativas .)
    RWHILE          reduce using rule 15 (instruccion -> nativas .)
    RFUNCTION       reduce using rule 15 (instruccion -> nativas .)
    RBREAK          reduce using rule 15 (instruccion -> nativas .)
    RCONTINUE       reduce using rule 15 (instruccion -> nativas .)
    RIF             reduce using rule 15 (instruccion -> nativas .)
    $end            reduce using rule 15 (instruccion -> nativas .)
    LLDER           reduce using rule 15 (instruccion -> nativas .)


state 5

    (5) instruccion -> declaraciones . PTYCOMA
    (16) instruccion -> declaraciones .

    PTYCOMA         shift and go to state 69
    RRETURN         reduce using rule 16 (instruccion -> declaraciones .)
    RCONSOLE        reduce using rule 16 (instruccion -> declaraciones .)
    RINTERFACE      reduce using rule 16 (instruccion -> declaraciones .)
    ID              reduce using rule 16 (instruccion -> declaraciones .)
    NTYPEOF         reduce using rule 16 (instruccion -> declaraciones .)
    NSTRING         reduce using rule 16 (instruccion -> declaraciones .)
    NNUMBER         reduce using rule 16 (instruccion -> declaraciones .)
    RLET            reduce using rule 16 (instruccion -> declaraciones .)
    RFOR            reduce using rule 16 (instruccion -> declaraciones .)
    RWHILE          reduce using rule 16 (instruccion -> declaraciones .)
    RFUNCTION       reduce using rule 16 (instruccion -> declaraciones .)
    RBREAK          reduce using rule 16 (instruccion -> declaraciones .)
    RCONTINUE       reduce using rule 16 (instruccion -> declaraciones .)
    RIF             reduce using rule 16 (instruccion -> declaraciones .)
    $end            reduce using rule 16 (instruccion -> declaraciones .)
    LLDER           reduce using rule 16 (instruccion -> declaraciones .)


state 6

    (6) instruccion -> condicional_ifs . PTYCOMA
    (17) instruccion -> condicional_ifs .

    PTYCOMA         shift and go to state 70
    RRETURN         reduce using rule 17 (instruccion -> condicional_ifs .)
    RCONSOLE        reduce using rule 17 (instruccion -> condicional_ifs .)
    RINTERFACE      reduce using rule 17 (instruccion -> condicional_ifs .)
    ID              reduce using rule 17 (instruccion -> condicional_ifs .)
    NTYPEOF         reduce using rule 17 (instruccion -> condicional_ifs .)
    NSTRING         reduce using rule 17 (instruccion -> condicional_ifs .)
    NNUMBER         reduce using rule 17 (instruccion -> condicional_ifs .)
    RLET            reduce using rule 17 (instruccion -> condicional_ifs .)
    RFOR            reduce using rule 17 (instruccion -> condicional_ifs .)
    RWHILE          reduce using rule 17 (instruccion -> condicional_ifs .)
    RFUNCTION       reduce using rule 17 (instruccion -> condicional_ifs .)
    RBREAK          reduce using rule 17 (instruccion -> condicional_ifs .)
    RCONTINUE       reduce using rule 17 (instruccion -> condicional_ifs .)
    RIF             reduce using rule 17 (instruccion -> condicional_ifs .)
    $end            reduce using rule 17 (instruccion -> condicional_ifs .)
    LLDER           reduce using rule 17 (instruccion -> condicional_ifs .)


state 7

    (7) instruccion -> ciclos . PTYCOMA
    (18) instruccion -> ciclos .

    PTYCOMA         shift and go to state 71
    RRETURN         reduce using rule 18 (instruccion -> ciclos .)
    RCONSOLE        reduce using rule 18 (instruccion -> ciclos .)
    RINTERFACE      reduce using rule 18 (instruccion -> ciclos .)
    ID              reduce using rule 18 (instruccion -> ciclos .)
    NTYPEOF         reduce using rule 18 (instruccion -> ciclos .)
    NSTRING         reduce using rule 18 (instruccion -> ciclos .)
    NNUMBER         reduce using rule 18 (instruccion -> ciclos .)
    RLET            reduce using rule 18 (instruccion -> ciclos .)
    RFOR            reduce using rule 18 (instruccion -> ciclos .)
    RWHILE          reduce using rule 18 (instruccion -> ciclos .)
    RFUNCTION       reduce using rule 18 (instruccion -> ciclos .)
    RBREAK          reduce using rule 18 (instruccion -> ciclos .)
    RCONTINUE       reduce using rule 18 (instruccion -> ciclos .)
    RIF             reduce using rule 18 (instruccion -> ciclos .)
    $end            reduce using rule 18 (instruccion -> ciclos .)
    LLDER           reduce using rule 18 (instruccion -> ciclos .)


state 8

    (8) instruccion -> funciones . PTYCOMA
    (19) instruccion -> funciones .

    PTYCOMA         shift and go to state 72
    RRETURN         reduce using rule 19 (instruccion -> funciones .)
    RCONSOLE        reduce using rule 19 (instruccion -> funciones .)
    RINTERFACE      reduce using rule 19 (instruccion -> funciones .)
    ID              reduce using rule 19 (instruccion -> funciones .)
    NTYPEOF         reduce using rule 19 (instruccion -> funciones .)
    NSTRING         reduce using rule 19 (instruccion -> funciones .)
    NNUMBER         reduce using rule 19 (instruccion -> funciones .)
    RLET            reduce using rule 19 (instruccion -> funciones .)
    RFOR            reduce using rule 19 (instruccion -> funciones .)
    RWHILE          reduce using rule 19 (instruccion -> funciones .)
    RFUNCTION       reduce using rule 19 (instruccion -> funciones .)
    RBREAK          reduce using rule 19 (instruccion -> funciones .)
    RCONTINUE       reduce using rule 19 (instruccion -> funciones .)
    RIF             reduce using rule 19 (instruccion -> funciones .)
    $end            reduce using rule 19 (instruccion -> funciones .)
    LLDER           reduce using rule 19 (instruccion -> funciones .)


state 9

    (9) instruccion -> llamadaFuncion . PTYCOMA
    (20) instruccion -> llamadaFuncion .

    PTYCOMA         shift and go to state 73
    RRETURN         reduce using rule 20 (instruccion -> llamadaFuncion .)
    RCONSOLE        reduce using rule 20 (instruccion -> llamadaFuncion .)
    RINTERFACE      reduce using rule 20 (instruccion -> llamadaFuncion .)
    ID              reduce using rule 20 (instruccion -> llamadaFuncion .)
    NTYPEOF         reduce using rule 20 (instruccion -> llamadaFuncion .)
    NSTRING         reduce using rule 20 (instruccion -> llamadaFuncion .)
    NNUMBER         reduce using rule 20 (instruccion -> llamadaFuncion .)
    RLET            reduce using rule 20 (instruccion -> llamadaFuncion .)
    RFOR            reduce using rule 20 (instruccion -> llamadaFuncion .)
    RWHILE          reduce using rule 20 (instruccion -> llamadaFuncion .)
    RFUNCTION       reduce using rule 20 (instruccion -> llamadaFuncion .)
    RBREAK          reduce using rule 20 (instruccion -> llamadaFuncion .)
    RCONTINUE       reduce using rule 20 (instruccion -> llamadaFuncion .)
    RIF             reduce using rule 20 (instruccion -> llamadaFuncion .)
    $end            reduce using rule 20 (instruccion -> llamadaFuncion .)
    LLDER           reduce using rule 20 (instruccion -> llamadaFuncion .)


state 10

    (10) instruccion -> cReturn . PTYCOMA
    (21) instruccion -> cReturn .

    PTYCOMA         shift and go to state 74
    RRETURN         reduce using rule 21 (instruccion -> cReturn .)
    RCONSOLE        reduce using rule 21 (instruccion -> cReturn .)
    RINTERFACE      reduce using rule 21 (instruccion -> cReturn .)
    ID              reduce using rule 21 (instruccion -> cReturn .)
    NTYPEOF         reduce using rule 21 (instruccion -> cReturn .)
    NSTRING         reduce using rule 21 (instruccion -> cReturn .)
    NNUMBER         reduce using rule 21 (instruccion -> cReturn .)
    RLET            reduce using rule 21 (instruccion -> cReturn .)
    RFOR            reduce using rule 21 (instruccion -> cReturn .)
    RWHILE          reduce using rule 21 (instruccion -> cReturn .)
    RFUNCTION       reduce using rule 21 (instruccion -> cReturn .)
    RBREAK          reduce using rule 21 (instruccion -> cReturn .)
    RCONTINUE       reduce using rule 21 (instruccion -> cReturn .)
    RIF             reduce using rule 21 (instruccion -> cReturn .)
    $end            reduce using rule 21 (instruccion -> cReturn .)
    LLDER           reduce using rule 21 (instruccion -> cReturn .)


state 11

    (11) instruccion -> asignaciones . PTYCOMA
    (22) instruccion -> asignaciones .

    PTYCOMA         shift and go to state 75
    RRETURN         reduce using rule 22 (instruccion -> asignaciones .)
    RCONSOLE        reduce using rule 22 (instruccion -> asignaciones .)
    RINTERFACE      reduce using rule 22 (instruccion -> asignaciones .)
    ID              reduce using rule 22 (instruccion -> asignaciones .)
    NTYPEOF         reduce using rule 22 (instruccion -> asignaciones .)
    NSTRING         reduce using rule 22 (instruccion -> asignaciones .)
    NNUMBER         reduce using rule 22 (instruccion -> asignaciones .)
    RLET            reduce using rule 22 (instruccion -> asignaciones .)
    RFOR            reduce using rule 22 (instruccion -> asignaciones .)
    RWHILE          reduce using rule 22 (instruccion -> asignaciones .)
    RFUNCTION       reduce using rule 22 (instruccion -> asignaciones .)
    RBREAK          reduce using rule 22 (instruccion -> asignaciones .)
    RCONTINUE       reduce using rule 22 (instruccion -> asignaciones .)
    RIF             reduce using rule 22 (instruccion -> asignaciones .)
    $end            reduce using rule 22 (instruccion -> asignaciones .)
    LLDER           reduce using rule 22 (instruccion -> asignaciones .)


state 12

    (12) instruccion -> de_control . PTYCOMA
    (23) instruccion -> de_control .

    PTYCOMA         shift and go to state 76
    RRETURN         reduce using rule 23 (instruccion -> de_control .)
    RCONSOLE        reduce using rule 23 (instruccion -> de_control .)
    RINTERFACE      reduce using rule 23 (instruccion -> de_control .)
    ID              reduce using rule 23 (instruccion -> de_control .)
    NTYPEOF         reduce using rule 23 (instruccion -> de_control .)
    NSTRING         reduce using rule 23 (instruccion -> de_control .)
    NNUMBER         reduce using rule 23 (instruccion -> de_control .)
    RLET            reduce using rule 23 (instruccion -> de_control .)
    RFOR            reduce using rule 23 (instruccion -> de_control .)
    RWHILE          reduce using rule 23 (instruccion -> de_control .)
    RFUNCTION       reduce using rule 23 (instruccion -> de_control .)
    RBREAK          reduce using rule 23 (instruccion -> de_control .)
    RCONTINUE       reduce using rule 23 (instruccion -> de_control .)
    RIF             reduce using rule 23 (instruccion -> de_control .)
    $end            reduce using rule 23 (instruccion -> de_control .)
    LLDER           reduce using rule 23 (instruccion -> de_control .)


state 13

    (13) instruccion -> imprimir . PTYCOMA
    (24) instruccion -> imprimir .

    PTYCOMA         shift and go to state 77
    RRETURN         reduce using rule 24 (instruccion -> imprimir .)
    RCONSOLE        reduce using rule 24 (instruccion -> imprimir .)
    RINTERFACE      reduce using rule 24 (instruccion -> imprimir .)
    ID              reduce using rule 24 (instruccion -> imprimir .)
    NTYPEOF         reduce using rule 24 (instruccion -> imprimir .)
    NSTRING         reduce using rule 24 (instruccion -> imprimir .)
    NNUMBER         reduce using rule 24 (instruccion -> imprimir .)
    RLET            reduce using rule 24 (instruccion -> imprimir .)
    RFOR            reduce using rule 24 (instruccion -> imprimir .)
    RWHILE          reduce using rule 24 (instruccion -> imprimir .)
    RFUNCTION       reduce using rule 24 (instruccion -> imprimir .)
    RBREAK          reduce using rule 24 (instruccion -> imprimir .)
    RCONTINUE       reduce using rule 24 (instruccion -> imprimir .)
    RIF             reduce using rule 24 (instruccion -> imprimir .)
    $end            reduce using rule 24 (instruccion -> imprimir .)
    LLDER           reduce using rule 24 (instruccion -> imprimir .)


state 14

    (14) instruccion -> creacionStruct . PTYCOMA
    (25) instruccion -> creacionStruct .

    PTYCOMA         shift and go to state 78
    RRETURN         reduce using rule 25 (instruccion -> creacionStruct .)
    RCONSOLE        reduce using rule 25 (instruccion -> creacionStruct .)
    RINTERFACE      reduce using rule 25 (instruccion -> creacionStruct .)
    ID              reduce using rule 25 (instruccion -> creacionStruct .)
    NTYPEOF         reduce using rule 25 (instruccion -> creacionStruct .)
    NSTRING         reduce using rule 25 (instruccion -> creacionStruct .)
    NNUMBER         reduce using rule 25 (instruccion -> creacionStruct .)
    RLET            reduce using rule 25 (instruccion -> creacionStruct .)
    RFOR            reduce using rule 25 (instruccion -> creacionStruct .)
    RWHILE          reduce using rule 25 (instruccion -> creacionStruct .)
    RFUNCTION       reduce using rule 25 (instruccion -> creacionStruct .)
    RBREAK          reduce using rule 25 (instruccion -> creacionStruct .)
    RCONTINUE       reduce using rule 25 (instruccion -> creacionStruct .)
    RIF             reduce using rule 25 (instruccion -> creacionStruct .)
    $end            reduce using rule 25 (instruccion -> creacionStruct .)
    LLDER           reduce using rule 25 (instruccion -> creacionStruct .)


state 15

    (38) nativas -> exponencial .

    PTYCOMA         reduce using rule 38 (nativas -> exponencial .)
    RRETURN         reduce using rule 38 (nativas -> exponencial .)
    RCONSOLE        reduce using rule 38 (nativas -> exponencial .)
    RINTERFACE      reduce using rule 38 (nativas -> exponencial .)
    ID              reduce using rule 38 (nativas -> exponencial .)
    NTYPEOF         reduce using rule 38 (nativas -> exponencial .)
    NSTRING         reduce using rule 38 (nativas -> exponencial .)
    NNUMBER         reduce using rule 38 (nativas -> exponencial .)
    RLET            reduce using rule 38 (nativas -> exponencial .)
    RFOR            reduce using rule 38 (nativas -> exponencial .)
    RWHILE          reduce using rule 38 (nativas -> exponencial .)
    RFUNCTION       reduce using rule 38 (nativas -> exponencial .)
    RBREAK          reduce using rule 38 (nativas -> exponencial .)
    RCONTINUE       reduce using rule 38 (nativas -> exponencial .)
    RIF             reduce using rule 38 (nativas -> exponencial .)
    $end            reduce using rule 38 (nativas -> exponencial .)
    MAS             reduce using rule 38 (nativas -> exponencial .)
    MENOS           reduce using rule 38 (nativas -> exponencial .)
    POR             reduce using rule 38 (nativas -> exponencial .)
    DIV             reduce using rule 38 (nativas -> exponencial .)
    MODULO          reduce using rule 38 (nativas -> exponencial .)
    POTENCIA        reduce using rule 38 (nativas -> exponencial .)
    IGUALDAD        reduce using rule 38 (nativas -> exponencial .)
    DIFERENTE       reduce using rule 38 (nativas -> exponencial .)
    MAYOR           reduce using rule 38 (nativas -> exponencial .)
    MENOR           reduce using rule 38 (nativas -> exponencial .)
    MAYIGUAL        reduce using rule 38 (nativas -> exponencial .)
    MENIGUAL        reduce using rule 38 (nativas -> exponencial .)
    AND             reduce using rule 38 (nativas -> exponencial .)
    OR              reduce using rule 38 (nativas -> exponencial .)
    INCREMENTO      reduce using rule 38 (nativas -> exponencial .)
    DECREMENTO      reduce using rule 38 (nativas -> exponencial .)
    LLDER           reduce using rule 38 (nativas -> exponencial .)
    PARDER          reduce using rule 38 (nativas -> exponencial .)
    COMA            reduce using rule 38 (nativas -> exponencial .)
    CORDER          reduce using rule 38 (nativas -> exponencial .)
    ROF             reduce using rule 38 (nativas -> exponencial .)
    RIN             reduce using rule 38 (nativas -> exponencial .)


state 16

    (39) nativas -> toLower .

    PTYCOMA         reduce using rule 39 (nativas -> toLower .)
    RRETURN         reduce using rule 39 (nativas -> toLower .)
    RCONSOLE        reduce using rule 39 (nativas -> toLower .)
    RINTERFACE      reduce using rule 39 (nativas -> toLower .)
    ID              reduce using rule 39 (nativas -> toLower .)
    NTYPEOF         reduce using rule 39 (nativas -> toLower .)
    NSTRING         reduce using rule 39 (nativas -> toLower .)
    NNUMBER         reduce using rule 39 (nativas -> toLower .)
    RLET            reduce using rule 39 (nativas -> toLower .)
    RFOR            reduce using rule 39 (nativas -> toLower .)
    RWHILE          reduce using rule 39 (nativas -> toLower .)
    RFUNCTION       reduce using rule 39 (nativas -> toLower .)
    RBREAK          reduce using rule 39 (nativas -> toLower .)
    RCONTINUE       reduce using rule 39 (nativas -> toLower .)
    RIF             reduce using rule 39 (nativas -> toLower .)
    $end            reduce using rule 39 (nativas -> toLower .)
    MAS             reduce using rule 39 (nativas -> toLower .)
    MENOS           reduce using rule 39 (nativas -> toLower .)
    POR             reduce using rule 39 (nativas -> toLower .)
    DIV             reduce using rule 39 (nativas -> toLower .)
    MODULO          reduce using rule 39 (nativas -> toLower .)
    POTENCIA        reduce using rule 39 (nativas -> toLower .)
    IGUALDAD        reduce using rule 39 (nativas -> toLower .)
    DIFERENTE       reduce using rule 39 (nativas -> toLower .)
    MAYOR           reduce using rule 39 (nativas -> toLower .)
    MENOR           reduce using rule 39 (nativas -> toLower .)
    MAYIGUAL        reduce using rule 39 (nativas -> toLower .)
    MENIGUAL        reduce using rule 39 (nativas -> toLower .)
    AND             reduce using rule 39 (nativas -> toLower .)
    OR              reduce using rule 39 (nativas -> toLower .)
    INCREMENTO      reduce using rule 39 (nativas -> toLower .)
    DECREMENTO      reduce using rule 39 (nativas -> toLower .)
    LLDER           reduce using rule 39 (nativas -> toLower .)
    PARDER          reduce using rule 39 (nativas -> toLower .)
    COMA            reduce using rule 39 (nativas -> toLower .)
    CORDER          reduce using rule 39 (nativas -> toLower .)
    ROF             reduce using rule 39 (nativas -> toLower .)
    RIN             reduce using rule 39 (nativas -> toLower .)


state 17

    (40) nativas -> toUpper .

    PTYCOMA         reduce using rule 40 (nativas -> toUpper .)
    RRETURN         reduce using rule 40 (nativas -> toUpper .)
    RCONSOLE        reduce using rule 40 (nativas -> toUpper .)
    RINTERFACE      reduce using rule 40 (nativas -> toUpper .)
    ID              reduce using rule 40 (nativas -> toUpper .)
    NTYPEOF         reduce using rule 40 (nativas -> toUpper .)
    NSTRING         reduce using rule 40 (nativas -> toUpper .)
    NNUMBER         reduce using rule 40 (nativas -> toUpper .)
    RLET            reduce using rule 40 (nativas -> toUpper .)
    RFOR            reduce using rule 40 (nativas -> toUpper .)
    RWHILE          reduce using rule 40 (nativas -> toUpper .)
    RFUNCTION       reduce using rule 40 (nativas -> toUpper .)
    RBREAK          reduce using rule 40 (nativas -> toUpper .)
    RCONTINUE       reduce using rule 40 (nativas -> toUpper .)
    RIF             reduce using rule 40 (nativas -> toUpper .)
    $end            reduce using rule 40 (nativas -> toUpper .)
    MAS             reduce using rule 40 (nativas -> toUpper .)
    MENOS           reduce using rule 40 (nativas -> toUpper .)
    POR             reduce using rule 40 (nativas -> toUpper .)
    DIV             reduce using rule 40 (nativas -> toUpper .)
    MODULO          reduce using rule 40 (nativas -> toUpper .)
    POTENCIA        reduce using rule 40 (nativas -> toUpper .)
    IGUALDAD        reduce using rule 40 (nativas -> toUpper .)
    DIFERENTE       reduce using rule 40 (nativas -> toUpper .)
    MAYOR           reduce using rule 40 (nativas -> toUpper .)
    MENOR           reduce using rule 40 (nativas -> toUpper .)
    MAYIGUAL        reduce using rule 40 (nativas -> toUpper .)
    MENIGUAL        reduce using rule 40 (nativas -> toUpper .)
    AND             reduce using rule 40 (nativas -> toUpper .)
    OR              reduce using rule 40 (nativas -> toUpper .)
    INCREMENTO      reduce using rule 40 (nativas -> toUpper .)
    DECREMENTO      reduce using rule 40 (nativas -> toUpper .)
    LLDER           reduce using rule 40 (nativas -> toUpper .)
    PARDER          reduce using rule 40 (nativas -> toUpper .)
    COMA            reduce using rule 40 (nativas -> toUpper .)
    CORDER          reduce using rule 40 (nativas -> toUpper .)
    ROF             reduce using rule 40 (nativas -> toUpper .)
    RIN             reduce using rule 40 (nativas -> toUpper .)


state 18

    (41) nativas -> toFixed .

    PTYCOMA         reduce using rule 41 (nativas -> toFixed .)
    RRETURN         reduce using rule 41 (nativas -> toFixed .)
    RCONSOLE        reduce using rule 41 (nativas -> toFixed .)
    RINTERFACE      reduce using rule 41 (nativas -> toFixed .)
    ID              reduce using rule 41 (nativas -> toFixed .)
    NTYPEOF         reduce using rule 41 (nativas -> toFixed .)
    NSTRING         reduce using rule 41 (nativas -> toFixed .)
    NNUMBER         reduce using rule 41 (nativas -> toFixed .)
    RLET            reduce using rule 41 (nativas -> toFixed .)
    RFOR            reduce using rule 41 (nativas -> toFixed .)
    RWHILE          reduce using rule 41 (nativas -> toFixed .)
    RFUNCTION       reduce using rule 41 (nativas -> toFixed .)
    RBREAK          reduce using rule 41 (nativas -> toFixed .)
    RCONTINUE       reduce using rule 41 (nativas -> toFixed .)
    RIF             reduce using rule 41 (nativas -> toFixed .)
    $end            reduce using rule 41 (nativas -> toFixed .)
    MAS             reduce using rule 41 (nativas -> toFixed .)
    MENOS           reduce using rule 41 (nativas -> toFixed .)
    POR             reduce using rule 41 (nativas -> toFixed .)
    DIV             reduce using rule 41 (nativas -> toFixed .)
    MODULO          reduce using rule 41 (nativas -> toFixed .)
    POTENCIA        reduce using rule 41 (nativas -> toFixed .)
    IGUALDAD        reduce using rule 41 (nativas -> toFixed .)
    DIFERENTE       reduce using rule 41 (nativas -> toFixed .)
    MAYOR           reduce using rule 41 (nativas -> toFixed .)
    MENOR           reduce using rule 41 (nativas -> toFixed .)
    MAYIGUAL        reduce using rule 41 (nativas -> toFixed .)
    MENIGUAL        reduce using rule 41 (nativas -> toFixed .)
    AND             reduce using rule 41 (nativas -> toFixed .)
    OR              reduce using rule 41 (nativas -> toFixed .)
    INCREMENTO      reduce using rule 41 (nativas -> toFixed .)
    DECREMENTO      reduce using rule 41 (nativas -> toFixed .)
    LLDER           reduce using rule 41 (nativas -> toFixed .)
    PARDER          reduce using rule 41 (nativas -> toFixed .)
    COMA            reduce using rule 41 (nativas -> toFixed .)
    CORDER          reduce using rule 41 (nativas -> toFixed .)
    ROF             reduce using rule 41 (nativas -> toFixed .)
    RIN             reduce using rule 41 (nativas -> toFixed .)


state 19

    (42) nativas -> splitss .

    PTYCOMA         reduce using rule 42 (nativas -> splitss .)
    RRETURN         reduce using rule 42 (nativas -> splitss .)
    RCONSOLE        reduce using rule 42 (nativas -> splitss .)
    RINTERFACE      reduce using rule 42 (nativas -> splitss .)
    ID              reduce using rule 42 (nativas -> splitss .)
    NTYPEOF         reduce using rule 42 (nativas -> splitss .)
    NSTRING         reduce using rule 42 (nativas -> splitss .)
    NNUMBER         reduce using rule 42 (nativas -> splitss .)
    RLET            reduce using rule 42 (nativas -> splitss .)
    RFOR            reduce using rule 42 (nativas -> splitss .)
    RWHILE          reduce using rule 42 (nativas -> splitss .)
    RFUNCTION       reduce using rule 42 (nativas -> splitss .)
    RBREAK          reduce using rule 42 (nativas -> splitss .)
    RCONTINUE       reduce using rule 42 (nativas -> splitss .)
    RIF             reduce using rule 42 (nativas -> splitss .)
    $end            reduce using rule 42 (nativas -> splitss .)
    MAS             reduce using rule 42 (nativas -> splitss .)
    MENOS           reduce using rule 42 (nativas -> splitss .)
    POR             reduce using rule 42 (nativas -> splitss .)
    DIV             reduce using rule 42 (nativas -> splitss .)
    MODULO          reduce using rule 42 (nativas -> splitss .)
    POTENCIA        reduce using rule 42 (nativas -> splitss .)
    IGUALDAD        reduce using rule 42 (nativas -> splitss .)
    DIFERENTE       reduce using rule 42 (nativas -> splitss .)
    MAYOR           reduce using rule 42 (nativas -> splitss .)
    MENOR           reduce using rule 42 (nativas -> splitss .)
    MAYIGUAL        reduce using rule 42 (nativas -> splitss .)
    MENIGUAL        reduce using rule 42 (nativas -> splitss .)
    AND             reduce using rule 42 (nativas -> splitss .)
    OR              reduce using rule 42 (nativas -> splitss .)
    INCREMENTO      reduce using rule 42 (nativas -> splitss .)
    DECREMENTO      reduce using rule 42 (nativas -> splitss .)
    LLDER           reduce using rule 42 (nativas -> splitss .)
    PARDER          reduce using rule 42 (nativas -> splitss .)
    COMA            reduce using rule 42 (nativas -> splitss .)
    CORDER          reduce using rule 42 (nativas -> splitss .)
    ROF             reduce using rule 42 (nativas -> splitss .)
    RIN             reduce using rule 42 (nativas -> splitss .)


state 20

    (43) nativas -> typeoff .

    PTYCOMA         reduce using rule 43 (nativas -> typeoff .)
    RRETURN         reduce using rule 43 (nativas -> typeoff .)
    RCONSOLE        reduce using rule 43 (nativas -> typeoff .)
    RINTERFACE      reduce using rule 43 (nativas -> typeoff .)
    ID              reduce using rule 43 (nativas -> typeoff .)
    NTYPEOF         reduce using rule 43 (nativas -> typeoff .)
    NSTRING         reduce using rule 43 (nativas -> typeoff .)
    NNUMBER         reduce using rule 43 (nativas -> typeoff .)
    RLET            reduce using rule 43 (nativas -> typeoff .)
    RFOR            reduce using rule 43 (nativas -> typeoff .)
    RWHILE          reduce using rule 43 (nativas -> typeoff .)
    RFUNCTION       reduce using rule 43 (nativas -> typeoff .)
    RBREAK          reduce using rule 43 (nativas -> typeoff .)
    RCONTINUE       reduce using rule 43 (nativas -> typeoff .)
    RIF             reduce using rule 43 (nativas -> typeoff .)
    $end            reduce using rule 43 (nativas -> typeoff .)
    MAS             reduce using rule 43 (nativas -> typeoff .)
    MENOS           reduce using rule 43 (nativas -> typeoff .)
    POR             reduce using rule 43 (nativas -> typeoff .)
    DIV             reduce using rule 43 (nativas -> typeoff .)
    MODULO          reduce using rule 43 (nativas -> typeoff .)
    POTENCIA        reduce using rule 43 (nativas -> typeoff .)
    IGUALDAD        reduce using rule 43 (nativas -> typeoff .)
    DIFERENTE       reduce using rule 43 (nativas -> typeoff .)
    MAYOR           reduce using rule 43 (nativas -> typeoff .)
    MENOR           reduce using rule 43 (nativas -> typeoff .)
    MAYIGUAL        reduce using rule 43 (nativas -> typeoff .)
    MENIGUAL        reduce using rule 43 (nativas -> typeoff .)
    AND             reduce using rule 43 (nativas -> typeoff .)
    OR              reduce using rule 43 (nativas -> typeoff .)
    INCREMENTO      reduce using rule 43 (nativas -> typeoff .)
    DECREMENTO      reduce using rule 43 (nativas -> typeoff .)
    LLDER           reduce using rule 43 (nativas -> typeoff .)
    PARDER          reduce using rule 43 (nativas -> typeoff .)
    COMA            reduce using rule 43 (nativas -> typeoff .)
    CORDER          reduce using rule 43 (nativas -> typeoff .)
    ROF             reduce using rule 43 (nativas -> typeoff .)
    RIN             reduce using rule 43 (nativas -> typeoff .)


state 21

    (44) nativas -> toString .

    PTYCOMA         reduce using rule 44 (nativas -> toString .)
    RRETURN         reduce using rule 44 (nativas -> toString .)
    RCONSOLE        reduce using rule 44 (nativas -> toString .)
    RINTERFACE      reduce using rule 44 (nativas -> toString .)
    ID              reduce using rule 44 (nativas -> toString .)
    NTYPEOF         reduce using rule 44 (nativas -> toString .)
    NSTRING         reduce using rule 44 (nativas -> toString .)
    NNUMBER         reduce using rule 44 (nativas -> toString .)
    RLET            reduce using rule 44 (nativas -> toString .)
    RFOR            reduce using rule 44 (nativas -> toString .)
    RWHILE          reduce using rule 44 (nativas -> toString .)
    RFUNCTION       reduce using rule 44 (nativas -> toString .)
    RBREAK          reduce using rule 44 (nativas -> toString .)
    RCONTINUE       reduce using rule 44 (nativas -> toString .)
    RIF             reduce using rule 44 (nativas -> toString .)
    $end            reduce using rule 44 (nativas -> toString .)
    MAS             reduce using rule 44 (nativas -> toString .)
    MENOS           reduce using rule 44 (nativas -> toString .)
    POR             reduce using rule 44 (nativas -> toString .)
    DIV             reduce using rule 44 (nativas -> toString .)
    MODULO          reduce using rule 44 (nativas -> toString .)
    POTENCIA        reduce using rule 44 (nativas -> toString .)
    IGUALDAD        reduce using rule 44 (nativas -> toString .)
    DIFERENTE       reduce using rule 44 (nativas -> toString .)
    MAYOR           reduce using rule 44 (nativas -> toString .)
    MENOR           reduce using rule 44 (nativas -> toString .)
    MAYIGUAL        reduce using rule 44 (nativas -> toString .)
    MENIGUAL        reduce using rule 44 (nativas -> toString .)
    AND             reduce using rule 44 (nativas -> toString .)
    OR              reduce using rule 44 (nativas -> toString .)
    INCREMENTO      reduce using rule 44 (nativas -> toString .)
    DECREMENTO      reduce using rule 44 (nativas -> toString .)
    LLDER           reduce using rule 44 (nativas -> toString .)
    PARDER          reduce using rule 44 (nativas -> toString .)
    COMA            reduce using rule 44 (nativas -> toString .)
    CORDER          reduce using rule 44 (nativas -> toString .)
    ROF             reduce using rule 44 (nativas -> toString .)
    RIN             reduce using rule 44 (nativas -> toString .)


state 22

    (45) nativas -> String .

    PTYCOMA         reduce using rule 45 (nativas -> String .)
    RRETURN         reduce using rule 45 (nativas -> String .)
    RCONSOLE        reduce using rule 45 (nativas -> String .)
    RINTERFACE      reduce using rule 45 (nativas -> String .)
    ID              reduce using rule 45 (nativas -> String .)
    NTYPEOF         reduce using rule 45 (nativas -> String .)
    NSTRING         reduce using rule 45 (nativas -> String .)
    NNUMBER         reduce using rule 45 (nativas -> String .)
    RLET            reduce using rule 45 (nativas -> String .)
    RFOR            reduce using rule 45 (nativas -> String .)
    RWHILE          reduce using rule 45 (nativas -> String .)
    RFUNCTION       reduce using rule 45 (nativas -> String .)
    RBREAK          reduce using rule 45 (nativas -> String .)
    RCONTINUE       reduce using rule 45 (nativas -> String .)
    RIF             reduce using rule 45 (nativas -> String .)
    $end            reduce using rule 45 (nativas -> String .)
    MAS             reduce using rule 45 (nativas -> String .)
    MENOS           reduce using rule 45 (nativas -> String .)
    POR             reduce using rule 45 (nativas -> String .)
    DIV             reduce using rule 45 (nativas -> String .)
    MODULO          reduce using rule 45 (nativas -> String .)
    POTENCIA        reduce using rule 45 (nativas -> String .)
    IGUALDAD        reduce using rule 45 (nativas -> String .)
    DIFERENTE       reduce using rule 45 (nativas -> String .)
    MAYOR           reduce using rule 45 (nativas -> String .)
    MENOR           reduce using rule 45 (nativas -> String .)
    MAYIGUAL        reduce using rule 45 (nativas -> String .)
    MENIGUAL        reduce using rule 45 (nativas -> String .)
    AND             reduce using rule 45 (nativas -> String .)
    OR              reduce using rule 45 (nativas -> String .)
    INCREMENTO      reduce using rule 45 (nativas -> String .)
    DECREMENTO      reduce using rule 45 (nativas -> String .)
    LLDER           reduce using rule 45 (nativas -> String .)
    PARDER          reduce using rule 45 (nativas -> String .)
    COMA            reduce using rule 45 (nativas -> String .)
    CORDER          reduce using rule 45 (nativas -> String .)
    ROF             reduce using rule 45 (nativas -> String .)
    RIN             reduce using rule 45 (nativas -> String .)


state 23

    (46) nativas -> push .

    PTYCOMA         reduce using rule 46 (nativas -> push .)
    RRETURN         reduce using rule 46 (nativas -> push .)
    RCONSOLE        reduce using rule 46 (nativas -> push .)
    RINTERFACE      reduce using rule 46 (nativas -> push .)
    ID              reduce using rule 46 (nativas -> push .)
    NTYPEOF         reduce using rule 46 (nativas -> push .)
    NSTRING         reduce using rule 46 (nativas -> push .)
    NNUMBER         reduce using rule 46 (nativas -> push .)
    RLET            reduce using rule 46 (nativas -> push .)
    RFOR            reduce using rule 46 (nativas -> push .)
    RWHILE          reduce using rule 46 (nativas -> push .)
    RFUNCTION       reduce using rule 46 (nativas -> push .)
    RBREAK          reduce using rule 46 (nativas -> push .)
    RCONTINUE       reduce using rule 46 (nativas -> push .)
    RIF             reduce using rule 46 (nativas -> push .)
    $end            reduce using rule 46 (nativas -> push .)
    MAS             reduce using rule 46 (nativas -> push .)
    MENOS           reduce using rule 46 (nativas -> push .)
    POR             reduce using rule 46 (nativas -> push .)
    DIV             reduce using rule 46 (nativas -> push .)
    MODULO          reduce using rule 46 (nativas -> push .)
    POTENCIA        reduce using rule 46 (nativas -> push .)
    IGUALDAD        reduce using rule 46 (nativas -> push .)
    DIFERENTE       reduce using rule 46 (nativas -> push .)
    MAYOR           reduce using rule 46 (nativas -> push .)
    MENOR           reduce using rule 46 (nativas -> push .)
    MAYIGUAL        reduce using rule 46 (nativas -> push .)
    MENIGUAL        reduce using rule 46 (nativas -> push .)
    AND             reduce using rule 46 (nativas -> push .)
    OR              reduce using rule 46 (nativas -> push .)
    INCREMENTO      reduce using rule 46 (nativas -> push .)
    DECREMENTO      reduce using rule 46 (nativas -> push .)
    LLDER           reduce using rule 46 (nativas -> push .)
    PARDER          reduce using rule 46 (nativas -> push .)
    COMA            reduce using rule 46 (nativas -> push .)
    CORDER          reduce using rule 46 (nativas -> push .)
    ROF             reduce using rule 46 (nativas -> push .)
    RIN             reduce using rule 46 (nativas -> push .)


state 24

    (47) nativas -> Concat .

    PTYCOMA         reduce using rule 47 (nativas -> Concat .)
    RRETURN         reduce using rule 47 (nativas -> Concat .)
    RCONSOLE        reduce using rule 47 (nativas -> Concat .)
    RINTERFACE      reduce using rule 47 (nativas -> Concat .)
    ID              reduce using rule 47 (nativas -> Concat .)
    NTYPEOF         reduce using rule 47 (nativas -> Concat .)
    NSTRING         reduce using rule 47 (nativas -> Concat .)
    NNUMBER         reduce using rule 47 (nativas -> Concat .)
    RLET            reduce using rule 47 (nativas -> Concat .)
    RFOR            reduce using rule 47 (nativas -> Concat .)
    RWHILE          reduce using rule 47 (nativas -> Concat .)
    RFUNCTION       reduce using rule 47 (nativas -> Concat .)
    RBREAK          reduce using rule 47 (nativas -> Concat .)
    RCONTINUE       reduce using rule 47 (nativas -> Concat .)
    RIF             reduce using rule 47 (nativas -> Concat .)
    $end            reduce using rule 47 (nativas -> Concat .)
    MAS             reduce using rule 47 (nativas -> Concat .)
    MENOS           reduce using rule 47 (nativas -> Concat .)
    POR             reduce using rule 47 (nativas -> Concat .)
    DIV             reduce using rule 47 (nativas -> Concat .)
    MODULO          reduce using rule 47 (nativas -> Concat .)
    POTENCIA        reduce using rule 47 (nativas -> Concat .)
    IGUALDAD        reduce using rule 47 (nativas -> Concat .)
    DIFERENTE       reduce using rule 47 (nativas -> Concat .)
    MAYOR           reduce using rule 47 (nativas -> Concat .)
    MENOR           reduce using rule 47 (nativas -> Concat .)
    MAYIGUAL        reduce using rule 47 (nativas -> Concat .)
    MENIGUAL        reduce using rule 47 (nativas -> Concat .)
    AND             reduce using rule 47 (nativas -> Concat .)
    OR              reduce using rule 47 (nativas -> Concat .)
    INCREMENTO      reduce using rule 47 (nativas -> Concat .)
    DECREMENTO      reduce using rule 47 (nativas -> Concat .)
    LLDER           reduce using rule 47 (nativas -> Concat .)
    PARDER          reduce using rule 47 (nativas -> Concat .)
    COMA            reduce using rule 47 (nativas -> Concat .)
    CORDER          reduce using rule 47 (nativas -> Concat .)
    ROF             reduce using rule 47 (nativas -> Concat .)
    RIN             reduce using rule 47 (nativas -> Concat .)


state 25

    (48) nativas -> Length .

    PTYCOMA         reduce using rule 48 (nativas -> Length .)
    RRETURN         reduce using rule 48 (nativas -> Length .)
    RCONSOLE        reduce using rule 48 (nativas -> Length .)
    RINTERFACE      reduce using rule 48 (nativas -> Length .)
    ID              reduce using rule 48 (nativas -> Length .)
    NTYPEOF         reduce using rule 48 (nativas -> Length .)
    NSTRING         reduce using rule 48 (nativas -> Length .)
    NNUMBER         reduce using rule 48 (nativas -> Length .)
    RLET            reduce using rule 48 (nativas -> Length .)
    RFOR            reduce using rule 48 (nativas -> Length .)
    RWHILE          reduce using rule 48 (nativas -> Length .)
    RFUNCTION       reduce using rule 48 (nativas -> Length .)
    RBREAK          reduce using rule 48 (nativas -> Length .)
    RCONTINUE       reduce using rule 48 (nativas -> Length .)
    RIF             reduce using rule 48 (nativas -> Length .)
    $end            reduce using rule 48 (nativas -> Length .)
    MAS             reduce using rule 48 (nativas -> Length .)
    MENOS           reduce using rule 48 (nativas -> Length .)
    POR             reduce using rule 48 (nativas -> Length .)
    DIV             reduce using rule 48 (nativas -> Length .)
    MODULO          reduce using rule 48 (nativas -> Length .)
    POTENCIA        reduce using rule 48 (nativas -> Length .)
    IGUALDAD        reduce using rule 48 (nativas -> Length .)
    DIFERENTE       reduce using rule 48 (nativas -> Length .)
    MAYOR           reduce using rule 48 (nativas -> Length .)
    MENOR           reduce using rule 48 (nativas -> Length .)
    MAYIGUAL        reduce using rule 48 (nativas -> Length .)
    MENIGUAL        reduce using rule 48 (nativas -> Length .)
    AND             reduce using rule 48 (nativas -> Length .)
    OR              reduce using rule 48 (nativas -> Length .)
    INCREMENTO      reduce using rule 48 (nativas -> Length .)
    DECREMENTO      reduce using rule 48 (nativas -> Length .)
    LLDER           reduce using rule 48 (nativas -> Length .)
    PARDER          reduce using rule 48 (nativas -> Length .)
    COMA            reduce using rule 48 (nativas -> Length .)
    CORDER          reduce using rule 48 (nativas -> Length .)
    ROF             reduce using rule 48 (nativas -> Length .)
    RIN             reduce using rule 48 (nativas -> Length .)


state 26

    (49) nativas -> Number .

    PTYCOMA         reduce using rule 49 (nativas -> Number .)
    RRETURN         reduce using rule 49 (nativas -> Number .)
    RCONSOLE        reduce using rule 49 (nativas -> Number .)
    RINTERFACE      reduce using rule 49 (nativas -> Number .)
    ID              reduce using rule 49 (nativas -> Number .)
    NTYPEOF         reduce using rule 49 (nativas -> Number .)
    NSTRING         reduce using rule 49 (nativas -> Number .)
    NNUMBER         reduce using rule 49 (nativas -> Number .)
    RLET            reduce using rule 49 (nativas -> Number .)
    RFOR            reduce using rule 49 (nativas -> Number .)
    RWHILE          reduce using rule 49 (nativas -> Number .)
    RFUNCTION       reduce using rule 49 (nativas -> Number .)
    RBREAK          reduce using rule 49 (nativas -> Number .)
    RCONTINUE       reduce using rule 49 (nativas -> Number .)
    RIF             reduce using rule 49 (nativas -> Number .)
    $end            reduce using rule 49 (nativas -> Number .)
    MAS             reduce using rule 49 (nativas -> Number .)
    MENOS           reduce using rule 49 (nativas -> Number .)
    POR             reduce using rule 49 (nativas -> Number .)
    DIV             reduce using rule 49 (nativas -> Number .)
    MODULO          reduce using rule 49 (nativas -> Number .)
    POTENCIA        reduce using rule 49 (nativas -> Number .)
    IGUALDAD        reduce using rule 49 (nativas -> Number .)
    DIFERENTE       reduce using rule 49 (nativas -> Number .)
    MAYOR           reduce using rule 49 (nativas -> Number .)
    MENOR           reduce using rule 49 (nativas -> Number .)
    MAYIGUAL        reduce using rule 49 (nativas -> Number .)
    MENIGUAL        reduce using rule 49 (nativas -> Number .)
    AND             reduce using rule 49 (nativas -> Number .)
    OR              reduce using rule 49 (nativas -> Number .)
    INCREMENTO      reduce using rule 49 (nativas -> Number .)
    DECREMENTO      reduce using rule 49 (nativas -> Number .)
    LLDER           reduce using rule 49 (nativas -> Number .)
    PARDER          reduce using rule 49 (nativas -> Number .)
    COMA            reduce using rule 49 (nativas -> Number .)
    CORDER          reduce using rule 49 (nativas -> Number .)
    ROF             reduce using rule 49 (nativas -> Number .)
    RIN             reduce using rule 49 (nativas -> Number .)


state 27

    (104) declaraciones -> declaracion_normal .

    PTYCOMA         reduce using rule 104 (declaraciones -> declaracion_normal .)
    RRETURN         reduce using rule 104 (declaraciones -> declaracion_normal .)
    RCONSOLE        reduce using rule 104 (declaraciones -> declaracion_normal .)
    RINTERFACE      reduce using rule 104 (declaraciones -> declaracion_normal .)
    ID              reduce using rule 104 (declaraciones -> declaracion_normal .)
    NTYPEOF         reduce using rule 104 (declaraciones -> declaracion_normal .)
    NSTRING         reduce using rule 104 (declaraciones -> declaracion_normal .)
    NNUMBER         reduce using rule 104 (declaraciones -> declaracion_normal .)
    RLET            reduce using rule 104 (declaraciones -> declaracion_normal .)
    RFOR            reduce using rule 104 (declaraciones -> declaracion_normal .)
    RWHILE          reduce using rule 104 (declaraciones -> declaracion_normal .)
    RFUNCTION       reduce using rule 104 (declaraciones -> declaracion_normal .)
    RBREAK          reduce using rule 104 (declaraciones -> declaracion_normal .)
    RCONTINUE       reduce using rule 104 (declaraciones -> declaracion_normal .)
    RIF             reduce using rule 104 (declaraciones -> declaracion_normal .)
    $end            reduce using rule 104 (declaraciones -> declaracion_normal .)
    ROF             reduce using rule 104 (declaraciones -> declaracion_normal .)
    RIN             reduce using rule 104 (declaraciones -> declaracion_normal .)
    LLDER           reduce using rule 104 (declaraciones -> declaracion_normal .)


state 28

    (105) declaraciones -> declaracion_sin_tipo_normal .

    PTYCOMA         reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RRETURN         reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RCONSOLE        reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RINTERFACE      reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    ID              reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    NTYPEOF         reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    NSTRING         reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    NNUMBER         reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RLET            reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RFOR            reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RWHILE          reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RFUNCTION       reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RBREAK          reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RCONTINUE       reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RIF             reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    $end            reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    ROF             reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    RIN             reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)
    LLDER           reduce using rule 105 (declaraciones -> declaracion_sin_tipo_normal .)


state 29

    (106) declaraciones -> declaracion_sin_valor .

    PTYCOMA         reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RRETURN         reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RCONSOLE        reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RINTERFACE      reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    ID              reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    NTYPEOF         reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    NSTRING         reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    NNUMBER         reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RLET            reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RFOR            reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RWHILE          reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RFUNCTION       reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RBREAK          reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RCONTINUE       reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RIF             reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    $end            reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    ROF             reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    RIN             reduce using rule 106 (declaraciones -> declaracion_sin_valor .)
    LLDER           reduce using rule 106 (declaraciones -> declaracion_sin_valor .)


state 30

    (107) declaraciones -> declaracion_sin_tipo_valor .

    PTYCOMA         reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RRETURN         reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RCONSOLE        reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RINTERFACE      reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    ID              reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    NTYPEOF         reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    NSTRING         reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    NNUMBER         reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RLET            reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RFOR            reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RWHILE          reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RFUNCTION       reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RBREAK          reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RCONTINUE       reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RIF             reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    $end            reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    ROF             reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    RIN             reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)
    LLDER           reduce using rule 107 (declaraciones -> declaracion_sin_tipo_valor .)


state 31

    (108) declaraciones -> declaracionArray .

    PTYCOMA         reduce using rule 108 (declaraciones -> declaracionArray .)
    RRETURN         reduce using rule 108 (declaraciones -> declaracionArray .)
    RCONSOLE        reduce using rule 108 (declaraciones -> declaracionArray .)
    RINTERFACE      reduce using rule 108 (declaraciones -> declaracionArray .)
    ID              reduce using rule 108 (declaraciones -> declaracionArray .)
    NTYPEOF         reduce using rule 108 (declaraciones -> declaracionArray .)
    NSTRING         reduce using rule 108 (declaraciones -> declaracionArray .)
    NNUMBER         reduce using rule 108 (declaraciones -> declaracionArray .)
    RLET            reduce using rule 108 (declaraciones -> declaracionArray .)
    RFOR            reduce using rule 108 (declaraciones -> declaracionArray .)
    RWHILE          reduce using rule 108 (declaraciones -> declaracionArray .)
    RFUNCTION       reduce using rule 108 (declaraciones -> declaracionArray .)
    RBREAK          reduce using rule 108 (declaraciones -> declaracionArray .)
    RCONTINUE       reduce using rule 108 (declaraciones -> declaracionArray .)
    RIF             reduce using rule 108 (declaraciones -> declaracionArray .)
    $end            reduce using rule 108 (declaraciones -> declaracionArray .)
    ROF             reduce using rule 108 (declaraciones -> declaracionArray .)
    RIN             reduce using rule 108 (declaraciones -> declaracionArray .)
    LLDER           reduce using rule 108 (declaraciones -> declaracionArray .)


state 32

    (109) declaraciones -> declaracionArrayAny .

    PTYCOMA         reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RRETURN         reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RCONSOLE        reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RINTERFACE      reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    ID              reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    NTYPEOF         reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    NSTRING         reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    NNUMBER         reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RLET            reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RFOR            reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RWHILE          reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RFUNCTION       reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RBREAK          reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RCONTINUE       reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RIF             reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    $end            reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    ROF             reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    RIN             reduce using rule 109 (declaraciones -> declaracionArrayAny .)
    LLDER           reduce using rule 109 (declaraciones -> declaracionArrayAny .)


state 33

    (110) declaraciones -> declaracionObjeto .

    PTYCOMA         reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RRETURN         reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RCONSOLE        reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RINTERFACE      reduce using rule 110 (declaraciones -> declaracionObjeto .)
    ID              reduce using rule 110 (declaraciones -> declaracionObjeto .)
    NTYPEOF         reduce using rule 110 (declaraciones -> declaracionObjeto .)
    NSTRING         reduce using rule 110 (declaraciones -> declaracionObjeto .)
    NNUMBER         reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RLET            reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RFOR            reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RWHILE          reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RFUNCTION       reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RBREAK          reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RCONTINUE       reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RIF             reduce using rule 110 (declaraciones -> declaracionObjeto .)
    $end            reduce using rule 110 (declaraciones -> declaracionObjeto .)
    ROF             reduce using rule 110 (declaraciones -> declaracionObjeto .)
    RIN             reduce using rule 110 (declaraciones -> declaracionObjeto .)
    LLDER           reduce using rule 110 (declaraciones -> declaracionObjeto .)


state 34

    (118) condicional_ifs -> bloqueifs .

    PTYCOMA         reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RRETURN         reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RCONSOLE        reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RINTERFACE      reduce using rule 118 (condicional_ifs -> bloqueifs .)
    ID              reduce using rule 118 (condicional_ifs -> bloqueifs .)
    NTYPEOF         reduce using rule 118 (condicional_ifs -> bloqueifs .)
    NSTRING         reduce using rule 118 (condicional_ifs -> bloqueifs .)
    NNUMBER         reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RLET            reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RFOR            reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RWHILE          reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RFUNCTION       reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RBREAK          reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RCONTINUE       reduce using rule 118 (condicional_ifs -> bloqueifs .)
    RIF             reduce using rule 118 (condicional_ifs -> bloqueifs .)
    $end            reduce using rule 118 (condicional_ifs -> bloqueifs .)
    LLDER           reduce using rule 118 (condicional_ifs -> bloqueifs .)


state 35

    (128) ciclos -> cliclo_for .

    PTYCOMA         reduce using rule 128 (ciclos -> cliclo_for .)
    RRETURN         reduce using rule 128 (ciclos -> cliclo_for .)
    RCONSOLE        reduce using rule 128 (ciclos -> cliclo_for .)
    RINTERFACE      reduce using rule 128 (ciclos -> cliclo_for .)
    ID              reduce using rule 128 (ciclos -> cliclo_for .)
    NTYPEOF         reduce using rule 128 (ciclos -> cliclo_for .)
    NSTRING         reduce using rule 128 (ciclos -> cliclo_for .)
    NNUMBER         reduce using rule 128 (ciclos -> cliclo_for .)
    RLET            reduce using rule 128 (ciclos -> cliclo_for .)
    RFOR            reduce using rule 128 (ciclos -> cliclo_for .)
    RWHILE          reduce using rule 128 (ciclos -> cliclo_for .)
    RFUNCTION       reduce using rule 128 (ciclos -> cliclo_for .)
    RBREAK          reduce using rule 128 (ciclos -> cliclo_for .)
    RCONTINUE       reduce using rule 128 (ciclos -> cliclo_for .)
    RIF             reduce using rule 128 (ciclos -> cliclo_for .)
    $end            reduce using rule 128 (ciclos -> cliclo_for .)
    LLDER           reduce using rule 128 (ciclos -> cliclo_for .)


state 36

    (129) ciclos -> cicloForOf .

    PTYCOMA         reduce using rule 129 (ciclos -> cicloForOf .)
    RRETURN         reduce using rule 129 (ciclos -> cicloForOf .)
    RCONSOLE        reduce using rule 129 (ciclos -> cicloForOf .)
    RINTERFACE      reduce using rule 129 (ciclos -> cicloForOf .)
    ID              reduce using rule 129 (ciclos -> cicloForOf .)
    NTYPEOF         reduce using rule 129 (ciclos -> cicloForOf .)
    NSTRING         reduce using rule 129 (ciclos -> cicloForOf .)
    NNUMBER         reduce using rule 129 (ciclos -> cicloForOf .)
    RLET            reduce using rule 129 (ciclos -> cicloForOf .)
    RFOR            reduce using rule 129 (ciclos -> cicloForOf .)
    RWHILE          reduce using rule 129 (ciclos -> cicloForOf .)
    RFUNCTION       reduce using rule 129 (ciclos -> cicloForOf .)
    RBREAK          reduce using rule 129 (ciclos -> cicloForOf .)
    RCONTINUE       reduce using rule 129 (ciclos -> cicloForOf .)
    RIF             reduce using rule 129 (ciclos -> cicloForOf .)
    $end            reduce using rule 129 (ciclos -> cicloForOf .)
    LLDER           reduce using rule 129 (ciclos -> cicloForOf .)


state 37

    (130) ciclos -> cicloForIn .

    PTYCOMA         reduce using rule 130 (ciclos -> cicloForIn .)
    RRETURN         reduce using rule 130 (ciclos -> cicloForIn .)
    RCONSOLE        reduce using rule 130 (ciclos -> cicloForIn .)
    RINTERFACE      reduce using rule 130 (ciclos -> cicloForIn .)
    ID              reduce using rule 130 (ciclos -> cicloForIn .)
    NTYPEOF         reduce using rule 130 (ciclos -> cicloForIn .)
    NSTRING         reduce using rule 130 (ciclos -> cicloForIn .)
    NNUMBER         reduce using rule 130 (ciclos -> cicloForIn .)
    RLET            reduce using rule 130 (ciclos -> cicloForIn .)
    RFOR            reduce using rule 130 (ciclos -> cicloForIn .)
    RWHILE          reduce using rule 130 (ciclos -> cicloForIn .)
    RFUNCTION       reduce using rule 130 (ciclos -> cicloForIn .)
    RBREAK          reduce using rule 130 (ciclos -> cicloForIn .)
    RCONTINUE       reduce using rule 130 (ciclos -> cicloForIn .)
    RIF             reduce using rule 130 (ciclos -> cicloForIn .)
    $end            reduce using rule 130 (ciclos -> cicloForIn .)
    LLDER           reduce using rule 130 (ciclos -> cicloForIn .)


state 38

    (131) ciclos -> cicloWhile .

    PTYCOMA         reduce using rule 131 (ciclos -> cicloWhile .)
    RRETURN         reduce using rule 131 (ciclos -> cicloWhile .)
    RCONSOLE        reduce using rule 131 (ciclos -> cicloWhile .)
    RINTERFACE      reduce using rule 131 (ciclos -> cicloWhile .)
    ID              reduce using rule 131 (ciclos -> cicloWhile .)
    NTYPEOF         reduce using rule 131 (ciclos -> cicloWhile .)
    NSTRING         reduce using rule 131 (ciclos -> cicloWhile .)
    NNUMBER         reduce using rule 131 (ciclos -> cicloWhile .)
    RLET            reduce using rule 131 (ciclos -> cicloWhile .)
    RFOR            reduce using rule 131 (ciclos -> cicloWhile .)
    RWHILE          reduce using rule 131 (ciclos -> cicloWhile .)
    RFUNCTION       reduce using rule 131 (ciclos -> cicloWhile .)
    RBREAK          reduce using rule 131 (ciclos -> cicloWhile .)
    RCONTINUE       reduce using rule 131 (ciclos -> cicloWhile .)
    RIF             reduce using rule 131 (ciclos -> cicloWhile .)
    $end            reduce using rule 131 (ciclos -> cicloWhile .)
    LLDER           reduce using rule 131 (ciclos -> cicloWhile .)


state 39

    (93) funciones -> funcionesP .

    PTYCOMA         reduce using rule 93 (funciones -> funcionesP .)
    RRETURN         reduce using rule 93 (funciones -> funcionesP .)
    RCONSOLE        reduce using rule 93 (funciones -> funcionesP .)
    RINTERFACE      reduce using rule 93 (funciones -> funcionesP .)
    ID              reduce using rule 93 (funciones -> funcionesP .)
    NTYPEOF         reduce using rule 93 (funciones -> funcionesP .)
    NSTRING         reduce using rule 93 (funciones -> funcionesP .)
    NNUMBER         reduce using rule 93 (funciones -> funcionesP .)
    RLET            reduce using rule 93 (funciones -> funcionesP .)
    RFOR            reduce using rule 93 (funciones -> funcionesP .)
    RWHILE          reduce using rule 93 (funciones -> funcionesP .)
    RFUNCTION       reduce using rule 93 (funciones -> funcionesP .)
    RBREAK          reduce using rule 93 (funciones -> funcionesP .)
    RCONTINUE       reduce using rule 93 (funciones -> funcionesP .)
    RIF             reduce using rule 93 (funciones -> funcionesP .)
    $end            reduce using rule 93 (funciones -> funcionesP .)
    LLDER           reduce using rule 93 (funciones -> funcionesP .)


state 40

    (94) funciones -> funcionesV .

    PTYCOMA         reduce using rule 94 (funciones -> funcionesV .)
    RRETURN         reduce using rule 94 (funciones -> funcionesV .)
    RCONSOLE        reduce using rule 94 (funciones -> funcionesV .)
    RINTERFACE      reduce using rule 94 (funciones -> funcionesV .)
    ID              reduce using rule 94 (funciones -> funcionesV .)
    NTYPEOF         reduce using rule 94 (funciones -> funcionesV .)
    NSTRING         reduce using rule 94 (funciones -> funcionesV .)
    NNUMBER         reduce using rule 94 (funciones -> funcionesV .)
    RLET            reduce using rule 94 (funciones -> funcionesV .)
    RFOR            reduce using rule 94 (funciones -> funcionesV .)
    RWHILE          reduce using rule 94 (funciones -> funcionesV .)
    RFUNCTION       reduce using rule 94 (funciones -> funcionesV .)
    RBREAK          reduce using rule 94 (funciones -> funcionesV .)
    RCONTINUE       reduce using rule 94 (funciones -> funcionesV .)
    RIF             reduce using rule 94 (funciones -> funcionesV .)
    $end            reduce using rule 94 (funciones -> funcionesV .)
    LLDER           reduce using rule 94 (funciones -> funcionesV .)


state 41

    (82) llamadaFuncion -> llamadaParam .

    PTYCOMA         reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RRETURN         reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RCONSOLE        reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RINTERFACE      reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    ID              reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    NTYPEOF         reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    NSTRING         reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    NNUMBER         reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RLET            reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RFOR            reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RWHILE          reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RFUNCTION       reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RBREAK          reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RCONTINUE       reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RIF             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    $end            reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MAS             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MENOS           reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    POR             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    DIV             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MODULO          reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    POTENCIA        reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    IGUALDAD        reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    DIFERENTE       reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MAYOR           reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MENOR           reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MAYIGUAL        reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    MENIGUAL        reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    AND             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    OR              reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    INCREMENTO      reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    DECREMENTO      reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    LLDER           reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    PARDER          reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    COMA            reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    CORDER          reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    ROF             reduce using rule 82 (llamadaFuncion -> llamadaParam .)
    RIN             reduce using rule 82 (llamadaFuncion -> llamadaParam .)


state 42

    (83) llamadaFuncion -> llamadaSin .

    PTYCOMA         reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RRETURN         reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RCONSOLE        reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RINTERFACE      reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    ID              reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    NTYPEOF         reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    NSTRING         reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    NNUMBER         reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RLET            reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RFOR            reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RWHILE          reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RFUNCTION       reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RBREAK          reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RCONTINUE       reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RIF             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    $end            reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MAS             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MENOS           reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    POR             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    DIV             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MODULO          reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    POTENCIA        reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    IGUALDAD        reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    DIFERENTE       reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MAYOR           reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MENOR           reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MAYIGUAL        reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    MENIGUAL        reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    AND             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    OR              reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    INCREMENTO      reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    DECREMENTO      reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    LLDER           reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    PARDER          reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    COMA            reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    CORDER          reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    ROF             reduce using rule 83 (llamadaFuncion -> llamadaSin .)
    RIN             reduce using rule 83 (llamadaFuncion -> llamadaSin .)


state 43

    (80) cReturn -> RRETURN . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 79
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 44

    (74) asignaciones -> asignacionVariable .

    PTYCOMA         reduce using rule 74 (asignaciones -> asignacionVariable .)
    RRETURN         reduce using rule 74 (asignaciones -> asignacionVariable .)
    RCONSOLE        reduce using rule 74 (asignaciones -> asignacionVariable .)
    RINTERFACE      reduce using rule 74 (asignaciones -> asignacionVariable .)
    ID              reduce using rule 74 (asignaciones -> asignacionVariable .)
    NTYPEOF         reduce using rule 74 (asignaciones -> asignacionVariable .)
    NSTRING         reduce using rule 74 (asignaciones -> asignacionVariable .)
    NNUMBER         reduce using rule 74 (asignaciones -> asignacionVariable .)
    RLET            reduce using rule 74 (asignaciones -> asignacionVariable .)
    RFOR            reduce using rule 74 (asignaciones -> asignacionVariable .)
    RWHILE          reduce using rule 74 (asignaciones -> asignacionVariable .)
    RFUNCTION       reduce using rule 74 (asignaciones -> asignacionVariable .)
    RBREAK          reduce using rule 74 (asignaciones -> asignacionVariable .)
    RCONTINUE       reduce using rule 74 (asignaciones -> asignacionVariable .)
    RIF             reduce using rule 74 (asignaciones -> asignacionVariable .)
    $end            reduce using rule 74 (asignaciones -> asignacionVariable .)
    LLDER           reduce using rule 74 (asignaciones -> asignacionVariable .)


state 45

    (75) asignaciones -> asignacionArreglo .

    PTYCOMA         reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RRETURN         reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RCONSOLE        reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RINTERFACE      reduce using rule 75 (asignaciones -> asignacionArreglo .)
    ID              reduce using rule 75 (asignaciones -> asignacionArreglo .)
    NTYPEOF         reduce using rule 75 (asignaciones -> asignacionArreglo .)
    NSTRING         reduce using rule 75 (asignaciones -> asignacionArreglo .)
    NNUMBER         reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RLET            reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RFOR            reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RWHILE          reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RFUNCTION       reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RBREAK          reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RCONTINUE       reduce using rule 75 (asignaciones -> asignacionArreglo .)
    RIF             reduce using rule 75 (asignaciones -> asignacionArreglo .)
    $end            reduce using rule 75 (asignaciones -> asignacionArreglo .)
    LLDER           reduce using rule 75 (asignaciones -> asignacionArreglo .)


state 46

    (76) asignaciones -> asignacionAtributo .

    PTYCOMA         reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RRETURN         reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RCONSOLE        reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RINTERFACE      reduce using rule 76 (asignaciones -> asignacionAtributo .)
    ID              reduce using rule 76 (asignaciones -> asignacionAtributo .)
    NTYPEOF         reduce using rule 76 (asignaciones -> asignacionAtributo .)
    NSTRING         reduce using rule 76 (asignaciones -> asignacionAtributo .)
    NNUMBER         reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RLET            reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RFOR            reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RWHILE          reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RFUNCTION       reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RBREAK          reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RCONTINUE       reduce using rule 76 (asignaciones -> asignacionAtributo .)
    RIF             reduce using rule 76 (asignaciones -> asignacionAtributo .)
    $end            reduce using rule 76 (asignaciones -> asignacionAtributo .)
    LLDER           reduce using rule 76 (asignaciones -> asignacionAtributo .)


state 47

    (70) de_control -> pBreak .

    PTYCOMA         reduce using rule 70 (de_control -> pBreak .)
    RRETURN         reduce using rule 70 (de_control -> pBreak .)
    RCONSOLE        reduce using rule 70 (de_control -> pBreak .)
    RINTERFACE      reduce using rule 70 (de_control -> pBreak .)
    ID              reduce using rule 70 (de_control -> pBreak .)
    NTYPEOF         reduce using rule 70 (de_control -> pBreak .)
    NSTRING         reduce using rule 70 (de_control -> pBreak .)
    NNUMBER         reduce using rule 70 (de_control -> pBreak .)
    RLET            reduce using rule 70 (de_control -> pBreak .)
    RFOR            reduce using rule 70 (de_control -> pBreak .)
    RWHILE          reduce using rule 70 (de_control -> pBreak .)
    RFUNCTION       reduce using rule 70 (de_control -> pBreak .)
    RBREAK          reduce using rule 70 (de_control -> pBreak .)
    RCONTINUE       reduce using rule 70 (de_control -> pBreak .)
    RIF             reduce using rule 70 (de_control -> pBreak .)
    $end            reduce using rule 70 (de_control -> pBreak .)
    LLDER           reduce using rule 70 (de_control -> pBreak .)


state 48

    (71) de_control -> pContinue .

    PTYCOMA         reduce using rule 71 (de_control -> pContinue .)
    RRETURN         reduce using rule 71 (de_control -> pContinue .)
    RCONSOLE        reduce using rule 71 (de_control -> pContinue .)
    RINTERFACE      reduce using rule 71 (de_control -> pContinue .)
    ID              reduce using rule 71 (de_control -> pContinue .)
    NTYPEOF         reduce using rule 71 (de_control -> pContinue .)
    NSTRING         reduce using rule 71 (de_control -> pContinue .)
    NNUMBER         reduce using rule 71 (de_control -> pContinue .)
    RLET            reduce using rule 71 (de_control -> pContinue .)
    RFOR            reduce using rule 71 (de_control -> pContinue .)
    RWHILE          reduce using rule 71 (de_control -> pContinue .)
    RFUNCTION       reduce using rule 71 (de_control -> pContinue .)
    RBREAK          reduce using rule 71 (de_control -> pContinue .)
    RCONTINUE       reduce using rule 71 (de_control -> pContinue .)
    RIF             reduce using rule 71 (de_control -> pContinue .)
    $end            reduce using rule 71 (de_control -> pContinue .)
    LLDER           reduce using rule 71 (de_control -> pContinue .)


state 49

    (103) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ paramsC PARDER

    PUNTO           shift and go to state 94


state 50

    (27) creacionStruct -> RINTERFACE . ID LLIZQ atributos LLDER

    ID              shift and go to state 95


state 51

    (69) exponencial -> ID . PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> ID . PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> ID . PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> ID . PUNTO NFIXED PARIZQ expresion PARDER
    (59) toString -> ID . PUNTO NTOSTRING PARIZQ PARDER
    (51) push -> ID . PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> ID . PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> ID . PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> ID . PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> ID . PUNTO NLENGTH
    (84) llamadaParam -> ID . PARIZQ paramsC PARDER
    (92) llamadaSin -> ID . PARIZQ PARDER
    (79) asignacionVariable -> ID . IGUAL expresion
    (78) asignacionArreglo -> ID . dimensiones IGUAL expresion
    (77) asignacionAtributo -> ID . PUNTO ID IGUAL expresion
    (65) split -> ID . PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> ID . PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> ID . dimensiones
    (170) dimensiones -> . dimensiones dimension
    (171) dimensiones -> . dimension
    (172) dimension -> . CORIZQ expresion CORDER

    PUNTO           shift and go to state 96
    PARIZQ          shift and go to state 97
    IGUAL           shift and go to state 99
    CORIZQ          shift and go to state 98

    dimensiones                    shift and go to state 100
    dimension                      shift and go to state 101

state 52

    (63) splitss -> split .

    PTYCOMA         reduce using rule 63 (splitss -> split .)
    RRETURN         reduce using rule 63 (splitss -> split .)
    RCONSOLE        reduce using rule 63 (splitss -> split .)
    RINTERFACE      reduce using rule 63 (splitss -> split .)
    ID              reduce using rule 63 (splitss -> split .)
    NTYPEOF         reduce using rule 63 (splitss -> split .)
    NSTRING         reduce using rule 63 (splitss -> split .)
    NNUMBER         reduce using rule 63 (splitss -> split .)
    RLET            reduce using rule 63 (splitss -> split .)
    RFOR            reduce using rule 63 (splitss -> split .)
    RWHILE          reduce using rule 63 (splitss -> split .)
    RFUNCTION       reduce using rule 63 (splitss -> split .)
    RBREAK          reduce using rule 63 (splitss -> split .)
    RCONTINUE       reduce using rule 63 (splitss -> split .)
    RIF             reduce using rule 63 (splitss -> split .)
    $end            reduce using rule 63 (splitss -> split .)
    MAS             reduce using rule 63 (splitss -> split .)
    MENOS           reduce using rule 63 (splitss -> split .)
    POR             reduce using rule 63 (splitss -> split .)
    DIV             reduce using rule 63 (splitss -> split .)
    MODULO          reduce using rule 63 (splitss -> split .)
    POTENCIA        reduce using rule 63 (splitss -> split .)
    IGUALDAD        reduce using rule 63 (splitss -> split .)
    DIFERENTE       reduce using rule 63 (splitss -> split .)
    MAYOR           reduce using rule 63 (splitss -> split .)
    MENOR           reduce using rule 63 (splitss -> split .)
    MAYIGUAL        reduce using rule 63 (splitss -> split .)
    MENIGUAL        reduce using rule 63 (splitss -> split .)
    AND             reduce using rule 63 (splitss -> split .)
    OR              reduce using rule 63 (splitss -> split .)
    INCREMENTO      reduce using rule 63 (splitss -> split .)
    DECREMENTO      reduce using rule 63 (splitss -> split .)
    LLDER           reduce using rule 63 (splitss -> split .)
    PARDER          reduce using rule 63 (splitss -> split .)
    COMA            reduce using rule 63 (splitss -> split .)
    CORDER          reduce using rule 63 (splitss -> split .)
    ROF             reduce using rule 63 (splitss -> split .)
    RIN             reduce using rule 63 (splitss -> split .)


state 53

    (64) splitss -> splitSin .

    PTYCOMA         reduce using rule 64 (splitss -> splitSin .)
    RRETURN         reduce using rule 64 (splitss -> splitSin .)
    RCONSOLE        reduce using rule 64 (splitss -> splitSin .)
    RINTERFACE      reduce using rule 64 (splitss -> splitSin .)
    ID              reduce using rule 64 (splitss -> splitSin .)
    NTYPEOF         reduce using rule 64 (splitss -> splitSin .)
    NSTRING         reduce using rule 64 (splitss -> splitSin .)
    NNUMBER         reduce using rule 64 (splitss -> splitSin .)
    RLET            reduce using rule 64 (splitss -> splitSin .)
    RFOR            reduce using rule 64 (splitss -> splitSin .)
    RWHILE          reduce using rule 64 (splitss -> splitSin .)
    RFUNCTION       reduce using rule 64 (splitss -> splitSin .)
    RBREAK          reduce using rule 64 (splitss -> splitSin .)
    RCONTINUE       reduce using rule 64 (splitss -> splitSin .)
    RIF             reduce using rule 64 (splitss -> splitSin .)
    $end            reduce using rule 64 (splitss -> splitSin .)
    MAS             reduce using rule 64 (splitss -> splitSin .)
    MENOS           reduce using rule 64 (splitss -> splitSin .)
    POR             reduce using rule 64 (splitss -> splitSin .)
    DIV             reduce using rule 64 (splitss -> splitSin .)
    MODULO          reduce using rule 64 (splitss -> splitSin .)
    POTENCIA        reduce using rule 64 (splitss -> splitSin .)
    IGUALDAD        reduce using rule 64 (splitss -> splitSin .)
    DIFERENTE       reduce using rule 64 (splitss -> splitSin .)
    MAYOR           reduce using rule 64 (splitss -> splitSin .)
    MENOR           reduce using rule 64 (splitss -> splitSin .)
    MAYIGUAL        reduce using rule 64 (splitss -> splitSin .)
    MENIGUAL        reduce using rule 64 (splitss -> splitSin .)
    AND             reduce using rule 64 (splitss -> splitSin .)
    OR              reduce using rule 64 (splitss -> splitSin .)
    INCREMENTO      reduce using rule 64 (splitss -> splitSin .)
    DECREMENTO      reduce using rule 64 (splitss -> splitSin .)
    LLDER           reduce using rule 64 (splitss -> splitSin .)
    PARDER          reduce using rule 64 (splitss -> splitSin .)
    COMA            reduce using rule 64 (splitss -> splitSin .)
    CORDER          reduce using rule 64 (splitss -> splitSin .)
    ROF             reduce using rule 64 (splitss -> splitSin .)
    RIN             reduce using rule 64 (splitss -> splitSin .)


state 54

    (61) typeoff -> NTYPEOF . PARIZQ expresion PARDER
    (62) typeoff -> NTYPEOF . PARIZQ PARDER

    PARIZQ          shift and go to state 102


state 55

    (60) String -> NSTRING . PARIZQ ID PARDER

    PARIZQ          shift and go to state 103


state 56

    (55) Length -> accesoArreglo . PUNTO NLENGTH
    (56) Length -> accesoArreglo . PUNTO NLENGTH PARIZQ PARDER

    PUNTO           shift and go to state 104


state 57

    (50) Number -> NNUMBER . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 105


state 58

    (114) declaracion_normal -> RLET . ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> RLET . ID IGUAL expresion
    (116) declaracion_sin_valor -> RLET . ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> RLET . ID
    (112) declaracionArray -> RLET . ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET . ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> RLET . ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> RLET . ID DOSPTS ID IGUAL LLIZQ atributos LLDER

    ID              shift and go to state 106


state 59

    (119) bloqueifs -> soloif .

    PTYCOMA         reduce using rule 119 (bloqueifs -> soloif .)
    RRETURN         reduce using rule 119 (bloqueifs -> soloif .)
    RCONSOLE        reduce using rule 119 (bloqueifs -> soloif .)
    RINTERFACE      reduce using rule 119 (bloqueifs -> soloif .)
    ID              reduce using rule 119 (bloqueifs -> soloif .)
    NTYPEOF         reduce using rule 119 (bloqueifs -> soloif .)
    NSTRING         reduce using rule 119 (bloqueifs -> soloif .)
    NNUMBER         reduce using rule 119 (bloqueifs -> soloif .)
    RLET            reduce using rule 119 (bloqueifs -> soloif .)
    RFOR            reduce using rule 119 (bloqueifs -> soloif .)
    RWHILE          reduce using rule 119 (bloqueifs -> soloif .)
    RFUNCTION       reduce using rule 119 (bloqueifs -> soloif .)
    RBREAK          reduce using rule 119 (bloqueifs -> soloif .)
    RCONTINUE       reduce using rule 119 (bloqueifs -> soloif .)
    RIF             reduce using rule 119 (bloqueifs -> soloif .)
    $end            reduce using rule 119 (bloqueifs -> soloif .)
    LLDER           reduce using rule 119 (bloqueifs -> soloif .)


state 60

    (120) bloqueifs -> ifelse .

    PTYCOMA         reduce using rule 120 (bloqueifs -> ifelse .)
    RRETURN         reduce using rule 120 (bloqueifs -> ifelse .)
    RCONSOLE        reduce using rule 120 (bloqueifs -> ifelse .)
    RINTERFACE      reduce using rule 120 (bloqueifs -> ifelse .)
    ID              reduce using rule 120 (bloqueifs -> ifelse .)
    NTYPEOF         reduce using rule 120 (bloqueifs -> ifelse .)
    NSTRING         reduce using rule 120 (bloqueifs -> ifelse .)
    NNUMBER         reduce using rule 120 (bloqueifs -> ifelse .)
    RLET            reduce using rule 120 (bloqueifs -> ifelse .)
    RFOR            reduce using rule 120 (bloqueifs -> ifelse .)
    RWHILE          reduce using rule 120 (bloqueifs -> ifelse .)
    RFUNCTION       reduce using rule 120 (bloqueifs -> ifelse .)
    RBREAK          reduce using rule 120 (bloqueifs -> ifelse .)
    RCONTINUE       reduce using rule 120 (bloqueifs -> ifelse .)
    RIF             reduce using rule 120 (bloqueifs -> ifelse .)
    $end            reduce using rule 120 (bloqueifs -> ifelse .)
    LLDER           reduce using rule 120 (bloqueifs -> ifelse .)


state 61

    (137) cliclo_for -> RFOR . PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> RFOR . PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> RFOR . PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> RFOR . PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> RFOR . PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER

    PARIZQ          shift and go to state 107


state 62

    (132) cicloForIn -> RWHILE . PARIZQ expresion PARDER LLIZQ instrucciones LLDER

    PARIZQ          shift and go to state 108


state 63

    (95) funcionesP -> RFUNCTION . ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> RFUNCTION . ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> RFUNCTION . ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> RFUNCTION . ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER

    ID              shift and go to state 109


state 64

    (72) pBreak -> RBREAK .

    PTYCOMA         reduce using rule 72 (pBreak -> RBREAK .)
    RRETURN         reduce using rule 72 (pBreak -> RBREAK .)
    RCONSOLE        reduce using rule 72 (pBreak -> RBREAK .)
    RINTERFACE      reduce using rule 72 (pBreak -> RBREAK .)
    ID              reduce using rule 72 (pBreak -> RBREAK .)
    NTYPEOF         reduce using rule 72 (pBreak -> RBREAK .)
    NSTRING         reduce using rule 72 (pBreak -> RBREAK .)
    NNUMBER         reduce using rule 72 (pBreak -> RBREAK .)
    RLET            reduce using rule 72 (pBreak -> RBREAK .)
    RFOR            reduce using rule 72 (pBreak -> RBREAK .)
    RWHILE          reduce using rule 72 (pBreak -> RBREAK .)
    RFUNCTION       reduce using rule 72 (pBreak -> RBREAK .)
    RBREAK          reduce using rule 72 (pBreak -> RBREAK .)
    RCONTINUE       reduce using rule 72 (pBreak -> RBREAK .)
    RIF             reduce using rule 72 (pBreak -> RBREAK .)
    $end            reduce using rule 72 (pBreak -> RBREAK .)
    LLDER           reduce using rule 72 (pBreak -> RBREAK .)


state 65

    (73) pContinue -> RCONTINUE .

    PTYCOMA         reduce using rule 73 (pContinue -> RCONTINUE .)
    RRETURN         reduce using rule 73 (pContinue -> RCONTINUE .)
    RCONSOLE        reduce using rule 73 (pContinue -> RCONTINUE .)
    RINTERFACE      reduce using rule 73 (pContinue -> RCONTINUE .)
    ID              reduce using rule 73 (pContinue -> RCONTINUE .)
    NTYPEOF         reduce using rule 73 (pContinue -> RCONTINUE .)
    NSTRING         reduce using rule 73 (pContinue -> RCONTINUE .)
    NNUMBER         reduce using rule 73 (pContinue -> RCONTINUE .)
    RLET            reduce using rule 73 (pContinue -> RCONTINUE .)
    RFOR            reduce using rule 73 (pContinue -> RCONTINUE .)
    RWHILE          reduce using rule 73 (pContinue -> RCONTINUE .)
    RFUNCTION       reduce using rule 73 (pContinue -> RCONTINUE .)
    RBREAK          reduce using rule 73 (pContinue -> RCONTINUE .)
    RCONTINUE       reduce using rule 73 (pContinue -> RCONTINUE .)
    RIF             reduce using rule 73 (pContinue -> RCONTINUE .)
    $end            reduce using rule 73 (pContinue -> RCONTINUE .)
    LLDER           reduce using rule 73 (pContinue -> RCONTINUE .)


state 66

    (121) soloif -> RIF . PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> RIF . PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    PARIZQ          shift and go to state 110


state 67

    (2) instrucciones -> instrucciones instruccion .

    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RINTERFACE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NTYPEOF         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NSTRING         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    NNUMBER         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLET            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLDER           reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 68

    (4) instruccion -> nativas PTYCOMA .

    RRETURN         reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RCONSOLE        reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RINTERFACE      reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    ID              reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    NTYPEOF         reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    NSTRING         reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    NNUMBER         reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RLET            reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RFOR            reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RWHILE          reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RBREAK          reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RCONTINUE       reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    RIF             reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    $end            reduce using rule 4 (instruccion -> nativas PTYCOMA .)
    LLDER           reduce using rule 4 (instruccion -> nativas PTYCOMA .)


state 69

    (5) instruccion -> declaraciones PTYCOMA .

    RRETURN         reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RCONSOLE        reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RINTERFACE      reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    ID              reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    NTYPEOF         reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    NSTRING         reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    NNUMBER         reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RLET            reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RFOR            reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RWHILE          reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RFUNCTION       reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RBREAK          reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RCONTINUE       reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    RIF             reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    $end            reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)
    LLDER           reduce using rule 5 (instruccion -> declaraciones PTYCOMA .)


state 70

    (6) instruccion -> condicional_ifs PTYCOMA .

    RRETURN         reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RCONSOLE        reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RINTERFACE      reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    ID              reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    NTYPEOF         reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    NSTRING         reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    NNUMBER         reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RLET            reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RFOR            reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RWHILE          reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RBREAK          reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RCONTINUE       reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    RIF             reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    $end            reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)
    LLDER           reduce using rule 6 (instruccion -> condicional_ifs PTYCOMA .)


state 71

    (7) instruccion -> ciclos PTYCOMA .

    RRETURN         reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RCONSOLE        reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RINTERFACE      reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    ID              reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    NTYPEOF         reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    NSTRING         reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    NNUMBER         reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RLET            reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RFOR            reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RWHILE          reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RBREAK          reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RCONTINUE       reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    RIF             reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    $end            reduce using rule 7 (instruccion -> ciclos PTYCOMA .)
    LLDER           reduce using rule 7 (instruccion -> ciclos PTYCOMA .)


state 72

    (8) instruccion -> funciones PTYCOMA .

    RRETURN         reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RCONSOLE        reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RINTERFACE      reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    ID              reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    NTYPEOF         reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    NSTRING         reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    NNUMBER         reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RLET            reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RFOR            reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RWHILE          reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RBREAK          reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RCONTINUE       reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    RIF             reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    $end            reduce using rule 8 (instruccion -> funciones PTYCOMA .)
    LLDER           reduce using rule 8 (instruccion -> funciones PTYCOMA .)


state 73

    (9) instruccion -> llamadaFuncion PTYCOMA .

    RRETURN         reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RCONSOLE        reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RINTERFACE      reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    ID              reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    NTYPEOF         reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    NSTRING         reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    NNUMBER         reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RLET            reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RFOR            reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RWHILE          reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RBREAK          reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RCONTINUE       reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    RIF             reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    $end            reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)
    LLDER           reduce using rule 9 (instruccion -> llamadaFuncion PTYCOMA .)


state 74

    (10) instruccion -> cReturn PTYCOMA .

    RRETURN         reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RCONSOLE        reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RINTERFACE      reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    ID              reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    NTYPEOF         reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    NSTRING         reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    NNUMBER         reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RLET            reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RFOR            reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RWHILE          reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RFUNCTION       reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RBREAK          reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RCONTINUE       reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    RIF             reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    $end            reduce using rule 10 (instruccion -> cReturn PTYCOMA .)
    LLDER           reduce using rule 10 (instruccion -> cReturn PTYCOMA .)


state 75

    (11) instruccion -> asignaciones PTYCOMA .

    RRETURN         reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RCONSOLE        reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RINTERFACE      reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    ID              reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    NTYPEOF         reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    NSTRING         reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    NNUMBER         reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RLET            reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RFOR            reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RWHILE          reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RFUNCTION       reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RBREAK          reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RCONTINUE       reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    RIF             reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    $end            reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)
    LLDER           reduce using rule 11 (instruccion -> asignaciones PTYCOMA .)


state 76

    (12) instruccion -> de_control PTYCOMA .

    RRETURN         reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RCONSOLE        reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RINTERFACE      reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    ID              reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    NTYPEOF         reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    NSTRING         reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    NNUMBER         reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RLET            reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RFOR            reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RWHILE          reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RFUNCTION       reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RBREAK          reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RCONTINUE       reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    RIF             reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    $end            reduce using rule 12 (instruccion -> de_control PTYCOMA .)
    LLDER           reduce using rule 12 (instruccion -> de_control PTYCOMA .)


state 77

    (13) instruccion -> imprimir PTYCOMA .

    RRETURN         reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RCONSOLE        reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RINTERFACE      reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    ID              reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    NTYPEOF         reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    NSTRING         reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    NNUMBER         reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RLET            reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RFOR            reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RWHILE          reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RFUNCTION       reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RBREAK          reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RCONTINUE       reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    RIF             reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    $end            reduce using rule 13 (instruccion -> imprimir PTYCOMA .)
    LLDER           reduce using rule 13 (instruccion -> imprimir PTYCOMA .)


state 78

    (14) instruccion -> creacionStruct PTYCOMA .

    RRETURN         reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RCONSOLE        reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RINTERFACE      reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    ID              reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    NTYPEOF         reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    NSTRING         reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    NNUMBER         reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RLET            reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RFOR            reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RWHILE          reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RFUNCTION       reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RBREAK          reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RCONTINUE       reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    RIF             reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    $end            reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)
    LLDER           reduce using rule 14 (instruccion -> creacionStruct PTYCOMA .)


state 79

    (80) cReturn -> RRETURN expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 80 (cReturn -> RRETURN expresion .)
    RRETURN         reduce using rule 80 (cReturn -> RRETURN expresion .)
    RCONSOLE        reduce using rule 80 (cReturn -> RRETURN expresion .)
    RINTERFACE      reduce using rule 80 (cReturn -> RRETURN expresion .)
    ID              reduce using rule 80 (cReturn -> RRETURN expresion .)
    NTYPEOF         reduce using rule 80 (cReturn -> RRETURN expresion .)
    NSTRING         reduce using rule 80 (cReturn -> RRETURN expresion .)
    NNUMBER         reduce using rule 80 (cReturn -> RRETURN expresion .)
    RLET            reduce using rule 80 (cReturn -> RRETURN expresion .)
    RFOR            reduce using rule 80 (cReturn -> RRETURN expresion .)
    RWHILE          reduce using rule 80 (cReturn -> RRETURN expresion .)
    RFUNCTION       reduce using rule 80 (cReturn -> RRETURN expresion .)
    RBREAK          reduce using rule 80 (cReturn -> RRETURN expresion .)
    RCONTINUE       reduce using rule 80 (cReturn -> RRETURN expresion .)
    RIF             reduce using rule 80 (cReturn -> RRETURN expresion .)
    $end            reduce using rule 80 (cReturn -> RRETURN expresion .)
    LLDER           reduce using rule 80 (cReturn -> RRETURN expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 80

    (33) expresion -> LLIZQ . atributos LLDER
    (28) atributos -> . conTipo
    (29) atributos -> . sinTipo
    (34) conTipo -> . conTipo atributo
    (35) conTipo -> . atributo
    (30) sinTipo -> . sinTipo COMA listaAtr
    (31) sinTipo -> . listaAtr
    (36) atributo -> . ID DOSPTS tipo PTYCOMA
    (37) atributo -> . ID DOSPTS ID PTYCOMA
    (32) listaAtr -> . ID DOSPTS expresion

    ID              shift and go to state 132

    atributos                      shift and go to state 127
    conTipo                        shift and go to state 128
    sinTipo                        shift and go to state 129
    atributo                       shift and go to state 130
    listaAtr                       shift and go to state 131

state 81

    (81) expresion -> llamadaFuncion .

    MAS             reduce using rule 81 (expresion -> llamadaFuncion .)
    MENOS           reduce using rule 81 (expresion -> llamadaFuncion .)
    POR             reduce using rule 81 (expresion -> llamadaFuncion .)
    DIV             reduce using rule 81 (expresion -> llamadaFuncion .)
    MODULO          reduce using rule 81 (expresion -> llamadaFuncion .)
    POTENCIA        reduce using rule 81 (expresion -> llamadaFuncion .)
    IGUALDAD        reduce using rule 81 (expresion -> llamadaFuncion .)
    DIFERENTE       reduce using rule 81 (expresion -> llamadaFuncion .)
    MAYOR           reduce using rule 81 (expresion -> llamadaFuncion .)
    MENOR           reduce using rule 81 (expresion -> llamadaFuncion .)
    MAYIGUAL        reduce using rule 81 (expresion -> llamadaFuncion .)
    MENIGUAL        reduce using rule 81 (expresion -> llamadaFuncion .)
    AND             reduce using rule 81 (expresion -> llamadaFuncion .)
    OR              reduce using rule 81 (expresion -> llamadaFuncion .)
    INCREMENTO      reduce using rule 81 (expresion -> llamadaFuncion .)
    DECREMENTO      reduce using rule 81 (expresion -> llamadaFuncion .)
    PTYCOMA         reduce using rule 81 (expresion -> llamadaFuncion .)
    RRETURN         reduce using rule 81 (expresion -> llamadaFuncion .)
    RCONSOLE        reduce using rule 81 (expresion -> llamadaFuncion .)
    RINTERFACE      reduce using rule 81 (expresion -> llamadaFuncion .)
    ID              reduce using rule 81 (expresion -> llamadaFuncion .)
    NTYPEOF         reduce using rule 81 (expresion -> llamadaFuncion .)
    NSTRING         reduce using rule 81 (expresion -> llamadaFuncion .)
    NNUMBER         reduce using rule 81 (expresion -> llamadaFuncion .)
    RLET            reduce using rule 81 (expresion -> llamadaFuncion .)
    RFOR            reduce using rule 81 (expresion -> llamadaFuncion .)
    RWHILE          reduce using rule 81 (expresion -> llamadaFuncion .)
    RFUNCTION       reduce using rule 81 (expresion -> llamadaFuncion .)
    RBREAK          reduce using rule 81 (expresion -> llamadaFuncion .)
    RCONTINUE       reduce using rule 81 (expresion -> llamadaFuncion .)
    RIF             reduce using rule 81 (expresion -> llamadaFuncion .)
    $end            reduce using rule 81 (expresion -> llamadaFuncion .)
    LLDER           reduce using rule 81 (expresion -> llamadaFuncion .)
    PARDER          reduce using rule 81 (expresion -> llamadaFuncion .)
    COMA            reduce using rule 81 (expresion -> llamadaFuncion .)
    CORDER          reduce using rule 81 (expresion -> llamadaFuncion .)
    ROF             reduce using rule 81 (expresion -> llamadaFuncion .)
    RIN             reduce using rule 81 (expresion -> llamadaFuncion .)


state 82

    (143) expresion -> PARIZQ . expresion PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 133
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 83

    (159) expresion -> MENOS . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 134
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 84

    (158) expresion -> nativas .

    MAS             reduce using rule 158 (expresion -> nativas .)
    MENOS           reduce using rule 158 (expresion -> nativas .)
    POR             reduce using rule 158 (expresion -> nativas .)
    DIV             reduce using rule 158 (expresion -> nativas .)
    MODULO          reduce using rule 158 (expresion -> nativas .)
    POTENCIA        reduce using rule 158 (expresion -> nativas .)
    IGUALDAD        reduce using rule 158 (expresion -> nativas .)
    DIFERENTE       reduce using rule 158 (expresion -> nativas .)
    MAYOR           reduce using rule 158 (expresion -> nativas .)
    MENOR           reduce using rule 158 (expresion -> nativas .)
    MAYIGUAL        reduce using rule 158 (expresion -> nativas .)
    MENIGUAL        reduce using rule 158 (expresion -> nativas .)
    AND             reduce using rule 158 (expresion -> nativas .)
    OR              reduce using rule 158 (expresion -> nativas .)
    INCREMENTO      reduce using rule 158 (expresion -> nativas .)
    DECREMENTO      reduce using rule 158 (expresion -> nativas .)
    PTYCOMA         reduce using rule 158 (expresion -> nativas .)
    RRETURN         reduce using rule 158 (expresion -> nativas .)
    RCONSOLE        reduce using rule 158 (expresion -> nativas .)
    RINTERFACE      reduce using rule 158 (expresion -> nativas .)
    ID              reduce using rule 158 (expresion -> nativas .)
    NTYPEOF         reduce using rule 158 (expresion -> nativas .)
    NSTRING         reduce using rule 158 (expresion -> nativas .)
    NNUMBER         reduce using rule 158 (expresion -> nativas .)
    RLET            reduce using rule 158 (expresion -> nativas .)
    RFOR            reduce using rule 158 (expresion -> nativas .)
    RWHILE          reduce using rule 158 (expresion -> nativas .)
    RFUNCTION       reduce using rule 158 (expresion -> nativas .)
    RBREAK          reduce using rule 158 (expresion -> nativas .)
    RCONTINUE       reduce using rule 158 (expresion -> nativas .)
    RIF             reduce using rule 158 (expresion -> nativas .)
    $end            reduce using rule 158 (expresion -> nativas .)
    LLDER           reduce using rule 158 (expresion -> nativas .)
    PARDER          reduce using rule 158 (expresion -> nativas .)
    COMA            reduce using rule 158 (expresion -> nativas .)
    CORDER          reduce using rule 158 (expresion -> nativas .)
    ROF             reduce using rule 158 (expresion -> nativas .)
    RIN             reduce using rule 158 (expresion -> nativas .)


state 85

    (160) expresion -> NOT . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 135
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 86

    (163) expresion -> ID .
    (173) accesoArreglo -> ID . dimensiones
    (169) accesoAtributo -> ID . listaAtributo
    (84) llamadaParam -> ID . PARIZQ paramsC PARDER
    (92) llamadaSin -> ID . PARIZQ PARDER
    (69) exponencial -> ID . PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> ID . PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> ID . PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> ID . PUNTO NFIXED PARIZQ expresion PARDER
    (59) toString -> ID . PUNTO NTOSTRING PARIZQ PARDER
    (51) push -> ID . PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> ID . PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> ID . PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> ID . PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> ID . PUNTO NLENGTH
    (65) split -> ID . PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> ID . PUNTO NSPLIT PARIZQ PARDER
    (170) dimensiones -> . dimensiones dimension
    (171) dimensiones -> . dimension
    (166) listaAtributo -> . listaAtributo atr
    (167) listaAtributo -> . atr
    (172) dimension -> . CORIZQ expresion CORDER
    (168) atr -> . PUNTO ID

    MAS             reduce using rule 163 (expresion -> ID .)
    MENOS           reduce using rule 163 (expresion -> ID .)
    POR             reduce using rule 163 (expresion -> ID .)
    DIV             reduce using rule 163 (expresion -> ID .)
    MODULO          reduce using rule 163 (expresion -> ID .)
    POTENCIA        reduce using rule 163 (expresion -> ID .)
    IGUALDAD        reduce using rule 163 (expresion -> ID .)
    DIFERENTE       reduce using rule 163 (expresion -> ID .)
    MAYOR           reduce using rule 163 (expresion -> ID .)
    MENOR           reduce using rule 163 (expresion -> ID .)
    MAYIGUAL        reduce using rule 163 (expresion -> ID .)
    MENIGUAL        reduce using rule 163 (expresion -> ID .)
    AND             reduce using rule 163 (expresion -> ID .)
    OR              reduce using rule 163 (expresion -> ID .)
    INCREMENTO      reduce using rule 163 (expresion -> ID .)
    DECREMENTO      reduce using rule 163 (expresion -> ID .)
    PTYCOMA         reduce using rule 163 (expresion -> ID .)
    RRETURN         reduce using rule 163 (expresion -> ID .)
    RCONSOLE        reduce using rule 163 (expresion -> ID .)
    RINTERFACE      reduce using rule 163 (expresion -> ID .)
    ID              reduce using rule 163 (expresion -> ID .)
    NTYPEOF         reduce using rule 163 (expresion -> ID .)
    NSTRING         reduce using rule 163 (expresion -> ID .)
    NNUMBER         reduce using rule 163 (expresion -> ID .)
    RLET            reduce using rule 163 (expresion -> ID .)
    RFOR            reduce using rule 163 (expresion -> ID .)
    RWHILE          reduce using rule 163 (expresion -> ID .)
    RFUNCTION       reduce using rule 163 (expresion -> ID .)
    RBREAK          reduce using rule 163 (expresion -> ID .)
    RCONTINUE       reduce using rule 163 (expresion -> ID .)
    RIF             reduce using rule 163 (expresion -> ID .)
    $end            reduce using rule 163 (expresion -> ID .)
    LLDER           reduce using rule 163 (expresion -> ID .)
    PARDER          reduce using rule 163 (expresion -> ID .)
    COMA            reduce using rule 163 (expresion -> ID .)
    CORDER          reduce using rule 163 (expresion -> ID .)
    ROF             reduce using rule 163 (expresion -> ID .)
    RIN             reduce using rule 163 (expresion -> ID .)
    PARIZQ          shift and go to state 97
    PUNTO           shift and go to state 138
    CORIZQ          shift and go to state 98

    dimensiones                    shift and go to state 136
    listaAtributo                  shift and go to state 137
    dimension                      shift and go to state 101
    atr                            shift and go to state 139

state 87

    (164) expresion -> accesoArreglo .
    (55) Length -> accesoArreglo . PUNTO NLENGTH
    (56) Length -> accesoArreglo . PUNTO NLENGTH PARIZQ PARDER

    MAS             reduce using rule 164 (expresion -> accesoArreglo .)
    MENOS           reduce using rule 164 (expresion -> accesoArreglo .)
    POR             reduce using rule 164 (expresion -> accesoArreglo .)
    DIV             reduce using rule 164 (expresion -> accesoArreglo .)
    MODULO          reduce using rule 164 (expresion -> accesoArreglo .)
    POTENCIA        reduce using rule 164 (expresion -> accesoArreglo .)
    IGUALDAD        reduce using rule 164 (expresion -> accesoArreglo .)
    DIFERENTE       reduce using rule 164 (expresion -> accesoArreglo .)
    MAYOR           reduce using rule 164 (expresion -> accesoArreglo .)
    MENOR           reduce using rule 164 (expresion -> accesoArreglo .)
    MAYIGUAL        reduce using rule 164 (expresion -> accesoArreglo .)
    MENIGUAL        reduce using rule 164 (expresion -> accesoArreglo .)
    AND             reduce using rule 164 (expresion -> accesoArreglo .)
    OR              reduce using rule 164 (expresion -> accesoArreglo .)
    INCREMENTO      reduce using rule 164 (expresion -> accesoArreglo .)
    DECREMENTO      reduce using rule 164 (expresion -> accesoArreglo .)
    PTYCOMA         reduce using rule 164 (expresion -> accesoArreglo .)
    RRETURN         reduce using rule 164 (expresion -> accesoArreglo .)
    RCONSOLE        reduce using rule 164 (expresion -> accesoArreglo .)
    RINTERFACE      reduce using rule 164 (expresion -> accesoArreglo .)
    ID              reduce using rule 164 (expresion -> accesoArreglo .)
    NTYPEOF         reduce using rule 164 (expresion -> accesoArreglo .)
    NSTRING         reduce using rule 164 (expresion -> accesoArreglo .)
    NNUMBER         reduce using rule 164 (expresion -> accesoArreglo .)
    RLET            reduce using rule 164 (expresion -> accesoArreglo .)
    RFOR            reduce using rule 164 (expresion -> accesoArreglo .)
    RWHILE          reduce using rule 164 (expresion -> accesoArreglo .)
    RFUNCTION       reduce using rule 164 (expresion -> accesoArreglo .)
    RBREAK          reduce using rule 164 (expresion -> accesoArreglo .)
    RCONTINUE       reduce using rule 164 (expresion -> accesoArreglo .)
    RIF             reduce using rule 164 (expresion -> accesoArreglo .)
    $end            reduce using rule 164 (expresion -> accesoArreglo .)
    LLDER           reduce using rule 164 (expresion -> accesoArreglo .)
    PARDER          reduce using rule 164 (expresion -> accesoArreglo .)
    COMA            reduce using rule 164 (expresion -> accesoArreglo .)
    CORDER          reduce using rule 164 (expresion -> accesoArreglo .)
    ROF             reduce using rule 164 (expresion -> accesoArreglo .)
    RIN             reduce using rule 164 (expresion -> accesoArreglo .)
    PUNTO           shift and go to state 104


state 88

    (165) expresion -> accesoAtributo .

    MAS             reduce using rule 165 (expresion -> accesoAtributo .)
    MENOS           reduce using rule 165 (expresion -> accesoAtributo .)
    POR             reduce using rule 165 (expresion -> accesoAtributo .)
    DIV             reduce using rule 165 (expresion -> accesoAtributo .)
    MODULO          reduce using rule 165 (expresion -> accesoAtributo .)
    POTENCIA        reduce using rule 165 (expresion -> accesoAtributo .)
    IGUALDAD        reduce using rule 165 (expresion -> accesoAtributo .)
    DIFERENTE       reduce using rule 165 (expresion -> accesoAtributo .)
    MAYOR           reduce using rule 165 (expresion -> accesoAtributo .)
    MENOR           reduce using rule 165 (expresion -> accesoAtributo .)
    MAYIGUAL        reduce using rule 165 (expresion -> accesoAtributo .)
    MENIGUAL        reduce using rule 165 (expresion -> accesoAtributo .)
    AND             reduce using rule 165 (expresion -> accesoAtributo .)
    OR              reduce using rule 165 (expresion -> accesoAtributo .)
    INCREMENTO      reduce using rule 165 (expresion -> accesoAtributo .)
    DECREMENTO      reduce using rule 165 (expresion -> accesoAtributo .)
    PTYCOMA         reduce using rule 165 (expresion -> accesoAtributo .)
    RRETURN         reduce using rule 165 (expresion -> accesoAtributo .)
    RCONSOLE        reduce using rule 165 (expresion -> accesoAtributo .)
    RINTERFACE      reduce using rule 165 (expresion -> accesoAtributo .)
    ID              reduce using rule 165 (expresion -> accesoAtributo .)
    NTYPEOF         reduce using rule 165 (expresion -> accesoAtributo .)
    NSTRING         reduce using rule 165 (expresion -> accesoAtributo .)
    NNUMBER         reduce using rule 165 (expresion -> accesoAtributo .)
    RLET            reduce using rule 165 (expresion -> accesoAtributo .)
    RFOR            reduce using rule 165 (expresion -> accesoAtributo .)
    RWHILE          reduce using rule 165 (expresion -> accesoAtributo .)
    RFUNCTION       reduce using rule 165 (expresion -> accesoAtributo .)
    RBREAK          reduce using rule 165 (expresion -> accesoAtributo .)
    RCONTINUE       reduce using rule 165 (expresion -> accesoAtributo .)
    RIF             reduce using rule 165 (expresion -> accesoAtributo .)
    $end            reduce using rule 165 (expresion -> accesoAtributo .)
    LLDER           reduce using rule 165 (expresion -> accesoAtributo .)
    PARDER          reduce using rule 165 (expresion -> accesoAtributo .)
    COMA            reduce using rule 165 (expresion -> accesoAtributo .)
    CORDER          reduce using rule 165 (expresion -> accesoAtributo .)
    ROF             reduce using rule 165 (expresion -> accesoAtributo .)
    RIN             reduce using rule 165 (expresion -> accesoAtributo .)


state 89

    (174) expresion -> ENTERO .

    MAS             reduce using rule 174 (expresion -> ENTERO .)
    MENOS           reduce using rule 174 (expresion -> ENTERO .)
    POR             reduce using rule 174 (expresion -> ENTERO .)
    DIV             reduce using rule 174 (expresion -> ENTERO .)
    MODULO          reduce using rule 174 (expresion -> ENTERO .)
    POTENCIA        reduce using rule 174 (expresion -> ENTERO .)
    IGUALDAD        reduce using rule 174 (expresion -> ENTERO .)
    DIFERENTE       reduce using rule 174 (expresion -> ENTERO .)
    MAYOR           reduce using rule 174 (expresion -> ENTERO .)
    MENOR           reduce using rule 174 (expresion -> ENTERO .)
    MAYIGUAL        reduce using rule 174 (expresion -> ENTERO .)
    MENIGUAL        reduce using rule 174 (expresion -> ENTERO .)
    AND             reduce using rule 174 (expresion -> ENTERO .)
    OR              reduce using rule 174 (expresion -> ENTERO .)
    INCREMENTO      reduce using rule 174 (expresion -> ENTERO .)
    DECREMENTO      reduce using rule 174 (expresion -> ENTERO .)
    PTYCOMA         reduce using rule 174 (expresion -> ENTERO .)
    RRETURN         reduce using rule 174 (expresion -> ENTERO .)
    RCONSOLE        reduce using rule 174 (expresion -> ENTERO .)
    RINTERFACE      reduce using rule 174 (expresion -> ENTERO .)
    ID              reduce using rule 174 (expresion -> ENTERO .)
    NTYPEOF         reduce using rule 174 (expresion -> ENTERO .)
    NSTRING         reduce using rule 174 (expresion -> ENTERO .)
    NNUMBER         reduce using rule 174 (expresion -> ENTERO .)
    RLET            reduce using rule 174 (expresion -> ENTERO .)
    RFOR            reduce using rule 174 (expresion -> ENTERO .)
    RWHILE          reduce using rule 174 (expresion -> ENTERO .)
    RFUNCTION       reduce using rule 174 (expresion -> ENTERO .)
    RBREAK          reduce using rule 174 (expresion -> ENTERO .)
    RCONTINUE       reduce using rule 174 (expresion -> ENTERO .)
    RIF             reduce using rule 174 (expresion -> ENTERO .)
    $end            reduce using rule 174 (expresion -> ENTERO .)
    LLDER           reduce using rule 174 (expresion -> ENTERO .)
    PARDER          reduce using rule 174 (expresion -> ENTERO .)
    COMA            reduce using rule 174 (expresion -> ENTERO .)
    CORDER          reduce using rule 174 (expresion -> ENTERO .)
    ROF             reduce using rule 174 (expresion -> ENTERO .)
    RIN             reduce using rule 174 (expresion -> ENTERO .)


state 90

    (175) expresion -> DECIMAL .

    MAS             reduce using rule 175 (expresion -> DECIMAL .)
    MENOS           reduce using rule 175 (expresion -> DECIMAL .)
    POR             reduce using rule 175 (expresion -> DECIMAL .)
    DIV             reduce using rule 175 (expresion -> DECIMAL .)
    MODULO          reduce using rule 175 (expresion -> DECIMAL .)
    POTENCIA        reduce using rule 175 (expresion -> DECIMAL .)
    IGUALDAD        reduce using rule 175 (expresion -> DECIMAL .)
    DIFERENTE       reduce using rule 175 (expresion -> DECIMAL .)
    MAYOR           reduce using rule 175 (expresion -> DECIMAL .)
    MENOR           reduce using rule 175 (expresion -> DECIMAL .)
    MAYIGUAL        reduce using rule 175 (expresion -> DECIMAL .)
    MENIGUAL        reduce using rule 175 (expresion -> DECIMAL .)
    AND             reduce using rule 175 (expresion -> DECIMAL .)
    OR              reduce using rule 175 (expresion -> DECIMAL .)
    INCREMENTO      reduce using rule 175 (expresion -> DECIMAL .)
    DECREMENTO      reduce using rule 175 (expresion -> DECIMAL .)
    PTYCOMA         reduce using rule 175 (expresion -> DECIMAL .)
    RRETURN         reduce using rule 175 (expresion -> DECIMAL .)
    RCONSOLE        reduce using rule 175 (expresion -> DECIMAL .)
    RINTERFACE      reduce using rule 175 (expresion -> DECIMAL .)
    ID              reduce using rule 175 (expresion -> DECIMAL .)
    NTYPEOF         reduce using rule 175 (expresion -> DECIMAL .)
    NSTRING         reduce using rule 175 (expresion -> DECIMAL .)
    NNUMBER         reduce using rule 175 (expresion -> DECIMAL .)
    RLET            reduce using rule 175 (expresion -> DECIMAL .)
    RFOR            reduce using rule 175 (expresion -> DECIMAL .)
    RWHILE          reduce using rule 175 (expresion -> DECIMAL .)
    RFUNCTION       reduce using rule 175 (expresion -> DECIMAL .)
    RBREAK          reduce using rule 175 (expresion -> DECIMAL .)
    RCONTINUE       reduce using rule 175 (expresion -> DECIMAL .)
    RIF             reduce using rule 175 (expresion -> DECIMAL .)
    $end            reduce using rule 175 (expresion -> DECIMAL .)
    LLDER           reduce using rule 175 (expresion -> DECIMAL .)
    PARDER          reduce using rule 175 (expresion -> DECIMAL .)
    COMA            reduce using rule 175 (expresion -> DECIMAL .)
    CORDER          reduce using rule 175 (expresion -> DECIMAL .)
    ROF             reduce using rule 175 (expresion -> DECIMAL .)
    RIN             reduce using rule 175 (expresion -> DECIMAL .)


state 91

    (176) expresion -> CADENA .

    MAS             reduce using rule 176 (expresion -> CADENA .)
    MENOS           reduce using rule 176 (expresion -> CADENA .)
    POR             reduce using rule 176 (expresion -> CADENA .)
    DIV             reduce using rule 176 (expresion -> CADENA .)
    MODULO          reduce using rule 176 (expresion -> CADENA .)
    POTENCIA        reduce using rule 176 (expresion -> CADENA .)
    IGUALDAD        reduce using rule 176 (expresion -> CADENA .)
    DIFERENTE       reduce using rule 176 (expresion -> CADENA .)
    MAYOR           reduce using rule 176 (expresion -> CADENA .)
    MENOR           reduce using rule 176 (expresion -> CADENA .)
    MAYIGUAL        reduce using rule 176 (expresion -> CADENA .)
    MENIGUAL        reduce using rule 176 (expresion -> CADENA .)
    AND             reduce using rule 176 (expresion -> CADENA .)
    OR              reduce using rule 176 (expresion -> CADENA .)
    INCREMENTO      reduce using rule 176 (expresion -> CADENA .)
    DECREMENTO      reduce using rule 176 (expresion -> CADENA .)
    PTYCOMA         reduce using rule 176 (expresion -> CADENA .)
    RRETURN         reduce using rule 176 (expresion -> CADENA .)
    RCONSOLE        reduce using rule 176 (expresion -> CADENA .)
    RINTERFACE      reduce using rule 176 (expresion -> CADENA .)
    ID              reduce using rule 176 (expresion -> CADENA .)
    NTYPEOF         reduce using rule 176 (expresion -> CADENA .)
    NSTRING         reduce using rule 176 (expresion -> CADENA .)
    NNUMBER         reduce using rule 176 (expresion -> CADENA .)
    RLET            reduce using rule 176 (expresion -> CADENA .)
    RFOR            reduce using rule 176 (expresion -> CADENA .)
    RWHILE          reduce using rule 176 (expresion -> CADENA .)
    RFUNCTION       reduce using rule 176 (expresion -> CADENA .)
    RBREAK          reduce using rule 176 (expresion -> CADENA .)
    RCONTINUE       reduce using rule 176 (expresion -> CADENA .)
    RIF             reduce using rule 176 (expresion -> CADENA .)
    $end            reduce using rule 176 (expresion -> CADENA .)
    LLDER           reduce using rule 176 (expresion -> CADENA .)
    PARDER          reduce using rule 176 (expresion -> CADENA .)
    COMA            reduce using rule 176 (expresion -> CADENA .)
    CORDER          reduce using rule 176 (expresion -> CADENA .)
    ROF             reduce using rule 176 (expresion -> CADENA .)
    RIN             reduce using rule 176 (expresion -> CADENA .)


state 92

    (177) expresion -> RTRUE .

    MAS             reduce using rule 177 (expresion -> RTRUE .)
    MENOS           reduce using rule 177 (expresion -> RTRUE .)
    POR             reduce using rule 177 (expresion -> RTRUE .)
    DIV             reduce using rule 177 (expresion -> RTRUE .)
    MODULO          reduce using rule 177 (expresion -> RTRUE .)
    POTENCIA        reduce using rule 177 (expresion -> RTRUE .)
    IGUALDAD        reduce using rule 177 (expresion -> RTRUE .)
    DIFERENTE       reduce using rule 177 (expresion -> RTRUE .)
    MAYOR           reduce using rule 177 (expresion -> RTRUE .)
    MENOR           reduce using rule 177 (expresion -> RTRUE .)
    MAYIGUAL        reduce using rule 177 (expresion -> RTRUE .)
    MENIGUAL        reduce using rule 177 (expresion -> RTRUE .)
    AND             reduce using rule 177 (expresion -> RTRUE .)
    OR              reduce using rule 177 (expresion -> RTRUE .)
    INCREMENTO      reduce using rule 177 (expresion -> RTRUE .)
    DECREMENTO      reduce using rule 177 (expresion -> RTRUE .)
    PTYCOMA         reduce using rule 177 (expresion -> RTRUE .)
    RRETURN         reduce using rule 177 (expresion -> RTRUE .)
    RCONSOLE        reduce using rule 177 (expresion -> RTRUE .)
    RINTERFACE      reduce using rule 177 (expresion -> RTRUE .)
    ID              reduce using rule 177 (expresion -> RTRUE .)
    NTYPEOF         reduce using rule 177 (expresion -> RTRUE .)
    NSTRING         reduce using rule 177 (expresion -> RTRUE .)
    NNUMBER         reduce using rule 177 (expresion -> RTRUE .)
    RLET            reduce using rule 177 (expresion -> RTRUE .)
    RFOR            reduce using rule 177 (expresion -> RTRUE .)
    RWHILE          reduce using rule 177 (expresion -> RTRUE .)
    RFUNCTION       reduce using rule 177 (expresion -> RTRUE .)
    RBREAK          reduce using rule 177 (expresion -> RTRUE .)
    RCONTINUE       reduce using rule 177 (expresion -> RTRUE .)
    RIF             reduce using rule 177 (expresion -> RTRUE .)
    $end            reduce using rule 177 (expresion -> RTRUE .)
    LLDER           reduce using rule 177 (expresion -> RTRUE .)
    PARDER          reduce using rule 177 (expresion -> RTRUE .)
    COMA            reduce using rule 177 (expresion -> RTRUE .)
    CORDER          reduce using rule 177 (expresion -> RTRUE .)
    ROF             reduce using rule 177 (expresion -> RTRUE .)
    RIN             reduce using rule 177 (expresion -> RTRUE .)


state 93

    (178) expresion -> RFALSE .

    MAS             reduce using rule 178 (expresion -> RFALSE .)
    MENOS           reduce using rule 178 (expresion -> RFALSE .)
    POR             reduce using rule 178 (expresion -> RFALSE .)
    DIV             reduce using rule 178 (expresion -> RFALSE .)
    MODULO          reduce using rule 178 (expresion -> RFALSE .)
    POTENCIA        reduce using rule 178 (expresion -> RFALSE .)
    IGUALDAD        reduce using rule 178 (expresion -> RFALSE .)
    DIFERENTE       reduce using rule 178 (expresion -> RFALSE .)
    MAYOR           reduce using rule 178 (expresion -> RFALSE .)
    MENOR           reduce using rule 178 (expresion -> RFALSE .)
    MAYIGUAL        reduce using rule 178 (expresion -> RFALSE .)
    MENIGUAL        reduce using rule 178 (expresion -> RFALSE .)
    AND             reduce using rule 178 (expresion -> RFALSE .)
    OR              reduce using rule 178 (expresion -> RFALSE .)
    INCREMENTO      reduce using rule 178 (expresion -> RFALSE .)
    DECREMENTO      reduce using rule 178 (expresion -> RFALSE .)
    PTYCOMA         reduce using rule 178 (expresion -> RFALSE .)
    RRETURN         reduce using rule 178 (expresion -> RFALSE .)
    RCONSOLE        reduce using rule 178 (expresion -> RFALSE .)
    RINTERFACE      reduce using rule 178 (expresion -> RFALSE .)
    ID              reduce using rule 178 (expresion -> RFALSE .)
    NTYPEOF         reduce using rule 178 (expresion -> RFALSE .)
    NSTRING         reduce using rule 178 (expresion -> RFALSE .)
    NNUMBER         reduce using rule 178 (expresion -> RFALSE .)
    RLET            reduce using rule 178 (expresion -> RFALSE .)
    RFOR            reduce using rule 178 (expresion -> RFALSE .)
    RWHILE          reduce using rule 178 (expresion -> RFALSE .)
    RFUNCTION       reduce using rule 178 (expresion -> RFALSE .)
    RBREAK          reduce using rule 178 (expresion -> RFALSE .)
    RCONTINUE       reduce using rule 178 (expresion -> RFALSE .)
    RIF             reduce using rule 178 (expresion -> RFALSE .)
    $end            reduce using rule 178 (expresion -> RFALSE .)
    LLDER           reduce using rule 178 (expresion -> RFALSE .)
    PARDER          reduce using rule 178 (expresion -> RFALSE .)
    COMA            reduce using rule 178 (expresion -> RFALSE .)
    CORDER          reduce using rule 178 (expresion -> RFALSE .)
    ROF             reduce using rule 178 (expresion -> RFALSE .)
    RIN             reduce using rule 178 (expresion -> RFALSE .)


state 94

    (103) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ paramsC PARDER

    RLOG            shift and go to state 140


state 95

    (27) creacionStruct -> RINTERFACE ID . LLIZQ atributos LLDER

    LLIZQ           shift and go to state 141


state 96

    (69) exponencial -> ID PUNTO . NEXP PARIZQ expresion PARDER
    (67) toLower -> ID PUNTO . NLOWER PARIZQ PARDER
    (68) toUpper -> ID PUNTO . NUPPER PARIZQ PARDER
    (58) toFixed -> ID PUNTO . NFIXED PARIZQ expresion PARDER
    (59) toString -> ID PUNTO . NTOSTRING PARIZQ PARDER
    (51) push -> ID PUNTO . NPUSH PARIZQ expresion PARDER
    (52) push -> ID PUNTO . NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> ID PUNTO . NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> ID PUNTO . NLENGTH PARIZQ PARDER
    (54) Length -> ID PUNTO . NLENGTH
    (77) asignacionAtributo -> ID PUNTO . ID IGUAL expresion
    (65) split -> ID PUNTO . NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> ID PUNTO . NSPLIT PARIZQ PARDER

    NEXP            shift and go to state 143
    NLOWER          shift and go to state 144
    NUPPER          shift and go to state 145
    NFIXED          shift and go to state 146
    NTOSTRING       shift and go to state 147
    NPUSH           shift and go to state 148
    NCONCAT         shift and go to state 149
    NLENGTH         shift and go to state 150
    ID              shift and go to state 142
    NSPLIT          shift and go to state 151


state 97

    (84) llamadaParam -> ID PARIZQ . paramsC PARDER
    (92) llamadaSin -> ID PARIZQ . PARDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    PARDER          shift and go to state 153
    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 152
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 98

    (172) dimension -> CORIZQ . expresion CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 157
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 99

    (79) asignacionVariable -> ID IGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 158
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 100

    (78) asignacionArreglo -> ID dimensiones . IGUAL expresion
    (173) accesoArreglo -> ID dimensiones .
    (170) dimensiones -> dimensiones . dimension
    (172) dimension -> . CORIZQ expresion CORDER

    IGUAL           shift and go to state 159
    PUNTO           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    CORIZQ          shift and go to state 98

    dimension                      shift and go to state 160

state 101

    (171) dimensiones -> dimension .

    IGUAL           reduce using rule 171 (dimensiones -> dimension .)
    CORIZQ          reduce using rule 171 (dimensiones -> dimension .)
    PUNTO           reduce using rule 171 (dimensiones -> dimension .)
    MAS             reduce using rule 171 (dimensiones -> dimension .)
    MENOS           reduce using rule 171 (dimensiones -> dimension .)
    POR             reduce using rule 171 (dimensiones -> dimension .)
    DIV             reduce using rule 171 (dimensiones -> dimension .)
    MODULO          reduce using rule 171 (dimensiones -> dimension .)
    POTENCIA        reduce using rule 171 (dimensiones -> dimension .)
    IGUALDAD        reduce using rule 171 (dimensiones -> dimension .)
    DIFERENTE       reduce using rule 171 (dimensiones -> dimension .)
    MAYOR           reduce using rule 171 (dimensiones -> dimension .)
    MENOR           reduce using rule 171 (dimensiones -> dimension .)
    MAYIGUAL        reduce using rule 171 (dimensiones -> dimension .)
    MENIGUAL        reduce using rule 171 (dimensiones -> dimension .)
    AND             reduce using rule 171 (dimensiones -> dimension .)
    OR              reduce using rule 171 (dimensiones -> dimension .)
    INCREMENTO      reduce using rule 171 (dimensiones -> dimension .)
    DECREMENTO      reduce using rule 171 (dimensiones -> dimension .)
    PTYCOMA         reduce using rule 171 (dimensiones -> dimension .)
    RRETURN         reduce using rule 171 (dimensiones -> dimension .)
    RCONSOLE        reduce using rule 171 (dimensiones -> dimension .)
    RINTERFACE      reduce using rule 171 (dimensiones -> dimension .)
    ID              reduce using rule 171 (dimensiones -> dimension .)
    NTYPEOF         reduce using rule 171 (dimensiones -> dimension .)
    NSTRING         reduce using rule 171 (dimensiones -> dimension .)
    NNUMBER         reduce using rule 171 (dimensiones -> dimension .)
    RLET            reduce using rule 171 (dimensiones -> dimension .)
    RFOR            reduce using rule 171 (dimensiones -> dimension .)
    RWHILE          reduce using rule 171 (dimensiones -> dimension .)
    RFUNCTION       reduce using rule 171 (dimensiones -> dimension .)
    RBREAK          reduce using rule 171 (dimensiones -> dimension .)
    RCONTINUE       reduce using rule 171 (dimensiones -> dimension .)
    RIF             reduce using rule 171 (dimensiones -> dimension .)
    $end            reduce using rule 171 (dimensiones -> dimension .)
    LLDER           reduce using rule 171 (dimensiones -> dimension .)
    PARDER          reduce using rule 171 (dimensiones -> dimension .)
    COMA            reduce using rule 171 (dimensiones -> dimension .)
    CORDER          reduce using rule 171 (dimensiones -> dimension .)
    ROF             reduce using rule 171 (dimensiones -> dimension .)
    RIN             reduce using rule 171 (dimensiones -> dimension .)


state 102

    (61) typeoff -> NTYPEOF PARIZQ . expresion PARDER
    (62) typeoff -> NTYPEOF PARIZQ . PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    PARDER          shift and go to state 162
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 161
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 103

    (60) String -> NSTRING PARIZQ . ID PARDER

    ID              shift and go to state 163


state 104

    (55) Length -> accesoArreglo PUNTO . NLENGTH
    (56) Length -> accesoArreglo PUNTO . NLENGTH PARIZQ PARDER

    NLENGTH         shift and go to state 164


state 105

    (50) Number -> NNUMBER PARIZQ . expresion PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 165
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 106

    (114) declaracion_normal -> RLET ID . DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> RLET ID . IGUAL expresion
    (116) declaracion_sin_valor -> RLET ID . DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> RLET ID .
    (112) declaracionArray -> RLET ID . DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET ID . DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> RLET ID . IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> RLET ID . DOSPTS ID IGUAL LLIZQ atributos LLDER

    DOSPTS          shift and go to state 166
    IGUAL           shift and go to state 167
    PTYCOMA         reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RRETURN         reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RCONSOLE        reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RINTERFACE      reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    ID              reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    NTYPEOF         reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    NSTRING         reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    NNUMBER         reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RLET            reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RFOR            reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RWHILE          reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RFUNCTION       reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RBREAK          reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RCONTINUE       reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RIF             reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    $end            reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    ROF             reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    RIN             reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)
    LLDER           reduce using rule 117 (declaracion_sin_tipo_valor -> RLET ID .)


state 107

    (137) cliclo_for -> RFOR PARIZQ . declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> RFOR PARIZQ . declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> RFOR PARIZQ . declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> RFOR PARIZQ . declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> RFOR PARIZQ . declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER

    RLET            shift and go to state 58

    declaraciones                  shift and go to state 168
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33

state 108

    (132) cicloForIn -> RWHILE PARIZQ . expresion PARDER LLIZQ instrucciones LLDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 169
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 109

    (95) funcionesP -> RFUNCTION ID . PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> RFUNCTION ID . PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> RFUNCTION ID . PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> RFUNCTION ID . PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER

    PARIZQ          shift and go to state 170


state 110

    (121) soloif -> RIF PARIZQ . expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> RIF PARIZQ . expresion PARDER LLIZQ instrucciones LLDER velse
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 171
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 111

    (144) expresion -> expresion MAS . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 172
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 112

    (145) expresion -> expresion MENOS . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 173
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 113

    (146) expresion -> expresion POR . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 174
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 114

    (147) expresion -> expresion DIV . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 175
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 115

    (148) expresion -> expresion MODULO . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 176
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 116

    (149) expresion -> expresion POTENCIA . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 177
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 117

    (150) expresion -> expresion IGUALDAD . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 178
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 118

    (151) expresion -> expresion DIFERENTE . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 179
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 119

    (152) expresion -> expresion MAYOR . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 180
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 120

    (153) expresion -> expresion MENOR . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 181
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 121

    (154) expresion -> expresion MAYIGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 182
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 122

    (155) expresion -> expresion MENIGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 183
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 123

    (156) expresion -> expresion AND . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 184
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 124

    (157) expresion -> expresion OR . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 185
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 125

    (161) expresion -> expresion INCREMENTO .

    MAS             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MENOS           reduce using rule 161 (expresion -> expresion INCREMENTO .)
    POR             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    DIV             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MODULO          reduce using rule 161 (expresion -> expresion INCREMENTO .)
    POTENCIA        reduce using rule 161 (expresion -> expresion INCREMENTO .)
    IGUALDAD        reduce using rule 161 (expresion -> expresion INCREMENTO .)
    DIFERENTE       reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MAYOR           reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MENOR           reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MAYIGUAL        reduce using rule 161 (expresion -> expresion INCREMENTO .)
    MENIGUAL        reduce using rule 161 (expresion -> expresion INCREMENTO .)
    AND             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    OR              reduce using rule 161 (expresion -> expresion INCREMENTO .)
    INCREMENTO      reduce using rule 161 (expresion -> expresion INCREMENTO .)
    DECREMENTO      reduce using rule 161 (expresion -> expresion INCREMENTO .)
    PTYCOMA         reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RRETURN         reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RCONSOLE        reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RINTERFACE      reduce using rule 161 (expresion -> expresion INCREMENTO .)
    ID              reduce using rule 161 (expresion -> expresion INCREMENTO .)
    NTYPEOF         reduce using rule 161 (expresion -> expresion INCREMENTO .)
    NSTRING         reduce using rule 161 (expresion -> expresion INCREMENTO .)
    NNUMBER         reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RLET            reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RFOR            reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RWHILE          reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RFUNCTION       reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RBREAK          reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RCONTINUE       reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RIF             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    $end            reduce using rule 161 (expresion -> expresion INCREMENTO .)
    LLDER           reduce using rule 161 (expresion -> expresion INCREMENTO .)
    PARDER          reduce using rule 161 (expresion -> expresion INCREMENTO .)
    COMA            reduce using rule 161 (expresion -> expresion INCREMENTO .)
    CORDER          reduce using rule 161 (expresion -> expresion INCREMENTO .)
    ROF             reduce using rule 161 (expresion -> expresion INCREMENTO .)
    RIN             reduce using rule 161 (expresion -> expresion INCREMENTO .)


state 126

    (162) expresion -> expresion DECREMENTO .

    MAS             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MENOS           reduce using rule 162 (expresion -> expresion DECREMENTO .)
    POR             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    DIV             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MODULO          reduce using rule 162 (expresion -> expresion DECREMENTO .)
    POTENCIA        reduce using rule 162 (expresion -> expresion DECREMENTO .)
    IGUALDAD        reduce using rule 162 (expresion -> expresion DECREMENTO .)
    DIFERENTE       reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MAYOR           reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MENOR           reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MAYIGUAL        reduce using rule 162 (expresion -> expresion DECREMENTO .)
    MENIGUAL        reduce using rule 162 (expresion -> expresion DECREMENTO .)
    AND             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    OR              reduce using rule 162 (expresion -> expresion DECREMENTO .)
    INCREMENTO      reduce using rule 162 (expresion -> expresion DECREMENTO .)
    DECREMENTO      reduce using rule 162 (expresion -> expresion DECREMENTO .)
    PTYCOMA         reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RRETURN         reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RCONSOLE        reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RINTERFACE      reduce using rule 162 (expresion -> expresion DECREMENTO .)
    ID              reduce using rule 162 (expresion -> expresion DECREMENTO .)
    NTYPEOF         reduce using rule 162 (expresion -> expresion DECREMENTO .)
    NSTRING         reduce using rule 162 (expresion -> expresion DECREMENTO .)
    NNUMBER         reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RLET            reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RFOR            reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RWHILE          reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RFUNCTION       reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RBREAK          reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RCONTINUE       reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RIF             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    $end            reduce using rule 162 (expresion -> expresion DECREMENTO .)
    LLDER           reduce using rule 162 (expresion -> expresion DECREMENTO .)
    PARDER          reduce using rule 162 (expresion -> expresion DECREMENTO .)
    COMA            reduce using rule 162 (expresion -> expresion DECREMENTO .)
    CORDER          reduce using rule 162 (expresion -> expresion DECREMENTO .)
    ROF             reduce using rule 162 (expresion -> expresion DECREMENTO .)
    RIN             reduce using rule 162 (expresion -> expresion DECREMENTO .)


state 127

    (33) expresion -> LLIZQ atributos . LLDER

    LLDER           shift and go to state 186


state 128

    (28) atributos -> conTipo .
    (34) conTipo -> conTipo . atributo
    (36) atributo -> . ID DOSPTS tipo PTYCOMA
    (37) atributo -> . ID DOSPTS ID PTYCOMA

    LLDER           reduce using rule 28 (atributos -> conTipo .)
    ID              shift and go to state 188

    atributo                       shift and go to state 187

state 129

    (29) atributos -> sinTipo .
    (30) sinTipo -> sinTipo . COMA listaAtr

    LLDER           reduce using rule 29 (atributos -> sinTipo .)
    COMA            shift and go to state 189


state 130

    (35) conTipo -> atributo .

    ID              reduce using rule 35 (conTipo -> atributo .)
    LLDER           reduce using rule 35 (conTipo -> atributo .)


state 131

    (31) sinTipo -> listaAtr .

    COMA            reduce using rule 31 (sinTipo -> listaAtr .)
    LLDER           reduce using rule 31 (sinTipo -> listaAtr .)


state 132

    (36) atributo -> ID . DOSPTS tipo PTYCOMA
    (37) atributo -> ID . DOSPTS ID PTYCOMA
    (32) listaAtr -> ID . DOSPTS expresion

    DOSPTS          shift and go to state 190


state 133

    (143) expresion -> PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 191
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 134

    (159) expresion -> MENOS expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 159 (expresion -> MENOS expresion .)
    MENOS           reduce using rule 159 (expresion -> MENOS expresion .)
    POR             reduce using rule 159 (expresion -> MENOS expresion .)
    DIV             reduce using rule 159 (expresion -> MENOS expresion .)
    MODULO          reduce using rule 159 (expresion -> MENOS expresion .)
    POTENCIA        reduce using rule 159 (expresion -> MENOS expresion .)
    IGUALDAD        reduce using rule 159 (expresion -> MENOS expresion .)
    DIFERENTE       reduce using rule 159 (expresion -> MENOS expresion .)
    MAYOR           reduce using rule 159 (expresion -> MENOS expresion .)
    MENOR           reduce using rule 159 (expresion -> MENOS expresion .)
    MAYIGUAL        reduce using rule 159 (expresion -> MENOS expresion .)
    MENIGUAL        reduce using rule 159 (expresion -> MENOS expresion .)
    AND             reduce using rule 159 (expresion -> MENOS expresion .)
    OR              reduce using rule 159 (expresion -> MENOS expresion .)
    INCREMENTO      reduce using rule 159 (expresion -> MENOS expresion .)
    DECREMENTO      reduce using rule 159 (expresion -> MENOS expresion .)
    PTYCOMA         reduce using rule 159 (expresion -> MENOS expresion .)
    RRETURN         reduce using rule 159 (expresion -> MENOS expresion .)
    RCONSOLE        reduce using rule 159 (expresion -> MENOS expresion .)
    RINTERFACE      reduce using rule 159 (expresion -> MENOS expresion .)
    ID              reduce using rule 159 (expresion -> MENOS expresion .)
    NTYPEOF         reduce using rule 159 (expresion -> MENOS expresion .)
    NSTRING         reduce using rule 159 (expresion -> MENOS expresion .)
    NNUMBER         reduce using rule 159 (expresion -> MENOS expresion .)
    RLET            reduce using rule 159 (expresion -> MENOS expresion .)
    RFOR            reduce using rule 159 (expresion -> MENOS expresion .)
    RWHILE          reduce using rule 159 (expresion -> MENOS expresion .)
    RFUNCTION       reduce using rule 159 (expresion -> MENOS expresion .)
    RBREAK          reduce using rule 159 (expresion -> MENOS expresion .)
    RCONTINUE       reduce using rule 159 (expresion -> MENOS expresion .)
    RIF             reduce using rule 159 (expresion -> MENOS expresion .)
    $end            reduce using rule 159 (expresion -> MENOS expresion .)
    LLDER           reduce using rule 159 (expresion -> MENOS expresion .)
    PARDER          reduce using rule 159 (expresion -> MENOS expresion .)
    COMA            reduce using rule 159 (expresion -> MENOS expresion .)
    CORDER          reduce using rule 159 (expresion -> MENOS expresion .)
    ROF             reduce using rule 159 (expresion -> MENOS expresion .)
    RIN             reduce using rule 159 (expresion -> MENOS expresion .)

  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIV             [ shift and go to state 114 ]
  ! MODULO          [ shift and go to state 115 ]
  ! POTENCIA        [ shift and go to state 116 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 135

    (160) expresion -> NOT expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 160 (expresion -> NOT expresion .)
    MENOS           reduce using rule 160 (expresion -> NOT expresion .)
    POR             reduce using rule 160 (expresion -> NOT expresion .)
    DIV             reduce using rule 160 (expresion -> NOT expresion .)
    MODULO          reduce using rule 160 (expresion -> NOT expresion .)
    POTENCIA        reduce using rule 160 (expresion -> NOT expresion .)
    IGUALDAD        reduce using rule 160 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 160 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 160 (expresion -> NOT expresion .)
    MENOR           reduce using rule 160 (expresion -> NOT expresion .)
    MAYIGUAL        reduce using rule 160 (expresion -> NOT expresion .)
    MENIGUAL        reduce using rule 160 (expresion -> NOT expresion .)
    AND             reduce using rule 160 (expresion -> NOT expresion .)
    OR              reduce using rule 160 (expresion -> NOT expresion .)
    INCREMENTO      reduce using rule 160 (expresion -> NOT expresion .)
    DECREMENTO      reduce using rule 160 (expresion -> NOT expresion .)
    PTYCOMA         reduce using rule 160 (expresion -> NOT expresion .)
    RRETURN         reduce using rule 160 (expresion -> NOT expresion .)
    RCONSOLE        reduce using rule 160 (expresion -> NOT expresion .)
    RINTERFACE      reduce using rule 160 (expresion -> NOT expresion .)
    ID              reduce using rule 160 (expresion -> NOT expresion .)
    NTYPEOF         reduce using rule 160 (expresion -> NOT expresion .)
    NSTRING         reduce using rule 160 (expresion -> NOT expresion .)
    NNUMBER         reduce using rule 160 (expresion -> NOT expresion .)
    RLET            reduce using rule 160 (expresion -> NOT expresion .)
    RFOR            reduce using rule 160 (expresion -> NOT expresion .)
    RWHILE          reduce using rule 160 (expresion -> NOT expresion .)
    RFUNCTION       reduce using rule 160 (expresion -> NOT expresion .)
    RBREAK          reduce using rule 160 (expresion -> NOT expresion .)
    RCONTINUE       reduce using rule 160 (expresion -> NOT expresion .)
    RIF             reduce using rule 160 (expresion -> NOT expresion .)
    $end            reduce using rule 160 (expresion -> NOT expresion .)
    LLDER           reduce using rule 160 (expresion -> NOT expresion .)
    PARDER          reduce using rule 160 (expresion -> NOT expresion .)
    COMA            reduce using rule 160 (expresion -> NOT expresion .)
    CORDER          reduce using rule 160 (expresion -> NOT expresion .)
    ROF             reduce using rule 160 (expresion -> NOT expresion .)
    RIN             reduce using rule 160 (expresion -> NOT expresion .)

  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIV             [ shift and go to state 114 ]
  ! MODULO          [ shift and go to state 115 ]
  ! POTENCIA        [ shift and go to state 116 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 136

    (173) accesoArreglo -> ID dimensiones .
    (170) dimensiones -> dimensiones . dimension
    (172) dimension -> . CORIZQ expresion CORDER

    PUNTO           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MAS             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MENOS           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    POR             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    DIV             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MODULO          reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    POTENCIA        reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    IGUALDAD        reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    DIFERENTE       reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MAYOR           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MENOR           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MAYIGUAL        reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    MENIGUAL        reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    AND             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    OR              reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    INCREMENTO      reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    DECREMENTO      reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    PTYCOMA         reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RRETURN         reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RCONSOLE        reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RINTERFACE      reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    ID              reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    NTYPEOF         reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    NSTRING         reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    NNUMBER         reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RLET            reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RFOR            reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RWHILE          reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RFUNCTION       reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RBREAK          reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RCONTINUE       reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RIF             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    $end            reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    LLDER           reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    PARDER          reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    COMA            reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    CORDER          reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    ROF             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    RIN             reduce using rule 173 (accesoArreglo -> ID dimensiones .)
    CORIZQ          shift and go to state 98

    dimension                      shift and go to state 160

state 137

    (169) accesoAtributo -> ID listaAtributo .
    (166) listaAtributo -> listaAtributo . atr
    (168) atr -> . PUNTO ID

    MAS             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MENOS           reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    POR             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    DIV             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MODULO          reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    POTENCIA        reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    IGUALDAD        reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    DIFERENTE       reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MAYOR           reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MENOR           reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MAYIGUAL        reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    MENIGUAL        reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    AND             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    OR              reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    INCREMENTO      reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    DECREMENTO      reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    PTYCOMA         reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RRETURN         reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RCONSOLE        reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RINTERFACE      reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    ID              reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    NTYPEOF         reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    NSTRING         reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    NNUMBER         reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RLET            reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RFOR            reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RWHILE          reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RFUNCTION       reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RBREAK          reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RCONTINUE       reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RIF             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    $end            reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    LLDER           reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    PARDER          reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    COMA            reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    CORDER          reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    ROF             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    RIN             reduce using rule 169 (accesoAtributo -> ID listaAtributo .)
    PUNTO           shift and go to state 193

    atr                            shift and go to state 192

state 138

    (69) exponencial -> ID PUNTO . NEXP PARIZQ expresion PARDER
    (67) toLower -> ID PUNTO . NLOWER PARIZQ PARDER
    (68) toUpper -> ID PUNTO . NUPPER PARIZQ PARDER
    (58) toFixed -> ID PUNTO . NFIXED PARIZQ expresion PARDER
    (59) toString -> ID PUNTO . NTOSTRING PARIZQ PARDER
    (51) push -> ID PUNTO . NPUSH PARIZQ expresion PARDER
    (52) push -> ID PUNTO . NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> ID PUNTO . NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> ID PUNTO . NLENGTH PARIZQ PARDER
    (54) Length -> ID PUNTO . NLENGTH
    (65) split -> ID PUNTO . NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> ID PUNTO . NSPLIT PARIZQ PARDER
    (168) atr -> PUNTO . ID

    NEXP            shift and go to state 143
    NLOWER          shift and go to state 144
    NUPPER          shift and go to state 145
    NFIXED          shift and go to state 146
    NTOSTRING       shift and go to state 147
    NPUSH           shift and go to state 148
    NCONCAT         shift and go to state 149
    NLENGTH         shift and go to state 150
    NSPLIT          shift and go to state 151
    ID              shift and go to state 194


state 139

    (167) listaAtributo -> atr .

    PUNTO           reduce using rule 167 (listaAtributo -> atr .)
    MAS             reduce using rule 167 (listaAtributo -> atr .)
    MENOS           reduce using rule 167 (listaAtributo -> atr .)
    POR             reduce using rule 167 (listaAtributo -> atr .)
    DIV             reduce using rule 167 (listaAtributo -> atr .)
    MODULO          reduce using rule 167 (listaAtributo -> atr .)
    POTENCIA        reduce using rule 167 (listaAtributo -> atr .)
    IGUALDAD        reduce using rule 167 (listaAtributo -> atr .)
    DIFERENTE       reduce using rule 167 (listaAtributo -> atr .)
    MAYOR           reduce using rule 167 (listaAtributo -> atr .)
    MENOR           reduce using rule 167 (listaAtributo -> atr .)
    MAYIGUAL        reduce using rule 167 (listaAtributo -> atr .)
    MENIGUAL        reduce using rule 167 (listaAtributo -> atr .)
    AND             reduce using rule 167 (listaAtributo -> atr .)
    OR              reduce using rule 167 (listaAtributo -> atr .)
    INCREMENTO      reduce using rule 167 (listaAtributo -> atr .)
    DECREMENTO      reduce using rule 167 (listaAtributo -> atr .)
    PTYCOMA         reduce using rule 167 (listaAtributo -> atr .)
    RRETURN         reduce using rule 167 (listaAtributo -> atr .)
    RCONSOLE        reduce using rule 167 (listaAtributo -> atr .)
    RINTERFACE      reduce using rule 167 (listaAtributo -> atr .)
    ID              reduce using rule 167 (listaAtributo -> atr .)
    NTYPEOF         reduce using rule 167 (listaAtributo -> atr .)
    NSTRING         reduce using rule 167 (listaAtributo -> atr .)
    NNUMBER         reduce using rule 167 (listaAtributo -> atr .)
    RLET            reduce using rule 167 (listaAtributo -> atr .)
    RFOR            reduce using rule 167 (listaAtributo -> atr .)
    RWHILE          reduce using rule 167 (listaAtributo -> atr .)
    RFUNCTION       reduce using rule 167 (listaAtributo -> atr .)
    RBREAK          reduce using rule 167 (listaAtributo -> atr .)
    RCONTINUE       reduce using rule 167 (listaAtributo -> atr .)
    RIF             reduce using rule 167 (listaAtributo -> atr .)
    $end            reduce using rule 167 (listaAtributo -> atr .)
    LLDER           reduce using rule 167 (listaAtributo -> atr .)
    PARDER          reduce using rule 167 (listaAtributo -> atr .)
    COMA            reduce using rule 167 (listaAtributo -> atr .)
    CORDER          reduce using rule 167 (listaAtributo -> atr .)
    ROF             reduce using rule 167 (listaAtributo -> atr .)
    RIN             reduce using rule 167 (listaAtributo -> atr .)


state 140

    (103) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ paramsC PARDER

    PARIZQ          shift and go to state 195


state 141

    (27) creacionStruct -> RINTERFACE ID LLIZQ . atributos LLDER
    (28) atributos -> . conTipo
    (29) atributos -> . sinTipo
    (34) conTipo -> . conTipo atributo
    (35) conTipo -> . atributo
    (30) sinTipo -> . sinTipo COMA listaAtr
    (31) sinTipo -> . listaAtr
    (36) atributo -> . ID DOSPTS tipo PTYCOMA
    (37) atributo -> . ID DOSPTS ID PTYCOMA
    (32) listaAtr -> . ID DOSPTS expresion

    ID              shift and go to state 132

    atributos                      shift and go to state 196
    conTipo                        shift and go to state 128
    sinTipo                        shift and go to state 129
    atributo                       shift and go to state 130
    listaAtr                       shift and go to state 131

state 142

    (77) asignacionAtributo -> ID PUNTO ID . IGUAL expresion

    IGUAL           shift and go to state 197


state 143

    (69) exponencial -> ID PUNTO NEXP . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 198


state 144

    (67) toLower -> ID PUNTO NLOWER . PARIZQ PARDER

    PARIZQ          shift and go to state 199


state 145

    (68) toUpper -> ID PUNTO NUPPER . PARIZQ PARDER

    PARIZQ          shift and go to state 200


state 146

    (58) toFixed -> ID PUNTO NFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 201


state 147

    (59) toString -> ID PUNTO NTOSTRING . PARIZQ PARDER

    PARIZQ          shift and go to state 202


state 148

    (51) push -> ID PUNTO NPUSH . PARIZQ expresion PARDER
    (52) push -> ID PUNTO NPUSH . PARIZQ CORIZQ paramsC CORDER PARDER

    PARIZQ          shift and go to state 203


state 149

    (57) Concat -> ID PUNTO NCONCAT . PARIZQ CORIZQ paramsC CORDER PARDER

    PARIZQ          shift and go to state 204


state 150

    (53) Length -> ID PUNTO NLENGTH . PARIZQ PARDER
    (54) Length -> ID PUNTO NLENGTH .

    PARIZQ          shift and go to state 205
    PTYCOMA         reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RRETURN         reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RCONSOLE        reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RINTERFACE      reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    ID              reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    NTYPEOF         reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    NSTRING         reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    NNUMBER         reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RLET            reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RFOR            reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RWHILE          reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RFUNCTION       reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RBREAK          reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RCONTINUE       reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RIF             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    $end            reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MAS             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MENOS           reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    POR             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    DIV             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MODULO          reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    POTENCIA        reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    IGUALDAD        reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    DIFERENTE       reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MAYOR           reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MENOR           reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MAYIGUAL        reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    MENIGUAL        reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    AND             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    OR              reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    INCREMENTO      reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    DECREMENTO      reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    LLDER           reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    PARDER          reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    COMA            reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    CORDER          reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    ROF             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)
    RIN             reduce using rule 54 (Length -> ID PUNTO NLENGTH .)


state 151

    (65) split -> ID PUNTO NSPLIT . PARIZQ expresion PARDER
    (66) splitSin -> ID PUNTO NSPLIT . PARIZQ PARDER

    PARIZQ          shift and go to state 206


state 152

    (84) llamadaParam -> ID PARIZQ paramsC . PARDER
    (97) paramsC -> paramsC . COMA paramC

    PARDER          shift and go to state 207
    COMA            shift and go to state 208


state 153

    (92) llamadaSin -> ID PARIZQ PARDER .

    PTYCOMA         reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RRETURN         reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RCONSOLE        reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RINTERFACE      reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    ID              reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    NTYPEOF         reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    NSTRING         reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    NNUMBER         reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RLET            reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RFOR            reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RWHILE          reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RFUNCTION       reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RBREAK          reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RCONTINUE       reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RIF             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    $end            reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MAS             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MENOS           reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    POR             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    DIV             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MODULO          reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    POTENCIA        reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    IGUALDAD        reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    DIFERENTE       reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MAYOR           reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MENOR           reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    MENIGUAL        reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    AND             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    OR              reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    INCREMENTO      reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    DECREMENTO      reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    LLDER           reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    PARDER          reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    COMA            reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    CORDER          reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    ROF             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)
    RIN             reduce using rule 92 (llamadaSin -> ID PARIZQ PARDER .)


state 154

    (98) paramsC -> paramC .

    PARDER          reduce using rule 98 (paramsC -> paramC .)
    COMA            reduce using rule 98 (paramsC -> paramC .)
    CORDER          reduce using rule 98 (paramsC -> paramC .)


state 155

    (99) paramC -> expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          reduce using rule 99 (paramC -> expresion .)
    COMA            reduce using rule 99 (paramC -> expresion .)
    CORDER          reduce using rule 99 (paramC -> expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 156

    (100) paramC -> CORIZQ . paramsC CORDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 209
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 157

    (172) dimension -> CORIZQ expresion . CORDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    CORDER          shift and go to state 210
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 158

    (79) asignacionVariable -> ID IGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RRETURN         reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RCONSOLE        reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RINTERFACE      reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    ID              reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    NTYPEOF         reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    NSTRING         reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    NNUMBER         reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RLET            reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RFOR            reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RWHILE          reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RFUNCTION       reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RBREAK          reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RCONTINUE       reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    RIF             reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    $end            reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    LLDER           reduce using rule 79 (asignacionVariable -> ID IGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 159

    (78) asignacionArreglo -> ID dimensiones IGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 211
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 160

    (170) dimensiones -> dimensiones dimension .

    IGUAL           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    CORIZQ          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    PUNTO           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MAS             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MENOS           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    POR             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    DIV             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MODULO          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    POTENCIA        reduce using rule 170 (dimensiones -> dimensiones dimension .)
    IGUALDAD        reduce using rule 170 (dimensiones -> dimensiones dimension .)
    DIFERENTE       reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MAYOR           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MENOR           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MAYIGUAL        reduce using rule 170 (dimensiones -> dimensiones dimension .)
    MENIGUAL        reduce using rule 170 (dimensiones -> dimensiones dimension .)
    AND             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    OR              reduce using rule 170 (dimensiones -> dimensiones dimension .)
    INCREMENTO      reduce using rule 170 (dimensiones -> dimensiones dimension .)
    DECREMENTO      reduce using rule 170 (dimensiones -> dimensiones dimension .)
    PTYCOMA         reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RRETURN         reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RCONSOLE        reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RINTERFACE      reduce using rule 170 (dimensiones -> dimensiones dimension .)
    ID              reduce using rule 170 (dimensiones -> dimensiones dimension .)
    NTYPEOF         reduce using rule 170 (dimensiones -> dimensiones dimension .)
    NSTRING         reduce using rule 170 (dimensiones -> dimensiones dimension .)
    NNUMBER         reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RLET            reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RFOR            reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RWHILE          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RFUNCTION       reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RBREAK          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RCONTINUE       reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RIF             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    $end            reduce using rule 170 (dimensiones -> dimensiones dimension .)
    LLDER           reduce using rule 170 (dimensiones -> dimensiones dimension .)
    PARDER          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    COMA            reduce using rule 170 (dimensiones -> dimensiones dimension .)
    CORDER          reduce using rule 170 (dimensiones -> dimensiones dimension .)
    ROF             reduce using rule 170 (dimensiones -> dimensiones dimension .)
    RIN             reduce using rule 170 (dimensiones -> dimensiones dimension .)


state 161

    (61) typeoff -> NTYPEOF PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 212
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 162

    (62) typeoff -> NTYPEOF PARIZQ PARDER .

    PTYCOMA         reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RRETURN         reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RCONSOLE        reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RINTERFACE      reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    ID              reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    NTYPEOF         reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    NSTRING         reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    NNUMBER         reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RLET            reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RFOR            reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RWHILE          reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RFUNCTION       reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RBREAK          reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RCONTINUE       reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RIF             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    $end            reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MAS             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MENOS           reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    POR             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    DIV             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MODULO          reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    POTENCIA        reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    IGUALDAD        reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    DIFERENTE       reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MAYOR           reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MENOR           reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    MENIGUAL        reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    AND             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    OR              reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    INCREMENTO      reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    DECREMENTO      reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    LLDER           reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    PARDER          reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    COMA            reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    CORDER          reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    ROF             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)
    RIN             reduce using rule 62 (typeoff -> NTYPEOF PARIZQ PARDER .)


state 163

    (60) String -> NSTRING PARIZQ ID . PARDER

    PARDER          shift and go to state 213


state 164

    (55) Length -> accesoArreglo PUNTO NLENGTH .
    (56) Length -> accesoArreglo PUNTO NLENGTH . PARIZQ PARDER

    PTYCOMA         reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RRETURN         reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RCONSOLE        reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RINTERFACE      reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    ID              reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    NTYPEOF         reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    NSTRING         reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    NNUMBER         reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RLET            reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RFOR            reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RWHILE          reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RFUNCTION       reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RBREAK          reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RCONTINUE       reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RIF             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    $end            reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MAS             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MENOS           reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    POR             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    DIV             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MODULO          reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    POTENCIA        reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    IGUALDAD        reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    DIFERENTE       reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MAYOR           reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MENOR           reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MAYIGUAL        reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    MENIGUAL        reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    AND             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    OR              reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    INCREMENTO      reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    DECREMENTO      reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    LLDER           reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    PARDER          reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    COMA            reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    CORDER          reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    ROF             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    RIN             reduce using rule 55 (Length -> accesoArreglo PUNTO NLENGTH .)
    PARIZQ          shift and go to state 214


state 165

    (50) Number -> NNUMBER PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 215
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 166

    (114) declaracion_normal -> RLET ID DOSPTS . tipo IGUAL expresion
    (116) declaracion_sin_valor -> RLET ID DOSPTS . tipo
    (112) declaracionArray -> RLET ID DOSPTS . tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET ID DOSPTS . tipo CORIZQ CORDER
    (26) declaracionObjeto -> RLET ID DOSPTS . ID IGUAL LLIZQ atributos LLDER
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    ID              shift and go to state 216
    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221

    tipo                           shift and go to state 217

state 167

    (115) declaracion_sin_tipo_normal -> RLET ID IGUAL . expresion
    (111) declaracionArrayAny -> RLET ID IGUAL . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 223
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 222
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 168

    (137) cliclo_for -> RFOR PARIZQ declaraciones . PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> RFOR PARIZQ declaraciones . ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> RFOR PARIZQ declaraciones . ROF expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> RFOR PARIZQ declaraciones . RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> RFOR PARIZQ declaraciones . RIN expresion PARDER LLIZQ instrucciones LLDER

    PTYCOMA         shift and go to state 224
    ROF             shift and go to state 225
    RIN             shift and go to state 226


state 169

    (132) cicloForIn -> RWHILE PARIZQ expresion . PARDER LLIZQ instrucciones LLDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 227
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 170

    (95) funcionesP -> RFUNCTION ID PARIZQ . parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> RFUNCTION ID PARIZQ . parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> RFUNCTION ID PARIZQ . PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> RFUNCTION ID PARIZQ . PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (85) parametrosL -> . parametrosL COMA parametroL
    (86) parametrosL -> . parametroL
    (87) parametroL -> . ID DOSPTS tipo
    (88) parametroL -> . RLET ID DOSPTS tipo
    (89) parametroL -> . ID
    (90) parametroL -> . ID DOSPTS tipo CORIZQ CORDER
    (91) parametroL -> . RLET ID DOSPTS tipo CORIZQ CORDER

    PARDER          shift and go to state 230
    ID              shift and go to state 228
    RLET            shift and go to state 232

    parametrosL                    shift and go to state 229
    parametroL                     shift and go to state 231

state 171

    (121) soloif -> RIF PARIZQ expresion . PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> RIF PARIZQ expresion . PARDER LLIZQ instrucciones LLDER velse
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 233
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 172

    (144) expresion -> expresion MAS expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 144 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 144 (expresion -> expresion MAS expresion .)
    IGUALDAD        reduce using rule 144 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 144 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 144 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 144 (expresion -> expresion MAS expresion .)
    MAYIGUAL        reduce using rule 144 (expresion -> expresion MAS expresion .)
    MENIGUAL        reduce using rule 144 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 144 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 144 (expresion -> expresion MAS expresion .)
    INCREMENTO      reduce using rule 144 (expresion -> expresion MAS expresion .)
    DECREMENTO      reduce using rule 144 (expresion -> expresion MAS expresion .)
    PTYCOMA         reduce using rule 144 (expresion -> expresion MAS expresion .)
    RRETURN         reduce using rule 144 (expresion -> expresion MAS expresion .)
    RCONSOLE        reduce using rule 144 (expresion -> expresion MAS expresion .)
    RINTERFACE      reduce using rule 144 (expresion -> expresion MAS expresion .)
    ID              reduce using rule 144 (expresion -> expresion MAS expresion .)
    NTYPEOF         reduce using rule 144 (expresion -> expresion MAS expresion .)
    NSTRING         reduce using rule 144 (expresion -> expresion MAS expresion .)
    NNUMBER         reduce using rule 144 (expresion -> expresion MAS expresion .)
    RLET            reduce using rule 144 (expresion -> expresion MAS expresion .)
    RFOR            reduce using rule 144 (expresion -> expresion MAS expresion .)
    RWHILE          reduce using rule 144 (expresion -> expresion MAS expresion .)
    RFUNCTION       reduce using rule 144 (expresion -> expresion MAS expresion .)
    RBREAK          reduce using rule 144 (expresion -> expresion MAS expresion .)
    RCONTINUE       reduce using rule 144 (expresion -> expresion MAS expresion .)
    RIF             reduce using rule 144 (expresion -> expresion MAS expresion .)
    $end            reduce using rule 144 (expresion -> expresion MAS expresion .)
    LLDER           reduce using rule 144 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 144 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 144 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 144 (expresion -> expresion MAS expresion .)
    ROF             reduce using rule 144 (expresion -> expresion MAS expresion .)
    RIN             reduce using rule 144 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! POR             [ reduce using rule 144 (expresion -> expresion MAS expresion .) ]
  ! DIV             [ reduce using rule 144 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 144 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 144 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 173

    (145) expresion -> expresion MENOS expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 145 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 145 (expresion -> expresion MENOS expresion .)
    IGUALDAD        reduce using rule 145 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 145 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 145 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 145 (expresion -> expresion MENOS expresion .)
    MAYIGUAL        reduce using rule 145 (expresion -> expresion MENOS expresion .)
    MENIGUAL        reduce using rule 145 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 145 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 145 (expresion -> expresion MENOS expresion .)
    INCREMENTO      reduce using rule 145 (expresion -> expresion MENOS expresion .)
    DECREMENTO      reduce using rule 145 (expresion -> expresion MENOS expresion .)
    PTYCOMA         reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RRETURN         reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RCONSOLE        reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RINTERFACE      reduce using rule 145 (expresion -> expresion MENOS expresion .)
    ID              reduce using rule 145 (expresion -> expresion MENOS expresion .)
    NTYPEOF         reduce using rule 145 (expresion -> expresion MENOS expresion .)
    NSTRING         reduce using rule 145 (expresion -> expresion MENOS expresion .)
    NNUMBER         reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RLET            reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RFOR            reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RWHILE          reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RFUNCTION       reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RBREAK          reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RCONTINUE       reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RIF             reduce using rule 145 (expresion -> expresion MENOS expresion .)
    $end            reduce using rule 145 (expresion -> expresion MENOS expresion .)
    LLDER           reduce using rule 145 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 145 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 145 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 145 (expresion -> expresion MENOS expresion .)
    ROF             reduce using rule 145 (expresion -> expresion MENOS expresion .)
    RIN             reduce using rule 145 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! POR             [ reduce using rule 145 (expresion -> expresion MENOS expresion .) ]
  ! DIV             [ reduce using rule 145 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 145 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 145 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 174

    (146) expresion -> expresion POR expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 146 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 146 (expresion -> expresion POR expresion .)
    POR             reduce using rule 146 (expresion -> expresion POR expresion .)
    DIV             reduce using rule 146 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 146 (expresion -> expresion POR expresion .)
    IGUALDAD        reduce using rule 146 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 146 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 146 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 146 (expresion -> expresion POR expresion .)
    MAYIGUAL        reduce using rule 146 (expresion -> expresion POR expresion .)
    MENIGUAL        reduce using rule 146 (expresion -> expresion POR expresion .)
    AND             reduce using rule 146 (expresion -> expresion POR expresion .)
    OR              reduce using rule 146 (expresion -> expresion POR expresion .)
    INCREMENTO      reduce using rule 146 (expresion -> expresion POR expresion .)
    DECREMENTO      reduce using rule 146 (expresion -> expresion POR expresion .)
    PTYCOMA         reduce using rule 146 (expresion -> expresion POR expresion .)
    RRETURN         reduce using rule 146 (expresion -> expresion POR expresion .)
    RCONSOLE        reduce using rule 146 (expresion -> expresion POR expresion .)
    RINTERFACE      reduce using rule 146 (expresion -> expresion POR expresion .)
    ID              reduce using rule 146 (expresion -> expresion POR expresion .)
    NTYPEOF         reduce using rule 146 (expresion -> expresion POR expresion .)
    NSTRING         reduce using rule 146 (expresion -> expresion POR expresion .)
    NNUMBER         reduce using rule 146 (expresion -> expresion POR expresion .)
    RLET            reduce using rule 146 (expresion -> expresion POR expresion .)
    RFOR            reduce using rule 146 (expresion -> expresion POR expresion .)
    RWHILE          reduce using rule 146 (expresion -> expresion POR expresion .)
    RFUNCTION       reduce using rule 146 (expresion -> expresion POR expresion .)
    RBREAK          reduce using rule 146 (expresion -> expresion POR expresion .)
    RCONTINUE       reduce using rule 146 (expresion -> expresion POR expresion .)
    RIF             reduce using rule 146 (expresion -> expresion POR expresion .)
    $end            reduce using rule 146 (expresion -> expresion POR expresion .)
    LLDER           reduce using rule 146 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 146 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 146 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 146 (expresion -> expresion POR expresion .)
    ROF             reduce using rule 146 (expresion -> expresion POR expresion .)
    RIN             reduce using rule 146 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 146 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIV             [ shift and go to state 114 ]
  ! MODULO          [ shift and go to state 115 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 175

    (147) expresion -> expresion DIV expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 147 (expresion -> expresion DIV expresion .)
    MENOS           reduce using rule 147 (expresion -> expresion DIV expresion .)
    POR             reduce using rule 147 (expresion -> expresion DIV expresion .)
    DIV             reduce using rule 147 (expresion -> expresion DIV expresion .)
    MODULO          reduce using rule 147 (expresion -> expresion DIV expresion .)
    IGUALDAD        reduce using rule 147 (expresion -> expresion DIV expresion .)
    DIFERENTE       reduce using rule 147 (expresion -> expresion DIV expresion .)
    MAYOR           reduce using rule 147 (expresion -> expresion DIV expresion .)
    MENOR           reduce using rule 147 (expresion -> expresion DIV expresion .)
    MAYIGUAL        reduce using rule 147 (expresion -> expresion DIV expresion .)
    MENIGUAL        reduce using rule 147 (expresion -> expresion DIV expresion .)
    AND             reduce using rule 147 (expresion -> expresion DIV expresion .)
    OR              reduce using rule 147 (expresion -> expresion DIV expresion .)
    INCREMENTO      reduce using rule 147 (expresion -> expresion DIV expresion .)
    DECREMENTO      reduce using rule 147 (expresion -> expresion DIV expresion .)
    PTYCOMA         reduce using rule 147 (expresion -> expresion DIV expresion .)
    RRETURN         reduce using rule 147 (expresion -> expresion DIV expresion .)
    RCONSOLE        reduce using rule 147 (expresion -> expresion DIV expresion .)
    RINTERFACE      reduce using rule 147 (expresion -> expresion DIV expresion .)
    ID              reduce using rule 147 (expresion -> expresion DIV expresion .)
    NTYPEOF         reduce using rule 147 (expresion -> expresion DIV expresion .)
    NSTRING         reduce using rule 147 (expresion -> expresion DIV expresion .)
    NNUMBER         reduce using rule 147 (expresion -> expresion DIV expresion .)
    RLET            reduce using rule 147 (expresion -> expresion DIV expresion .)
    RFOR            reduce using rule 147 (expresion -> expresion DIV expresion .)
    RWHILE          reduce using rule 147 (expresion -> expresion DIV expresion .)
    RFUNCTION       reduce using rule 147 (expresion -> expresion DIV expresion .)
    RBREAK          reduce using rule 147 (expresion -> expresion DIV expresion .)
    RCONTINUE       reduce using rule 147 (expresion -> expresion DIV expresion .)
    RIF             reduce using rule 147 (expresion -> expresion DIV expresion .)
    $end            reduce using rule 147 (expresion -> expresion DIV expresion .)
    LLDER           reduce using rule 147 (expresion -> expresion DIV expresion .)
    PARDER          reduce using rule 147 (expresion -> expresion DIV expresion .)
    COMA            reduce using rule 147 (expresion -> expresion DIV expresion .)
    CORDER          reduce using rule 147 (expresion -> expresion DIV expresion .)
    ROF             reduce using rule 147 (expresion -> expresion DIV expresion .)
    RIN             reduce using rule 147 (expresion -> expresion DIV expresion .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 147 (expresion -> expresion DIV expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIV             [ shift and go to state 114 ]
  ! MODULO          [ shift and go to state 115 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 176

    (148) expresion -> expresion MODULO expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 148 (expresion -> expresion MODULO expresion .)
    IGUALDAD        reduce using rule 148 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MAYIGUAL        reduce using rule 148 (expresion -> expresion MODULO expresion .)
    MENIGUAL        reduce using rule 148 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 148 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 148 (expresion -> expresion MODULO expresion .)
    INCREMENTO      reduce using rule 148 (expresion -> expresion MODULO expresion .)
    DECREMENTO      reduce using rule 148 (expresion -> expresion MODULO expresion .)
    PTYCOMA         reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RRETURN         reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RCONSOLE        reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RINTERFACE      reduce using rule 148 (expresion -> expresion MODULO expresion .)
    ID              reduce using rule 148 (expresion -> expresion MODULO expresion .)
    NTYPEOF         reduce using rule 148 (expresion -> expresion MODULO expresion .)
    NSTRING         reduce using rule 148 (expresion -> expresion MODULO expresion .)
    NNUMBER         reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RLET            reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RFOR            reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RWHILE          reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RFUNCTION       reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RBREAK          reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RCONTINUE       reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RIF             reduce using rule 148 (expresion -> expresion MODULO expresion .)
    $end            reduce using rule 148 (expresion -> expresion MODULO expresion .)
    LLDER           reduce using rule 148 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 148 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 148 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 148 (expresion -> expresion MODULO expresion .)
    ROF             reduce using rule 148 (expresion -> expresion MODULO expresion .)
    RIN             reduce using rule 148 (expresion -> expresion MODULO expresion .)
    POR             shift and go to state 113
    DIV             shift and go to state 114
    POTENCIA        shift and go to state 116

  ! POR             [ reduce using rule 148 (expresion -> expresion MODULO expresion .) ]
  ! DIV             [ reduce using rule 148 (expresion -> expresion MODULO expresion .) ]
  ! POTENCIA        [ reduce using rule 148 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! MODULO          [ shift and go to state 115 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 177

    (149) expresion -> expresion POTENCIA expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    MAS             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    DIV             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    IGUALDAD        reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    DIFERENTE       reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MAYIGUAL        reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    MENIGUAL        reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    INCREMENTO      reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    DECREMENTO      reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    PTYCOMA         reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RRETURN         reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RCONSOLE        reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RINTERFACE      reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    ID              reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    NTYPEOF         reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    NSTRING         reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    NNUMBER         reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RLET            reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RFOR            reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RWHILE          reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RFUNCTION       reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RBREAK          reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RCONTINUE       reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RIF             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    $end            reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    LLDER           reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    ROF             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    RIN             reduce using rule 149 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 116

  ! POTENCIA        [ reduce using rule 149 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 111 ]
  ! MENOS           [ shift and go to state 112 ]
  ! POR             [ shift and go to state 113 ]
  ! DIV             [ shift and go to state 114 ]
  ! MODULO          [ shift and go to state 115 ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 178

    (150) expresion -> expresion IGUALDAD expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    DIFERENTE       reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    AND             reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    OR              reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    INCREMENTO      reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    DECREMENTO      reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    PTYCOMA         reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RRETURN         reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RCONSOLE        reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RINTERFACE      reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    ID              reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    NTYPEOF         reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    NSTRING         reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    NNUMBER         reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RLET            reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RFOR            reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RWHILE          reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RFUNCTION       reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RBREAK          reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RCONTINUE       reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RIF             reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    $end            reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    LLDER           reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    PARDER          reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    COMA            reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    CORDER          reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    ROF             reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    RIN             reduce using rule 150 (expresion -> expresion IGUALDAD expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122

  ! MAS             [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOS           [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! POR             [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! DIV             [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MODULO          [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! POTENCIA        [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYOR           [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENOR           [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MAYIGUAL        [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! MENIGUAL        [ reduce using rule 150 (expresion -> expresion IGUALDAD expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 179

    (151) expresion -> expresion DIFERENTE expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    INCREMENTO      reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    DECREMENTO      reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    PTYCOMA         reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RRETURN         reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RCONSOLE        reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RINTERFACE      reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    ID              reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    NTYPEOF         reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    NSTRING         reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    NNUMBER         reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RLET            reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RFOR            reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RWHILE          reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RFUNCTION       reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RBREAK          reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RCONTINUE       reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RIF             reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    $end            reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    LLDER           reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    PARDER          reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    ROF             reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    RIN             reduce using rule 151 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122

  ! MAS             [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIV             [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOR           [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYIGUAL        [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENIGUAL        [ reduce using rule 151 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 180

    (152) expresion -> expresion MAYOR expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    MAYIGUAL        reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    MENIGUAL        reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    INCREMENTO      reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    DECREMENTO      reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    PTYCOMA         reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RRETURN         reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RCONSOLE        reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RINTERFACE      reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    ID              reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    NTYPEOF         reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    NSTRING         reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    NNUMBER         reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RLET            reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RFOR            reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RWHILE          reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RFUNCTION       reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RBREAK          reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RCONTINUE       reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RIF             reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    $end            reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    LLDER           reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    ROF             reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    RIN             reduce using rule 152 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! MAS             [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! DIV             [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 152 (expresion -> expresion MAYOR expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 181

    (153) expresion -> expresion MENOR expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 153 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 153 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 153 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 153 (expresion -> expresion MENOR expresion .)
    MAYIGUAL        reduce using rule 153 (expresion -> expresion MENOR expresion .)
    MENIGUAL        reduce using rule 153 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 153 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 153 (expresion -> expresion MENOR expresion .)
    INCREMENTO      reduce using rule 153 (expresion -> expresion MENOR expresion .)
    DECREMENTO      reduce using rule 153 (expresion -> expresion MENOR expresion .)
    PTYCOMA         reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RRETURN         reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RCONSOLE        reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RINTERFACE      reduce using rule 153 (expresion -> expresion MENOR expresion .)
    ID              reduce using rule 153 (expresion -> expresion MENOR expresion .)
    NTYPEOF         reduce using rule 153 (expresion -> expresion MENOR expresion .)
    NSTRING         reduce using rule 153 (expresion -> expresion MENOR expresion .)
    NNUMBER         reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RLET            reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RFOR            reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RWHILE          reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RFUNCTION       reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RBREAK          reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RCONTINUE       reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RIF             reduce using rule 153 (expresion -> expresion MENOR expresion .)
    $end            reduce using rule 153 (expresion -> expresion MENOR expresion .)
    LLDER           reduce using rule 153 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 153 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 153 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 153 (expresion -> expresion MENOR expresion .)
    ROF             reduce using rule 153 (expresion -> expresion MENOR expresion .)
    RIN             reduce using rule 153 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! MAS             [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! DIV             [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 153 (expresion -> expresion MENOR expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 182

    (154) expresion -> expresion MAYIGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    DIFERENTE       reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    MAYOR           reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    MENOR           reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    MAYIGUAL        reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    MENIGUAL        reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    AND             reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    OR              reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    INCREMENTO      reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    DECREMENTO      reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    PTYCOMA         reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RRETURN         reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RCONSOLE        reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RINTERFACE      reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    ID              reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    NTYPEOF         reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    NSTRING         reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    NNUMBER         reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RLET            reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RFOR            reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RWHILE          reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RFUNCTION       reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RBREAK          reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RCONTINUE       reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RIF             reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    $end            reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    LLDER           reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    PARDER          reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    COMA            reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    CORDER          reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    ROF             reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    RIN             reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! MAS             [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! POR             [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! DIV             [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 154 (expresion -> expresion MAYIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 183

    (155) expresion -> expresion MENIGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    IGUALDAD        reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    DIFERENTE       reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    MAYOR           reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    MENOR           reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    MAYIGUAL        reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    MENIGUAL        reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    AND             reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    OR              reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    INCREMENTO      reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    DECREMENTO      reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    PTYCOMA         reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RRETURN         reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RCONSOLE        reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RINTERFACE      reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    ID              reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    NTYPEOF         reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    NSTRING         reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    NNUMBER         reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RLET            reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RFOR            reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RWHILE          reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RFUNCTION       reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RBREAK          reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RCONTINUE       reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RIF             reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    $end            reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    LLDER           reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    PARDER          reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    COMA            reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    CORDER          reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    ROF             reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    RIN             reduce using rule 155 (expresion -> expresion MENIGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116

  ! MAS             [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! POR             [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! DIV             [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 155 (expresion -> expresion MENIGUAL expresion .) ]
  ! IGUALDAD        [ shift and go to state 117 ]
  ! DIFERENTE       [ shift and go to state 118 ]
  ! MAYOR           [ shift and go to state 119 ]
  ! MENOR           [ shift and go to state 120 ]
  ! MAYIGUAL        [ shift and go to state 121 ]
  ! MENIGUAL        [ shift and go to state 122 ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 184

    (156) expresion -> expresion AND expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    AND             reduce using rule 156 (expresion -> expresion AND expresion .)
    OR              reduce using rule 156 (expresion -> expresion AND expresion .)
    INCREMENTO      reduce using rule 156 (expresion -> expresion AND expresion .)
    DECREMENTO      reduce using rule 156 (expresion -> expresion AND expresion .)
    PTYCOMA         reduce using rule 156 (expresion -> expresion AND expresion .)
    RRETURN         reduce using rule 156 (expresion -> expresion AND expresion .)
    RCONSOLE        reduce using rule 156 (expresion -> expresion AND expresion .)
    RINTERFACE      reduce using rule 156 (expresion -> expresion AND expresion .)
    ID              reduce using rule 156 (expresion -> expresion AND expresion .)
    NTYPEOF         reduce using rule 156 (expresion -> expresion AND expresion .)
    NSTRING         reduce using rule 156 (expresion -> expresion AND expresion .)
    NNUMBER         reduce using rule 156 (expresion -> expresion AND expresion .)
    RLET            reduce using rule 156 (expresion -> expresion AND expresion .)
    RFOR            reduce using rule 156 (expresion -> expresion AND expresion .)
    RWHILE          reduce using rule 156 (expresion -> expresion AND expresion .)
    RFUNCTION       reduce using rule 156 (expresion -> expresion AND expresion .)
    RBREAK          reduce using rule 156 (expresion -> expresion AND expresion .)
    RCONTINUE       reduce using rule 156 (expresion -> expresion AND expresion .)
    RIF             reduce using rule 156 (expresion -> expresion AND expresion .)
    $end            reduce using rule 156 (expresion -> expresion AND expresion .)
    LLDER           reduce using rule 156 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 156 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 156 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 156 (expresion -> expresion AND expresion .)
    ROF             reduce using rule 156 (expresion -> expresion AND expresion .)
    RIN             reduce using rule 156 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122

  ! MAS             [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! DIV             [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! IGUALDAD        [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MAYIGUAL        [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! MENIGUAL        [ reduce using rule 156 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 123 ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 185

    (157) expresion -> expresion OR expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    OR              reduce using rule 157 (expresion -> expresion OR expresion .)
    INCREMENTO      reduce using rule 157 (expresion -> expresion OR expresion .)
    DECREMENTO      reduce using rule 157 (expresion -> expresion OR expresion .)
    PTYCOMA         reduce using rule 157 (expresion -> expresion OR expresion .)
    RRETURN         reduce using rule 157 (expresion -> expresion OR expresion .)
    RCONSOLE        reduce using rule 157 (expresion -> expresion OR expresion .)
    RINTERFACE      reduce using rule 157 (expresion -> expresion OR expresion .)
    ID              reduce using rule 157 (expresion -> expresion OR expresion .)
    NTYPEOF         reduce using rule 157 (expresion -> expresion OR expresion .)
    NSTRING         reduce using rule 157 (expresion -> expresion OR expresion .)
    NNUMBER         reduce using rule 157 (expresion -> expresion OR expresion .)
    RLET            reduce using rule 157 (expresion -> expresion OR expresion .)
    RFOR            reduce using rule 157 (expresion -> expresion OR expresion .)
    RWHILE          reduce using rule 157 (expresion -> expresion OR expresion .)
    RFUNCTION       reduce using rule 157 (expresion -> expresion OR expresion .)
    RBREAK          reduce using rule 157 (expresion -> expresion OR expresion .)
    RCONTINUE       reduce using rule 157 (expresion -> expresion OR expresion .)
    RIF             reduce using rule 157 (expresion -> expresion OR expresion .)
    $end            reduce using rule 157 (expresion -> expresion OR expresion .)
    LLDER           reduce using rule 157 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 157 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 157 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 157 (expresion -> expresion OR expresion .)
    ROF             reduce using rule 157 (expresion -> expresion OR expresion .)
    RIN             reduce using rule 157 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123

  ! MAS             [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! DIV             [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! IGUALDAD        [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MAYIGUAL        [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! MENIGUAL        [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 157 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 124 ]
  ! INCREMENTO      [ shift and go to state 125 ]
  ! DECREMENTO      [ shift and go to state 126 ]


state 186

    (33) expresion -> LLIZQ atributos LLDER .

    MAS             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MENOS           reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    POR             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    DIV             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MODULO          reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    POTENCIA        reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    IGUALDAD        reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    DIFERENTE       reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MAYOR           reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MENOR           reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MAYIGUAL        reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    MENIGUAL        reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    AND             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    OR              reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    INCREMENTO      reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    DECREMENTO      reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    PTYCOMA         reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RRETURN         reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RCONSOLE        reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RINTERFACE      reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    ID              reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    NTYPEOF         reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    NSTRING         reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    NNUMBER         reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RLET            reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RFOR            reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RWHILE          reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RFUNCTION       reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RBREAK          reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RCONTINUE       reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RIF             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    $end            reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    LLDER           reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    PARDER          reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    COMA            reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    CORDER          reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    ROF             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)
    RIN             reduce using rule 33 (expresion -> LLIZQ atributos LLDER .)


state 187

    (34) conTipo -> conTipo atributo .

    ID              reduce using rule 34 (conTipo -> conTipo atributo .)
    LLDER           reduce using rule 34 (conTipo -> conTipo atributo .)


state 188

    (36) atributo -> ID . DOSPTS tipo PTYCOMA
    (37) atributo -> ID . DOSPTS ID PTYCOMA

    DOSPTS          shift and go to state 234


state 189

    (30) sinTipo -> sinTipo COMA . listaAtr
    (32) listaAtr -> . ID DOSPTS expresion

    ID              shift and go to state 236

    listaAtr                       shift and go to state 235

state 190

    (36) atributo -> ID DOSPTS . tipo PTYCOMA
    (37) atributo -> ID DOSPTS . ID PTYCOMA
    (32) listaAtr -> ID DOSPTS . expresion
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    ID              shift and go to state 237
    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    tipo                           shift and go to state 238
    expresion                      shift and go to state 239
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 191

    (143) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    DIV             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    PTYCOMA         reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    ID              reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RLET            reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RFOR            reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RIF             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    $end            reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    LLDER           reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    ROF             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)
    RIN             reduce using rule 143 (expresion -> PARIZQ expresion PARDER .)


state 192

    (166) listaAtributo -> listaAtributo atr .

    PUNTO           reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MAS             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MENOS           reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    POR             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    DIV             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MODULO          reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    POTENCIA        reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    IGUALDAD        reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    DIFERENTE       reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MAYOR           reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MENOR           reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MAYIGUAL        reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    MENIGUAL        reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    AND             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    OR              reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    INCREMENTO      reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    DECREMENTO      reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    PTYCOMA         reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RRETURN         reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RCONSOLE        reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RINTERFACE      reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    ID              reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    NTYPEOF         reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    NSTRING         reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    NNUMBER         reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RLET            reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RFOR            reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RWHILE          reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RFUNCTION       reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RBREAK          reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RCONTINUE       reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RIF             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    $end            reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    LLDER           reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    PARDER          reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    COMA            reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    CORDER          reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    ROF             reduce using rule 166 (listaAtributo -> listaAtributo atr .)
    RIN             reduce using rule 166 (listaAtributo -> listaAtributo atr .)


state 193

    (168) atr -> PUNTO . ID

    ID              shift and go to state 194


state 194

    (168) atr -> PUNTO ID .

    PUNTO           reduce using rule 168 (atr -> PUNTO ID .)
    MAS             reduce using rule 168 (atr -> PUNTO ID .)
    MENOS           reduce using rule 168 (atr -> PUNTO ID .)
    POR             reduce using rule 168 (atr -> PUNTO ID .)
    DIV             reduce using rule 168 (atr -> PUNTO ID .)
    MODULO          reduce using rule 168 (atr -> PUNTO ID .)
    POTENCIA        reduce using rule 168 (atr -> PUNTO ID .)
    IGUALDAD        reduce using rule 168 (atr -> PUNTO ID .)
    DIFERENTE       reduce using rule 168 (atr -> PUNTO ID .)
    MAYOR           reduce using rule 168 (atr -> PUNTO ID .)
    MENOR           reduce using rule 168 (atr -> PUNTO ID .)
    MAYIGUAL        reduce using rule 168 (atr -> PUNTO ID .)
    MENIGUAL        reduce using rule 168 (atr -> PUNTO ID .)
    AND             reduce using rule 168 (atr -> PUNTO ID .)
    OR              reduce using rule 168 (atr -> PUNTO ID .)
    INCREMENTO      reduce using rule 168 (atr -> PUNTO ID .)
    DECREMENTO      reduce using rule 168 (atr -> PUNTO ID .)
    PTYCOMA         reduce using rule 168 (atr -> PUNTO ID .)
    RRETURN         reduce using rule 168 (atr -> PUNTO ID .)
    RCONSOLE        reduce using rule 168 (atr -> PUNTO ID .)
    RINTERFACE      reduce using rule 168 (atr -> PUNTO ID .)
    ID              reduce using rule 168 (atr -> PUNTO ID .)
    NTYPEOF         reduce using rule 168 (atr -> PUNTO ID .)
    NSTRING         reduce using rule 168 (atr -> PUNTO ID .)
    NNUMBER         reduce using rule 168 (atr -> PUNTO ID .)
    RLET            reduce using rule 168 (atr -> PUNTO ID .)
    RFOR            reduce using rule 168 (atr -> PUNTO ID .)
    RWHILE          reduce using rule 168 (atr -> PUNTO ID .)
    RFUNCTION       reduce using rule 168 (atr -> PUNTO ID .)
    RBREAK          reduce using rule 168 (atr -> PUNTO ID .)
    RCONTINUE       reduce using rule 168 (atr -> PUNTO ID .)
    RIF             reduce using rule 168 (atr -> PUNTO ID .)
    $end            reduce using rule 168 (atr -> PUNTO ID .)
    LLDER           reduce using rule 168 (atr -> PUNTO ID .)
    PARDER          reduce using rule 168 (atr -> PUNTO ID .)
    COMA            reduce using rule 168 (atr -> PUNTO ID .)
    CORDER          reduce using rule 168 (atr -> PUNTO ID .)
    ROF             reduce using rule 168 (atr -> PUNTO ID .)
    RIN             reduce using rule 168 (atr -> PUNTO ID .)


state 195

    (103) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . paramsC PARDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 240
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 196

    (27) creacionStruct -> RINTERFACE ID LLIZQ atributos . LLDER

    LLDER           shift and go to state 241


state 197

    (77) asignacionAtributo -> ID PUNTO ID IGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 242
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 198

    (69) exponencial -> ID PUNTO NEXP PARIZQ . expresion PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 243
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 199

    (67) toLower -> ID PUNTO NLOWER PARIZQ . PARDER

    PARDER          shift and go to state 244


state 200

    (68) toUpper -> ID PUNTO NUPPER PARIZQ . PARDER

    PARDER          shift and go to state 245


state 201

    (58) toFixed -> ID PUNTO NFIXED PARIZQ . expresion PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 246
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 202

    (59) toString -> ID PUNTO NTOSTRING PARIZQ . PARDER

    PARDER          shift and go to state 247


state 203

    (51) push -> ID PUNTO NPUSH PARIZQ . expresion PARDER
    (52) push -> ID PUNTO NPUSH PARIZQ . CORIZQ paramsC CORDER PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 249
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 248
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 204

    (57) Concat -> ID PUNTO NCONCAT PARIZQ . CORIZQ paramsC CORDER PARDER

    CORIZQ          shift and go to state 250


state 205

    (53) Length -> ID PUNTO NLENGTH PARIZQ . PARDER

    PARDER          shift and go to state 251


state 206

    (65) split -> ID PUNTO NSPLIT PARIZQ . expresion PARDER
    (66) splitSin -> ID PUNTO NSPLIT PARIZQ . PARDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    PARDER          shift and go to state 253
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 252
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 207

    (84) llamadaParam -> ID PARIZQ paramsC PARDER .

    PTYCOMA         reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RRETURN         reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RCONSOLE        reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RINTERFACE      reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    ID              reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    NTYPEOF         reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    NSTRING         reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    NNUMBER         reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RLET            reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RFOR            reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RWHILE          reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RFUNCTION       reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RBREAK          reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RCONTINUE       reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RIF             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    $end            reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MAS             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MENOS           reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    POR             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    DIV             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MODULO          reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    POTENCIA        reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    IGUALDAD        reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    DIFERENTE       reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MAYOR           reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MENOR           reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MAYIGUAL        reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    MENIGUAL        reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    AND             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    OR              reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    INCREMENTO      reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    DECREMENTO      reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    LLDER           reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    PARDER          reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    COMA            reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    CORDER          reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    ROF             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)
    RIN             reduce using rule 84 (llamadaParam -> ID PARIZQ paramsC PARDER .)


state 208

    (97) paramsC -> paramsC COMA . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramC                         shift and go to state 254
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 209

    (100) paramC -> CORIZQ paramsC . CORDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 255
    COMA            shift and go to state 208


state 210

    (172) dimension -> CORIZQ expresion CORDER .

    IGUAL           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    CORIZQ          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    POR             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    DIV             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    IGUALDAD        reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MAYIGUAL        reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    MENIGUAL        reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    AND             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    OR              reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    INCREMENTO      reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    DECREMENTO      reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    PTYCOMA         reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RRETURN         reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RCONSOLE        reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RINTERFACE      reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    ID              reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    NTYPEOF         reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    NSTRING         reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    NNUMBER         reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RLET            reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RFOR            reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RWHILE          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RFUNCTION       reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RBREAK          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RCONTINUE       reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RIF             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    $end            reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    LLDER           reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    ROF             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)
    RIN             reduce using rule 172 (dimension -> CORIZQ expresion CORDER .)


state 211

    (78) asignacionArreglo -> ID dimensiones IGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RRETURN         reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RCONSOLE        reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RINTERFACE      reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    ID              reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    NTYPEOF         reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    NSTRING         reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    NNUMBER         reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RLET            reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RFOR            reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RWHILE          reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RFUNCTION       reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RBREAK          reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RCONTINUE       reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    RIF             reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    $end            reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    LLDER           reduce using rule 78 (asignacionArreglo -> ID dimensiones IGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 212

    (61) typeoff -> NTYPEOF PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    ID              reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RLET            reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RFOR            reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RIF             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    $end            reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MAS             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    POR             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    DIV             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MODULO          reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MENOR           reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    AND             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    OR              reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    LLDER           reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    ROF             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)
    RIN             reduce using rule 61 (typeoff -> NTYPEOF PARIZQ expresion PARDER .)


state 213

    (60) String -> NSTRING PARIZQ ID PARDER .

    PTYCOMA         reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RRETURN         reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RCONSOLE        reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RINTERFACE      reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    ID              reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    NTYPEOF         reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    NSTRING         reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    NNUMBER         reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RLET            reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RFOR            reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RWHILE          reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RFUNCTION       reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RBREAK          reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RCONTINUE       reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RIF             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    $end            reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MAS             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MENOS           reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    POR             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    DIV             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MODULO          reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    POTENCIA        reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    IGUALDAD        reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    DIFERENTE       reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MAYOR           reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MENOR           reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MAYIGUAL        reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    MENIGUAL        reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    AND             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    OR              reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    INCREMENTO      reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    DECREMENTO      reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    LLDER           reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    PARDER          reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    COMA            reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    CORDER          reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    ROF             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)
    RIN             reduce using rule 60 (String -> NSTRING PARIZQ ID PARDER .)


state 214

    (56) Length -> accesoArreglo PUNTO NLENGTH PARIZQ . PARDER

    PARDER          shift and go to state 256


state 215

    (50) Number -> NNUMBER PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    ID              reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RLET            reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RFOR            reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RIF             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    $end            reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MAS             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MENOS           reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    POR             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    DIV             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MODULO          reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MENOR           reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    AND             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    OR              reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    LLDER           reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    PARDER          reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    COMA            reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    CORDER          reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    ROF             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)
    RIN             reduce using rule 50 (Number -> NNUMBER PARIZQ expresion PARDER .)


state 216

    (26) declaracionObjeto -> RLET ID DOSPTS ID . IGUAL LLIZQ atributos LLDER
    (142) tipo -> ID .

  ! shift/reduce conflict for IGUAL resolved as shift
    IGUAL           shift and go to state 257
    CORIZQ          reduce using rule 142 (tipo -> ID .)
    PTYCOMA         reduce using rule 142 (tipo -> ID .)
    RRETURN         reduce using rule 142 (tipo -> ID .)
    RCONSOLE        reduce using rule 142 (tipo -> ID .)
    RINTERFACE      reduce using rule 142 (tipo -> ID .)
    ID              reduce using rule 142 (tipo -> ID .)
    NTYPEOF         reduce using rule 142 (tipo -> ID .)
    NSTRING         reduce using rule 142 (tipo -> ID .)
    NNUMBER         reduce using rule 142 (tipo -> ID .)
    RLET            reduce using rule 142 (tipo -> ID .)
    RFOR            reduce using rule 142 (tipo -> ID .)
    RWHILE          reduce using rule 142 (tipo -> ID .)
    RFUNCTION       reduce using rule 142 (tipo -> ID .)
    RBREAK          reduce using rule 142 (tipo -> ID .)
    RCONTINUE       reduce using rule 142 (tipo -> ID .)
    RIF             reduce using rule 142 (tipo -> ID .)
    $end            reduce using rule 142 (tipo -> ID .)
    ROF             reduce using rule 142 (tipo -> ID .)
    RIN             reduce using rule 142 (tipo -> ID .)
    LLDER           reduce using rule 142 (tipo -> ID .)

  ! IGUAL           [ reduce using rule 142 (tipo -> ID .) ]


state 217

    (114) declaracion_normal -> RLET ID DOSPTS tipo . IGUAL expresion
    (116) declaracion_sin_valor -> RLET ID DOSPTS tipo .
    (112) declaracionArray -> RLET ID DOSPTS tipo . CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET ID DOSPTS tipo . CORIZQ CORDER

    IGUAL           shift and go to state 258
    PTYCOMA         reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RRETURN         reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RCONSOLE        reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RINTERFACE      reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    ID              reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    NTYPEOF         reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    NSTRING         reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    NNUMBER         reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RLET            reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RFOR            reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RWHILE          reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RFUNCTION       reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RBREAK          reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RCONTINUE       reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RIF             reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    $end            reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    ROF             reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    RIN             reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    LLDER           reduce using rule 116 (declaracion_sin_valor -> RLET ID DOSPTS tipo .)
    CORIZQ          shift and go to state 259


state 218

    (138) tipo -> RSTRING .

    IGUAL           reduce using rule 138 (tipo -> RSTRING .)
    CORIZQ          reduce using rule 138 (tipo -> RSTRING .)
    PTYCOMA         reduce using rule 138 (tipo -> RSTRING .)
    RRETURN         reduce using rule 138 (tipo -> RSTRING .)
    RCONSOLE        reduce using rule 138 (tipo -> RSTRING .)
    RINTERFACE      reduce using rule 138 (tipo -> RSTRING .)
    ID              reduce using rule 138 (tipo -> RSTRING .)
    NTYPEOF         reduce using rule 138 (tipo -> RSTRING .)
    NSTRING         reduce using rule 138 (tipo -> RSTRING .)
    NNUMBER         reduce using rule 138 (tipo -> RSTRING .)
    RLET            reduce using rule 138 (tipo -> RSTRING .)
    RFOR            reduce using rule 138 (tipo -> RSTRING .)
    RWHILE          reduce using rule 138 (tipo -> RSTRING .)
    RFUNCTION       reduce using rule 138 (tipo -> RSTRING .)
    RBREAK          reduce using rule 138 (tipo -> RSTRING .)
    RCONTINUE       reduce using rule 138 (tipo -> RSTRING .)
    RIF             reduce using rule 138 (tipo -> RSTRING .)
    $end            reduce using rule 138 (tipo -> RSTRING .)
    ROF             reduce using rule 138 (tipo -> RSTRING .)
    RIN             reduce using rule 138 (tipo -> RSTRING .)
    LLDER           reduce using rule 138 (tipo -> RSTRING .)
    PARDER          reduce using rule 138 (tipo -> RSTRING .)
    COMA            reduce using rule 138 (tipo -> RSTRING .)
    LLIZQ           reduce using rule 138 (tipo -> RSTRING .)


state 219

    (139) tipo -> RNUMBER .

    IGUAL           reduce using rule 139 (tipo -> RNUMBER .)
    CORIZQ          reduce using rule 139 (tipo -> RNUMBER .)
    PTYCOMA         reduce using rule 139 (tipo -> RNUMBER .)
    RRETURN         reduce using rule 139 (tipo -> RNUMBER .)
    RCONSOLE        reduce using rule 139 (tipo -> RNUMBER .)
    RINTERFACE      reduce using rule 139 (tipo -> RNUMBER .)
    ID              reduce using rule 139 (tipo -> RNUMBER .)
    NTYPEOF         reduce using rule 139 (tipo -> RNUMBER .)
    NSTRING         reduce using rule 139 (tipo -> RNUMBER .)
    NNUMBER         reduce using rule 139 (tipo -> RNUMBER .)
    RLET            reduce using rule 139 (tipo -> RNUMBER .)
    RFOR            reduce using rule 139 (tipo -> RNUMBER .)
    RWHILE          reduce using rule 139 (tipo -> RNUMBER .)
    RFUNCTION       reduce using rule 139 (tipo -> RNUMBER .)
    RBREAK          reduce using rule 139 (tipo -> RNUMBER .)
    RCONTINUE       reduce using rule 139 (tipo -> RNUMBER .)
    RIF             reduce using rule 139 (tipo -> RNUMBER .)
    $end            reduce using rule 139 (tipo -> RNUMBER .)
    ROF             reduce using rule 139 (tipo -> RNUMBER .)
    RIN             reduce using rule 139 (tipo -> RNUMBER .)
    LLDER           reduce using rule 139 (tipo -> RNUMBER .)
    PARDER          reduce using rule 139 (tipo -> RNUMBER .)
    COMA            reduce using rule 139 (tipo -> RNUMBER .)
    LLIZQ           reduce using rule 139 (tipo -> RNUMBER .)


state 220

    (140) tipo -> RBOOLEAN .

    IGUAL           reduce using rule 140 (tipo -> RBOOLEAN .)
    CORIZQ          reduce using rule 140 (tipo -> RBOOLEAN .)
    PTYCOMA         reduce using rule 140 (tipo -> RBOOLEAN .)
    RRETURN         reduce using rule 140 (tipo -> RBOOLEAN .)
    RCONSOLE        reduce using rule 140 (tipo -> RBOOLEAN .)
    RINTERFACE      reduce using rule 140 (tipo -> RBOOLEAN .)
    ID              reduce using rule 140 (tipo -> RBOOLEAN .)
    NTYPEOF         reduce using rule 140 (tipo -> RBOOLEAN .)
    NSTRING         reduce using rule 140 (tipo -> RBOOLEAN .)
    NNUMBER         reduce using rule 140 (tipo -> RBOOLEAN .)
    RLET            reduce using rule 140 (tipo -> RBOOLEAN .)
    RFOR            reduce using rule 140 (tipo -> RBOOLEAN .)
    RWHILE          reduce using rule 140 (tipo -> RBOOLEAN .)
    RFUNCTION       reduce using rule 140 (tipo -> RBOOLEAN .)
    RBREAK          reduce using rule 140 (tipo -> RBOOLEAN .)
    RCONTINUE       reduce using rule 140 (tipo -> RBOOLEAN .)
    RIF             reduce using rule 140 (tipo -> RBOOLEAN .)
    $end            reduce using rule 140 (tipo -> RBOOLEAN .)
    ROF             reduce using rule 140 (tipo -> RBOOLEAN .)
    RIN             reduce using rule 140 (tipo -> RBOOLEAN .)
    LLDER           reduce using rule 140 (tipo -> RBOOLEAN .)
    PARDER          reduce using rule 140 (tipo -> RBOOLEAN .)
    COMA            reduce using rule 140 (tipo -> RBOOLEAN .)
    LLIZQ           reduce using rule 140 (tipo -> RBOOLEAN .)


state 221

    (141) tipo -> RANY .

    IGUAL           reduce using rule 141 (tipo -> RANY .)
    CORIZQ          reduce using rule 141 (tipo -> RANY .)
    PTYCOMA         reduce using rule 141 (tipo -> RANY .)
    RRETURN         reduce using rule 141 (tipo -> RANY .)
    RCONSOLE        reduce using rule 141 (tipo -> RANY .)
    RINTERFACE      reduce using rule 141 (tipo -> RANY .)
    ID              reduce using rule 141 (tipo -> RANY .)
    NTYPEOF         reduce using rule 141 (tipo -> RANY .)
    NSTRING         reduce using rule 141 (tipo -> RANY .)
    NNUMBER         reduce using rule 141 (tipo -> RANY .)
    RLET            reduce using rule 141 (tipo -> RANY .)
    RFOR            reduce using rule 141 (tipo -> RANY .)
    RWHILE          reduce using rule 141 (tipo -> RANY .)
    RFUNCTION       reduce using rule 141 (tipo -> RANY .)
    RBREAK          reduce using rule 141 (tipo -> RANY .)
    RCONTINUE       reduce using rule 141 (tipo -> RANY .)
    RIF             reduce using rule 141 (tipo -> RANY .)
    $end            reduce using rule 141 (tipo -> RANY .)
    ROF             reduce using rule 141 (tipo -> RANY .)
    RIN             reduce using rule 141 (tipo -> RANY .)
    LLDER           reduce using rule 141 (tipo -> RANY .)
    PARDER          reduce using rule 141 (tipo -> RANY .)
    COMA            reduce using rule 141 (tipo -> RANY .)
    LLIZQ           reduce using rule 141 (tipo -> RANY .)


state 222

    (115) declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RRETURN         reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RCONSOLE        reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RINTERFACE      reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    ID              reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    NTYPEOF         reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    NSTRING         reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    NNUMBER         reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RLET            reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RFOR            reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RWHILE          reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RFUNCTION       reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RBREAK          reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RCONTINUE       reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RIF             reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    $end            reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    ROF             reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    RIN             reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    LLDER           reduce using rule 115 (declaracion_sin_tipo_normal -> RLET ID IGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 223

    (111) declaracionArrayAny -> RLET ID IGUAL CORIZQ . paramsC CORDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 260
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 224

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA . expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 261
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 225

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF . CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF . expresion PARDER LLIZQ instrucciones LLDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 262
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 263
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 226

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN . CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN . expresion PARDER LLIZQ instrucciones LLDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 264
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 265
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 227

    (132) cicloForIn -> RWHILE PARIZQ expresion PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 266


state 228

    (87) parametroL -> ID . DOSPTS tipo
    (89) parametroL -> ID .
    (90) parametroL -> ID . DOSPTS tipo CORIZQ CORDER

    DOSPTS          shift and go to state 267
    PARDER          reduce using rule 89 (parametroL -> ID .)
    COMA            reduce using rule 89 (parametroL -> ID .)


state 229

    (95) funcionesP -> RFUNCTION ID PARIZQ parametrosL . PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL . PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (85) parametrosL -> parametrosL . COMA parametroL

    PARDER          shift and go to state 268
    COMA            shift and go to state 269


state 230

    (101) funcionesV -> RFUNCTION ID PARIZQ PARDER . LLIZQ instrucciones LLDER
    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER . DOSPTS tipo LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 270
    DOSPTS          shift and go to state 271


state 231

    (86) parametrosL -> parametroL .

    PARDER          reduce using rule 86 (parametrosL -> parametroL .)
    COMA            reduce using rule 86 (parametrosL -> parametroL .)


state 232

    (88) parametroL -> RLET . ID DOSPTS tipo
    (91) parametroL -> RLET . ID DOSPTS tipo CORIZQ CORDER

    ID              shift and go to state 272


state 233

    (121) soloif -> RIF PARIZQ expresion PARDER . LLIZQ instrucciones LLDER
    (122) ifelse -> RIF PARIZQ expresion PARDER . LLIZQ instrucciones LLDER velse

    LLIZQ           shift and go to state 273


state 234

    (36) atributo -> ID DOSPTS . tipo PTYCOMA
    (37) atributo -> ID DOSPTS . ID PTYCOMA
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    ID              shift and go to state 274
    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221

    tipo                           shift and go to state 238

state 235

    (30) sinTipo -> sinTipo COMA listaAtr .

    COMA            reduce using rule 30 (sinTipo -> sinTipo COMA listaAtr .)
    LLDER           reduce using rule 30 (sinTipo -> sinTipo COMA listaAtr .)


state 236

    (32) listaAtr -> ID . DOSPTS expresion

    DOSPTS          shift and go to state 275


state 237

    (37) atributo -> ID DOSPTS ID . PTYCOMA
    (142) tipo -> ID .
    (163) expresion -> ID .
    (173) accesoArreglo -> ID . dimensiones
    (169) accesoAtributo -> ID . listaAtributo
    (84) llamadaParam -> ID . PARIZQ paramsC PARDER
    (92) llamadaSin -> ID . PARIZQ PARDER
    (69) exponencial -> ID . PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> ID . PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> ID . PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> ID . PUNTO NFIXED PARIZQ expresion PARDER
    (59) toString -> ID . PUNTO NTOSTRING PARIZQ PARDER
    (51) push -> ID . PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> ID . PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> ID . PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> ID . PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> ID . PUNTO NLENGTH
    (65) split -> ID . PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> ID . PUNTO NSPLIT PARIZQ PARDER
    (170) dimensiones -> . dimensiones dimension
    (171) dimensiones -> . dimension
    (166) listaAtributo -> . listaAtributo atr
    (167) listaAtributo -> . atr
    (172) dimension -> . CORIZQ expresion CORDER
    (168) atr -> . PUNTO ID

  ! shift/reduce conflict for PTYCOMA resolved as shift
    PTYCOMA         shift and go to state 276
    MAS             reduce using rule 163 (expresion -> ID .)
    MENOS           reduce using rule 163 (expresion -> ID .)
    POR             reduce using rule 163 (expresion -> ID .)
    DIV             reduce using rule 163 (expresion -> ID .)
    MODULO          reduce using rule 163 (expresion -> ID .)
    POTENCIA        reduce using rule 163 (expresion -> ID .)
    IGUALDAD        reduce using rule 163 (expresion -> ID .)
    DIFERENTE       reduce using rule 163 (expresion -> ID .)
    MAYOR           reduce using rule 163 (expresion -> ID .)
    MENOR           reduce using rule 163 (expresion -> ID .)
    MAYIGUAL        reduce using rule 163 (expresion -> ID .)
    MENIGUAL        reduce using rule 163 (expresion -> ID .)
    AND             reduce using rule 163 (expresion -> ID .)
    OR              reduce using rule 163 (expresion -> ID .)
    INCREMENTO      reduce using rule 163 (expresion -> ID .)
    DECREMENTO      reduce using rule 163 (expresion -> ID .)
    COMA            reduce using rule 163 (expresion -> ID .)
    LLDER           reduce using rule 163 (expresion -> ID .)
    PARIZQ          shift and go to state 97
    PUNTO           shift and go to state 138
    CORIZQ          shift and go to state 98

  ! PTYCOMA         [ reduce using rule 142 (tipo -> ID .) ]

    dimensiones                    shift and go to state 136
    listaAtributo                  shift and go to state 137
    dimension                      shift and go to state 101
    atr                            shift and go to state 139

state 238

    (36) atributo -> ID DOSPTS tipo . PTYCOMA

    PTYCOMA         shift and go to state 277


state 239

    (32) listaAtr -> ID DOSPTS expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    COMA            reduce using rule 32 (listaAtr -> ID DOSPTS expresion .)
    LLDER           reduce using rule 32 (listaAtr -> ID DOSPTS expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 240

    (103) imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC . PARDER
    (97) paramsC -> paramsC . COMA paramC

    PARDER          shift and go to state 278
    COMA            shift and go to state 208


state 241

    (27) creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .

    PTYCOMA         reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RRETURN         reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RCONSOLE        reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RINTERFACE      reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    ID              reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    NTYPEOF         reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    NSTRING         reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    NNUMBER         reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RLET            reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RFOR            reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RWHILE          reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RFUNCTION       reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RBREAK          reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RCONTINUE       reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    RIF             reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    $end            reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)
    LLDER           reduce using rule 27 (creacionStruct -> RINTERFACE ID LLIZQ atributos LLDER .)


state 242

    (77) asignacionAtributo -> ID PUNTO ID IGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RRETURN         reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RCONSOLE        reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RINTERFACE      reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    ID              reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    NTYPEOF         reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    NSTRING         reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    NNUMBER         reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RLET            reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RFOR            reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RWHILE          reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RFUNCTION       reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RBREAK          reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RCONTINUE       reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    RIF             reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    $end            reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    LLDER           reduce using rule 77 (asignacionAtributo -> ID PUNTO ID IGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 243

    (69) exponencial -> ID PUNTO NEXP PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 279
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 244

    (67) toLower -> ID PUNTO NLOWER PARIZQ PARDER .

    PTYCOMA         reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RRETURN         reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RCONSOLE        reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RINTERFACE      reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    ID              reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    NTYPEOF         reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    NSTRING         reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    NNUMBER         reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RLET            reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RFOR            reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RWHILE          reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RFUNCTION       reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RBREAK          reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RCONTINUE       reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RIF             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    $end            reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MAS             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MENOS           reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    POR             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    DIV             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MODULO          reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    POTENCIA        reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    IGUALDAD        reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    DIFERENTE       reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MAYOR           reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MENOR           reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    MENIGUAL        reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    AND             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    OR              reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    INCREMENTO      reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    DECREMENTO      reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    LLDER           reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    PARDER          reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    COMA            reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    CORDER          reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    ROF             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)
    RIN             reduce using rule 67 (toLower -> ID PUNTO NLOWER PARIZQ PARDER .)


state 245

    (68) toUpper -> ID PUNTO NUPPER PARIZQ PARDER .

    PTYCOMA         reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RRETURN         reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RCONSOLE        reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RINTERFACE      reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    ID              reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    NTYPEOF         reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    NSTRING         reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    NNUMBER         reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RLET            reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RFOR            reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RWHILE          reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RFUNCTION       reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RBREAK          reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RCONTINUE       reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RIF             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    $end            reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MAS             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MENOS           reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    POR             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    DIV             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MODULO          reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    POTENCIA        reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    IGUALDAD        reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    DIFERENTE       reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MAYOR           reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MENOR           reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    MENIGUAL        reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    AND             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    OR              reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    INCREMENTO      reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    DECREMENTO      reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    LLDER           reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    PARDER          reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    COMA            reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    CORDER          reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    ROF             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)
    RIN             reduce using rule 68 (toUpper -> ID PUNTO NUPPER PARIZQ PARDER .)


state 246

    (58) toFixed -> ID PUNTO NFIXED PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 280
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 247

    (59) toString -> ID PUNTO NTOSTRING PARIZQ PARDER .

    PTYCOMA         reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RRETURN         reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RCONSOLE        reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RINTERFACE      reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    ID              reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    NTYPEOF         reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    NSTRING         reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    NNUMBER         reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RLET            reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RFOR            reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RWHILE          reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RFUNCTION       reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RBREAK          reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RCONTINUE       reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RIF             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    $end            reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MAS             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MENOS           reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    POR             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    DIV             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MODULO          reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    POTENCIA        reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    IGUALDAD        reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    DIFERENTE       reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MAYOR           reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MENOR           reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    MENIGUAL        reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    AND             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    OR              reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    INCREMENTO      reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    DECREMENTO      reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    LLDER           reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    PARDER          reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    COMA            reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    CORDER          reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    ROF             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)
    RIN             reduce using rule 59 (toString -> ID PUNTO NTOSTRING PARIZQ PARDER .)


state 248

    (51) push -> ID PUNTO NPUSH PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 281
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 249

    (52) push -> ID PUNTO NPUSH PARIZQ CORIZQ . paramsC CORDER PARDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 282
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 250

    (57) Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ . paramsC CORDER PARDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 283
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 251

    (53) Length -> ID PUNTO NLENGTH PARIZQ PARDER .

    PTYCOMA         reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RRETURN         reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RCONSOLE        reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RINTERFACE      reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    ID              reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    NTYPEOF         reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    NSTRING         reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    NNUMBER         reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RLET            reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RFOR            reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RWHILE          reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RFUNCTION       reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RBREAK          reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RCONTINUE       reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RIF             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    $end            reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MAS             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MENOS           reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    POR             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    DIV             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MODULO          reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    POTENCIA        reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    IGUALDAD        reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    DIFERENTE       reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MAYOR           reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MENOR           reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    MENIGUAL        reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    AND             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    OR              reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    INCREMENTO      reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    DECREMENTO      reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    LLDER           reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    PARDER          reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    COMA            reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    CORDER          reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    ROF             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)
    RIN             reduce using rule 53 (Length -> ID PUNTO NLENGTH PARIZQ PARDER .)


state 252

    (65) split -> ID PUNTO NSPLIT PARIZQ expresion . PARDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 284
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 253

    (66) splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .

    PTYCOMA         reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RRETURN         reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RCONSOLE        reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RINTERFACE      reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    ID              reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    NTYPEOF         reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    NSTRING         reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    NNUMBER         reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RLET            reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RFOR            reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RWHILE          reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RFUNCTION       reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RBREAK          reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RCONTINUE       reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RIF             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    $end            reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MAS             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MENOS           reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    POR             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    DIV             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MODULO          reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    POTENCIA        reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    IGUALDAD        reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    DIFERENTE       reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MAYOR           reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MENOR           reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    MENIGUAL        reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    AND             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    OR              reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    INCREMENTO      reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    DECREMENTO      reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    LLDER           reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    PARDER          reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    COMA            reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    CORDER          reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    ROF             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)
    RIN             reduce using rule 66 (splitSin -> ID PUNTO NSPLIT PARIZQ PARDER .)


state 254

    (97) paramsC -> paramsC COMA paramC .

    PARDER          reduce using rule 97 (paramsC -> paramsC COMA paramC .)
    COMA            reduce using rule 97 (paramsC -> paramsC COMA paramC .)
    CORDER          reduce using rule 97 (paramsC -> paramsC COMA paramC .)


state 255

    (100) paramC -> CORIZQ paramsC CORDER .

    PARDER          reduce using rule 100 (paramC -> CORIZQ paramsC CORDER .)
    COMA            reduce using rule 100 (paramC -> CORIZQ paramsC CORDER .)
    CORDER          reduce using rule 100 (paramC -> CORIZQ paramsC CORDER .)


state 256

    (56) Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .

    PTYCOMA         reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RRETURN         reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RCONSOLE        reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RINTERFACE      reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    ID              reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    NTYPEOF         reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    NSTRING         reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    NNUMBER         reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RLET            reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RFOR            reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RWHILE          reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RFUNCTION       reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RBREAK          reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RCONTINUE       reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RIF             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    $end            reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MAS             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MENOS           reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    POR             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    DIV             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MODULO          reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    POTENCIA        reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    IGUALDAD        reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    DIFERENTE       reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MAYOR           reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MENOR           reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MAYIGUAL        reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    MENIGUAL        reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    AND             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    OR              reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    INCREMENTO      reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    DECREMENTO      reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    LLDER           reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    PARDER          reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    COMA            reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    CORDER          reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    ROF             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)
    RIN             reduce using rule 56 (Length -> accesoArreglo PUNTO NLENGTH PARIZQ PARDER .)


state 257

    (26) declaracionObjeto -> RLET ID DOSPTS ID IGUAL . LLIZQ atributos LLDER

    LLIZQ           shift and go to state 285


state 258

    (114) declaracion_normal -> RLET ID DOSPTS tipo IGUAL . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 286
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 259

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ . CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET ID DOSPTS tipo CORIZQ . CORDER

    CORDER          shift and go to state 287


state 260

    (111) declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC . CORDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 288
    COMA            shift and go to state 208


state 261

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion . PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         shift and go to state 289
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 262

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ . paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 290
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 263

    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF expresion . PARDER LLIZQ instrucciones LLDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 291
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 264

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ . paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 292
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 265

    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN expresion . PARDER LLIZQ instrucciones LLDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 293
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 266

    (132) cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 294
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 267

    (87) parametroL -> ID DOSPTS . tipo
    (90) parametroL -> ID DOSPTS . tipo CORIZQ CORDER
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221
    ID              shift and go to state 295

    tipo                           shift and go to state 296

state 268

    (95) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER . LLIZQ instrucciones LLDER
    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER . DOSPTS tipo LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 297
    DOSPTS          shift and go to state 298


state 269

    (85) parametrosL -> parametrosL COMA . parametroL
    (87) parametroL -> . ID DOSPTS tipo
    (88) parametroL -> . RLET ID DOSPTS tipo
    (89) parametroL -> . ID
    (90) parametroL -> . ID DOSPTS tipo CORIZQ CORDER
    (91) parametroL -> . RLET ID DOSPTS tipo CORIZQ CORDER

    ID              shift and go to state 228
    RLET            shift and go to state 232

    parametroL                     shift and go to state 299

state 270

    (101) funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 300
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 271

    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS . tipo LLIZQ instrucciones LLDER
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221
    ID              shift and go to state 295

    tipo                           shift and go to state 301

state 272

    (88) parametroL -> RLET ID . DOSPTS tipo
    (91) parametroL -> RLET ID . DOSPTS tipo CORIZQ CORDER

    DOSPTS          shift and go to state 302


state 273

    (121) soloif -> RIF PARIZQ expresion PARDER LLIZQ . instrucciones LLDER
    (122) ifelse -> RIF PARIZQ expresion PARDER LLIZQ . instrucciones LLDER velse
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 303
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 274

    (37) atributo -> ID DOSPTS ID . PTYCOMA
    (142) tipo -> ID .

  ! shift/reduce conflict for PTYCOMA resolved as shift
    PTYCOMA         shift and go to state 276

  ! PTYCOMA         [ reduce using rule 142 (tipo -> ID .) ]


state 275

    (32) listaAtr -> ID DOSPTS . expresion
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 239
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 276

    (37) atributo -> ID DOSPTS ID PTYCOMA .

    ID              reduce using rule 37 (atributo -> ID DOSPTS ID PTYCOMA .)
    LLDER           reduce using rule 37 (atributo -> ID DOSPTS ID PTYCOMA .)


state 277

    (36) atributo -> ID DOSPTS tipo PTYCOMA .

    ID              reduce using rule 36 (atributo -> ID DOSPTS tipo PTYCOMA .)
    LLDER           reduce using rule 36 (atributo -> ID DOSPTS tipo PTYCOMA .)


state 278

    (103) imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .

    PTYCOMA         reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RRETURN         reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RCONSOLE        reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RINTERFACE      reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    ID              reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    NTYPEOF         reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    NSTRING         reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    NNUMBER         reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RLET            reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RFOR            reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RWHILE          reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RFUNCTION       reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RBREAK          reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RCONTINUE       reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    RIF             reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    $end            reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)
    LLDER           reduce using rule 103 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER .)


state 279

    (69) exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    ID              reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RLET            reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RFOR            reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RIF             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    $end            reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MAS             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MENOS           reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    POR             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    DIV             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MODULO          reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MENOR           reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    AND             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    OR              reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    LLDER           reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    PARDER          reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    COMA            reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    CORDER          reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    ROF             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)
    RIN             reduce using rule 69 (exponencial -> ID PUNTO NEXP PARIZQ expresion PARDER .)


state 280

    (58) toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    ID              reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RLET            reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RFOR            reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RIF             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    $end            reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MAS             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    DIV             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    LLDER           reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    COMA            reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    CORDER          reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    ROF             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)
    RIN             reduce using rule 58 (toFixed -> ID PUNTO NFIXED PARIZQ expresion PARDER .)


state 281

    (51) push -> ID PUNTO NPUSH PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    ID              reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RLET            reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RFOR            reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RIF             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    $end            reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MAS             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MENOS           reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    POR             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    DIV             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MODULO          reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MENOR           reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    AND             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    OR              reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    LLDER           reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    PARDER          reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    COMA            reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    CORDER          reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    ROF             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)
    RIN             reduce using rule 51 (push -> ID PUNTO NPUSH PARIZQ expresion PARDER .)


state 282

    (52) push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC . CORDER PARDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 304
    COMA            shift and go to state 208


state 283

    (57) Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC . CORDER PARDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 305
    COMA            shift and go to state 208


state 284

    (65) split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .

    PTYCOMA         reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RRETURN         reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RCONSOLE        reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RINTERFACE      reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    ID              reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    NTYPEOF         reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    NSTRING         reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    NNUMBER         reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RLET            reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RFOR            reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RWHILE          reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RFUNCTION       reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RBREAK          reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RCONTINUE       reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RIF             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    $end            reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MAS             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    POR             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    DIV             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    IGUALDAD        reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MAYIGUAL        reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    MENIGUAL        reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    AND             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    OR              reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    INCREMENTO      reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    DECREMENTO      reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    LLDER           reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    COMA            reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    ROF             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)
    RIN             reduce using rule 65 (split -> ID PUNTO NSPLIT PARIZQ expresion PARDER .)


state 285

    (26) declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ . atributos LLDER
    (28) atributos -> . conTipo
    (29) atributos -> . sinTipo
    (34) conTipo -> . conTipo atributo
    (35) conTipo -> . atributo
    (30) sinTipo -> . sinTipo COMA listaAtr
    (31) sinTipo -> . listaAtr
    (36) atributo -> . ID DOSPTS tipo PTYCOMA
    (37) atributo -> . ID DOSPTS ID PTYCOMA
    (32) listaAtr -> . ID DOSPTS expresion

    ID              shift and go to state 132

    atributos                      shift and go to state 306
    conTipo                        shift and go to state 128
    sinTipo                        shift and go to state 129
    atributo                       shift and go to state 130
    listaAtr                       shift and go to state 131

state 286

    (114) declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PTYCOMA         reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RRETURN         reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RCONSOLE        reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RINTERFACE      reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    ID              reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    NTYPEOF         reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    NSTRING         reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    NNUMBER         reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RLET            reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RFOR            reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RWHILE          reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RFUNCTION       reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RBREAK          reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RCONTINUE       reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RIF             reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    $end            reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    ROF             reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    RIN             reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    LLDER           reduce using rule 114 (declaracion_normal -> RLET ID DOSPTS tipo IGUAL expresion .)
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 287

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER . IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .

    IGUAL           shift and go to state 307
    PTYCOMA         reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RRETURN         reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RCONSOLE        reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RINTERFACE      reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    ID              reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    NTYPEOF         reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    NSTRING         reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    NNUMBER         reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RLET            reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RFOR            reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RWHILE          reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RFUNCTION       reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RBREAK          reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RCONTINUE       reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RIF             reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    $end            reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    ROF             reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    RIN             reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    LLDER           reduce using rule 113 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER .)


state 288

    (111) declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .

    PTYCOMA         reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RRETURN         reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RCONSOLE        reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RINTERFACE      reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    ID              reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    NTYPEOF         reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    NSTRING         reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    NNUMBER         reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RLET            reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RFOR            reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RWHILE          reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RFUNCTION       reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RBREAK          reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RCONTINUE       reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RIF             reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    $end            reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    ROF             reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    RIN             reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)
    LLDER           reduce using rule 111 (declaracionArrayAny -> RLET ID IGUAL CORIZQ paramsC CORDER .)


state 289

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA . expresion PARDER LLIZQ instrucciones LLDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    expresion                      shift and go to state 308
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 290

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC . CORDER PARDER LLIZQ instrucciones LLDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 309
    COMA            shift and go to state 208


state 291

    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 310


state 292

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC . CORDER PARDER LLIZQ instrucciones LLDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 311
    COMA            shift and go to state 208


state 293

    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 312


state 294

    (132) cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 313
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 295

    (142) tipo -> ID .

    CORIZQ          reduce using rule 142 (tipo -> ID .)
    PARDER          reduce using rule 142 (tipo -> ID .)
    COMA            reduce using rule 142 (tipo -> ID .)
    LLIZQ           reduce using rule 142 (tipo -> ID .)


state 296

    (87) parametroL -> ID DOSPTS tipo .
    (90) parametroL -> ID DOSPTS tipo . CORIZQ CORDER

    PARDER          reduce using rule 87 (parametroL -> ID DOSPTS tipo .)
    COMA            reduce using rule 87 (parametroL -> ID DOSPTS tipo .)
    CORIZQ          shift and go to state 314


state 297

    (95) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 315
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 298

    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS . tipo LLIZQ instrucciones LLDER
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221
    ID              shift and go to state 295

    tipo                           shift and go to state 316

state 299

    (85) parametrosL -> parametrosL COMA parametroL .

    PARDER          reduce using rule 85 (parametrosL -> parametrosL COMA parametroL .)
    COMA            reduce using rule 85 (parametrosL -> parametrosL COMA parametroL .)


state 300

    (101) funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 317
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 301

    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 318


state 302

    (88) parametroL -> RLET ID DOSPTS . tipo
    (91) parametroL -> RLET ID DOSPTS . tipo CORIZQ CORDER
    (138) tipo -> . RSTRING
    (139) tipo -> . RNUMBER
    (140) tipo -> . RBOOLEAN
    (141) tipo -> . RANY
    (142) tipo -> . ID

    RSTRING         shift and go to state 218
    RNUMBER         shift and go to state 219
    RBOOLEAN        shift and go to state 220
    RANY            shift and go to state 221
    ID              shift and go to state 295

    tipo                           shift and go to state 319

state 303

    (121) soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones . LLDER
    (122) ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones . LLDER velse
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 320
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 304

    (52) push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER . PARDER

    PARDER          shift and go to state 321


state 305

    (57) Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER . PARDER

    PARDER          shift and go to state 322


state 306

    (26) declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos . LLDER

    LLDER           shift and go to state 323


state 307

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL . CORIZQ paramsC CORDER

    CORIZQ          shift and go to state 324


state 308

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion . PARDER LLIZQ instrucciones LLDER
    (144) expresion -> expresion . MAS expresion
    (145) expresion -> expresion . MENOS expresion
    (146) expresion -> expresion . POR expresion
    (147) expresion -> expresion . DIV expresion
    (148) expresion -> expresion . MODULO expresion
    (149) expresion -> expresion . POTENCIA expresion
    (150) expresion -> expresion . IGUALDAD expresion
    (151) expresion -> expresion . DIFERENTE expresion
    (152) expresion -> expresion . MAYOR expresion
    (153) expresion -> expresion . MENOR expresion
    (154) expresion -> expresion . MAYIGUAL expresion
    (155) expresion -> expresion . MENIGUAL expresion
    (156) expresion -> expresion . AND expresion
    (157) expresion -> expresion . OR expresion
    (161) expresion -> expresion . INCREMENTO
    (162) expresion -> expresion . DECREMENTO

    PARDER          shift and go to state 325
    MAS             shift and go to state 111
    MENOS           shift and go to state 112
    POR             shift and go to state 113
    DIV             shift and go to state 114
    MODULO          shift and go to state 115
    POTENCIA        shift and go to state 116
    IGUALDAD        shift and go to state 117
    DIFERENTE       shift and go to state 118
    MAYOR           shift and go to state 119
    MENOR           shift and go to state 120
    MAYIGUAL        shift and go to state 121
    MENIGUAL        shift and go to state 122
    AND             shift and go to state 123
    OR              shift and go to state 124
    INCREMENTO      shift and go to state 125
    DECREMENTO      shift and go to state 126


state 309

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER . PARDER LLIZQ instrucciones LLDER

    PARDER          shift and go to state 326


state 310

    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instrucciones                  shift and go to state 327
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 311

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER . PARDER LLIZQ instrucciones LLDER

    PARDER          shift and go to state 328


state 312

    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instrucciones                  shift and go to state 329
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 313

    (132) cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 132 (cicloForIn -> RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)


state 314

    (90) parametroL -> ID DOSPTS tipo CORIZQ . CORDER

    CORDER          shift and go to state 330


state 315

    (95) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 331
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 316

    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 332


state 317

    (101) funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 101 (funcionesV -> RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER .)


state 318

    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 333
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 319

    (88) parametroL -> RLET ID DOSPTS tipo .
    (91) parametroL -> RLET ID DOSPTS tipo . CORIZQ CORDER

    PARDER          reduce using rule 88 (parametroL -> RLET ID DOSPTS tipo .)
    COMA            reduce using rule 88 (parametroL -> RLET ID DOSPTS tipo .)
    CORIZQ          shift and go to state 334


state 320

    (121) soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .
    (122) ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER . velse
    (123) velse -> . RELSE soloelse
    (124) velse -> . RELSE elseif

    PTYCOMA         reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 121 (soloif -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER .)
    RELSE           shift and go to state 336

    velse                          shift and go to state 335

state 321

    (52) push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .

    PTYCOMA         reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RRETURN         reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RCONSOLE        reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RINTERFACE      reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    ID              reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    NTYPEOF         reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    NSTRING         reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    NNUMBER         reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RLET            reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RFOR            reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RWHILE          reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RFUNCTION       reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RBREAK          reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RCONTINUE       reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RIF             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    $end            reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAS             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENOS           reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    POR             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    DIV             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MODULO          reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    POTENCIA        reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    IGUALDAD        reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    DIFERENTE       reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAYOR           reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENOR           reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAYIGUAL        reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENIGUAL        reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    AND             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    OR              reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    INCREMENTO      reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    DECREMENTO      reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    LLDER           reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    PARDER          reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    COMA            reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    CORDER          reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    ROF             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)
    RIN             reduce using rule 52 (push -> ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER .)


state 322

    (57) Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .

    PTYCOMA         reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RRETURN         reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RCONSOLE        reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RINTERFACE      reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    ID              reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    NTYPEOF         reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    NSTRING         reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    NNUMBER         reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RLET            reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RFOR            reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RWHILE          reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RFUNCTION       reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RBREAK          reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RCONTINUE       reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RIF             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    $end            reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAS             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENOS           reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    POR             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    DIV             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MODULO          reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    POTENCIA        reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    IGUALDAD        reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    DIFERENTE       reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAYOR           reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENOR           reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MAYIGUAL        reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    MENIGUAL        reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    AND             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    OR              reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    INCREMENTO      reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    DECREMENTO      reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    LLDER           reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    PARDER          reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    COMA            reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    CORDER          reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    ROF             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)
    RIN             reduce using rule 57 (Concat -> ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER .)


state 323

    (26) declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .

    PTYCOMA         reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RRETURN         reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RCONSOLE        reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RINTERFACE      reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    ID              reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    NTYPEOF         reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    NSTRING         reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    NNUMBER         reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RLET            reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RFOR            reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RWHILE          reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RFUNCTION       reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RBREAK          reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RCONTINUE       reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RIF             reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    $end            reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    ROF             reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    RIN             reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)
    LLDER           reduce using rule 26 (declaracionObjeto -> RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER .)


state 324

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ . paramsC CORDER
    (97) paramsC -> . paramsC COMA paramC
    (98) paramsC -> . paramC
    (99) paramC -> . expresion
    (100) paramC -> . CORIZQ paramsC CORDER
    (33) expresion -> . LLIZQ atributos LLDER
    (81) expresion -> . llamadaFuncion
    (143) expresion -> . PARIZQ expresion PARDER
    (144) expresion -> . expresion MAS expresion
    (145) expresion -> . expresion MENOS expresion
    (146) expresion -> . expresion POR expresion
    (147) expresion -> . expresion DIV expresion
    (148) expresion -> . expresion MODULO expresion
    (149) expresion -> . expresion POTENCIA expresion
    (150) expresion -> . expresion IGUALDAD expresion
    (151) expresion -> . expresion DIFERENTE expresion
    (152) expresion -> . expresion MAYOR expresion
    (153) expresion -> . expresion MENOR expresion
    (154) expresion -> . expresion MAYIGUAL expresion
    (155) expresion -> . expresion MENIGUAL expresion
    (156) expresion -> . expresion AND expresion
    (157) expresion -> . expresion OR expresion
    (158) expresion -> . nativas
    (159) expresion -> . MENOS expresion
    (160) expresion -> . NOT expresion
    (161) expresion -> . expresion INCREMENTO
    (162) expresion -> . expresion DECREMENTO
    (163) expresion -> . ID
    (164) expresion -> . accesoArreglo
    (165) expresion -> . accesoAtributo
    (174) expresion -> . ENTERO
    (175) expresion -> . DECIMAL
    (176) expresion -> . CADENA
    (177) expresion -> . RTRUE
    (178) expresion -> . RFALSE
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (173) accesoArreglo -> . ID dimensiones
    (169) accesoAtributo -> . ID listaAtributo
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER

    CORIZQ          shift and go to state 156
    LLIZQ           shift and go to state 80
    PARIZQ          shift and go to state 82
    MENOS           shift and go to state 83
    NOT             shift and go to state 85
    ID              shift and go to state 86
    ENTERO          shift and go to state 89
    DECIMAL         shift and go to state 90
    CADENA          shift and go to state 91
    RTRUE           shift and go to state 92
    RFALSE          shift and go to state 93
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57

    paramsC                        shift and go to state 337
    paramC                         shift and go to state 154
    expresion                      shift and go to state 155
    llamadaFuncion                 shift and go to state 81
    nativas                        shift and go to state 84
    accesoArreglo                  shift and go to state 87
    accesoAtributo                 shift and go to state 88
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    split                          shift and go to state 52
    splitSin                       shift and go to state 53

state 325

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 338


state 326

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 339


state 327

    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 340
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 328

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER . LLIZQ instrucciones LLDER

    LLIZQ           shift and go to state 341


state 329

    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 342
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 330

    (90) parametroL -> ID DOSPTS tipo CORIZQ CORDER .

    PARDER          reduce using rule 90 (parametroL -> ID DOSPTS tipo CORIZQ CORDER .)
    COMA            reduce using rule 90 (parametroL -> ID DOSPTS tipo CORIZQ CORDER .)


state 331

    (95) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 95 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER .)


state 332

    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 343
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 333

    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 344
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 334

    (91) parametroL -> RLET ID DOSPTS tipo CORIZQ . CORDER

    CORDER          shift and go to state 345


state 335

    (122) ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .

    PTYCOMA         reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RRETURN         reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RCONSOLE        reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RINTERFACE      reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    ID              reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    NTYPEOF         reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    NSTRING         reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    NNUMBER         reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RLET            reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RFOR            reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RWHILE          reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RFUNCTION       reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RBREAK          reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RCONTINUE       reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    RIF             reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    $end            reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)
    LLDER           reduce using rule 122 (ifelse -> RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse .)


state 336

    (123) velse -> RELSE . soloelse
    (124) velse -> RELSE . elseif
    (125) soloelse -> . LLIZQ instrucciones LLDER
    (126) elseif -> . soloif
    (127) elseif -> . ifelse
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLIZQ           shift and go to state 348
    RIF             shift and go to state 66

    soloelse                       shift and go to state 346
    elseif                         shift and go to state 347
    soloif                         shift and go to state 349
    ifelse                         shift and go to state 350

state 337

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC . CORDER
    (97) paramsC -> paramsC . COMA paramC

    CORDER          shift and go to state 351
    COMA            shift and go to state 208


state 338

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instrucciones                  shift and go to state 352
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 339

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instrucciones                  shift and go to state 353
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 340

    (136) cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 136 (cicloForOf -> RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER .)


state 341

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instrucciones                  shift and go to state 354
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 342

    (134) cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 134 (cicloWhile -> RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER .)


state 343

    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 355
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 344

    (102) funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    ID              reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    $end            reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 102 (funcionesV -> RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)


state 345

    (91) parametroL -> RLET ID DOSPTS tipo CORIZQ CORDER .

    PARDER          reduce using rule 91 (parametroL -> RLET ID DOSPTS tipo CORIZQ CORDER .)
    COMA            reduce using rule 91 (parametroL -> RLET ID DOSPTS tipo CORIZQ CORDER .)


state 346

    (123) velse -> RELSE soloelse .

    PTYCOMA         reduce using rule 123 (velse -> RELSE soloelse .)
    RRETURN         reduce using rule 123 (velse -> RELSE soloelse .)
    RCONSOLE        reduce using rule 123 (velse -> RELSE soloelse .)
    RINTERFACE      reduce using rule 123 (velse -> RELSE soloelse .)
    ID              reduce using rule 123 (velse -> RELSE soloelse .)
    NTYPEOF         reduce using rule 123 (velse -> RELSE soloelse .)
    NSTRING         reduce using rule 123 (velse -> RELSE soloelse .)
    NNUMBER         reduce using rule 123 (velse -> RELSE soloelse .)
    RLET            reduce using rule 123 (velse -> RELSE soloelse .)
    RFOR            reduce using rule 123 (velse -> RELSE soloelse .)
    RWHILE          reduce using rule 123 (velse -> RELSE soloelse .)
    RFUNCTION       reduce using rule 123 (velse -> RELSE soloelse .)
    RBREAK          reduce using rule 123 (velse -> RELSE soloelse .)
    RCONTINUE       reduce using rule 123 (velse -> RELSE soloelse .)
    RIF             reduce using rule 123 (velse -> RELSE soloelse .)
    $end            reduce using rule 123 (velse -> RELSE soloelse .)
    LLDER           reduce using rule 123 (velse -> RELSE soloelse .)


state 347

    (124) velse -> RELSE elseif .

    PTYCOMA         reduce using rule 124 (velse -> RELSE elseif .)
    RRETURN         reduce using rule 124 (velse -> RELSE elseif .)
    RCONSOLE        reduce using rule 124 (velse -> RELSE elseif .)
    RINTERFACE      reduce using rule 124 (velse -> RELSE elseif .)
    ID              reduce using rule 124 (velse -> RELSE elseif .)
    NTYPEOF         reduce using rule 124 (velse -> RELSE elseif .)
    NSTRING         reduce using rule 124 (velse -> RELSE elseif .)
    NNUMBER         reduce using rule 124 (velse -> RELSE elseif .)
    RLET            reduce using rule 124 (velse -> RELSE elseif .)
    RFOR            reduce using rule 124 (velse -> RELSE elseif .)
    RWHILE          reduce using rule 124 (velse -> RELSE elseif .)
    RFUNCTION       reduce using rule 124 (velse -> RELSE elseif .)
    RBREAK          reduce using rule 124 (velse -> RELSE elseif .)
    RCONTINUE       reduce using rule 124 (velse -> RELSE elseif .)
    RIF             reduce using rule 124 (velse -> RELSE elseif .)
    $end            reduce using rule 124 (velse -> RELSE elseif .)
    LLDER           reduce using rule 124 (velse -> RELSE elseif .)


state 348

    (125) soloelse -> LLIZQ . instrucciones LLDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instrucciones                  shift and go to state 356
    instruccion                    shift and go to state 3
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 349

    (126) elseif -> soloif .

    PTYCOMA         reduce using rule 126 (elseif -> soloif .)
    RRETURN         reduce using rule 126 (elseif -> soloif .)
    RCONSOLE        reduce using rule 126 (elseif -> soloif .)
    RINTERFACE      reduce using rule 126 (elseif -> soloif .)
    ID              reduce using rule 126 (elseif -> soloif .)
    NTYPEOF         reduce using rule 126 (elseif -> soloif .)
    NSTRING         reduce using rule 126 (elseif -> soloif .)
    NNUMBER         reduce using rule 126 (elseif -> soloif .)
    RLET            reduce using rule 126 (elseif -> soloif .)
    RFOR            reduce using rule 126 (elseif -> soloif .)
    RWHILE          reduce using rule 126 (elseif -> soloif .)
    RFUNCTION       reduce using rule 126 (elseif -> soloif .)
    RBREAK          reduce using rule 126 (elseif -> soloif .)
    RCONTINUE       reduce using rule 126 (elseif -> soloif .)
    RIF             reduce using rule 126 (elseif -> soloif .)
    $end            reduce using rule 126 (elseif -> soloif .)
    LLDER           reduce using rule 126 (elseif -> soloif .)


state 350

    (127) elseif -> ifelse .

    PTYCOMA         reduce using rule 127 (elseif -> ifelse .)
    RRETURN         reduce using rule 127 (elseif -> ifelse .)
    RCONSOLE        reduce using rule 127 (elseif -> ifelse .)
    RINTERFACE      reduce using rule 127 (elseif -> ifelse .)
    ID              reduce using rule 127 (elseif -> ifelse .)
    NTYPEOF         reduce using rule 127 (elseif -> ifelse .)
    NSTRING         reduce using rule 127 (elseif -> ifelse .)
    NNUMBER         reduce using rule 127 (elseif -> ifelse .)
    RLET            reduce using rule 127 (elseif -> ifelse .)
    RFOR            reduce using rule 127 (elseif -> ifelse .)
    RWHILE          reduce using rule 127 (elseif -> ifelse .)
    RFUNCTION       reduce using rule 127 (elseif -> ifelse .)
    RBREAK          reduce using rule 127 (elseif -> ifelse .)
    RCONTINUE       reduce using rule 127 (elseif -> ifelse .)
    RIF             reduce using rule 127 (elseif -> ifelse .)
    $end            reduce using rule 127 (elseif -> ifelse .)
    LLDER           reduce using rule 127 (elseif -> ifelse .)


state 351

    (112) declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .

    PTYCOMA         reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RRETURN         reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RCONSOLE        reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RINTERFACE      reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    ID              reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    NTYPEOF         reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    NSTRING         reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    NNUMBER         reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RLET            reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RFOR            reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RWHILE          reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RFUNCTION       reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RBREAK          reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RCONTINUE       reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RIF             reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    $end            reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    ROF             reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    RIN             reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)
    LLDER           reduce using rule 112 (declaracionArray -> RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER .)


state 352

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 357
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 353

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 358
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 354

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 359
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    declaraciones                  shift and go to state 5
    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 355

    (96) funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    ID              reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    $end            reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 96 (funcionesP -> RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER .)


state 356

    (125) soloelse -> LLIZQ instrucciones . LLDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . nativas PTYCOMA
    (5) instruccion -> . declaraciones PTYCOMA
    (6) instruccion -> . condicional_ifs PTYCOMA
    (7) instruccion -> . ciclos PTYCOMA
    (8) instruccion -> . funciones PTYCOMA
    (9) instruccion -> . llamadaFuncion PTYCOMA
    (10) instruccion -> . cReturn PTYCOMA
    (11) instruccion -> . asignaciones PTYCOMA
    (12) instruccion -> . de_control PTYCOMA
    (13) instruccion -> . imprimir PTYCOMA
    (14) instruccion -> . creacionStruct PTYCOMA
    (15) instruccion -> . nativas
    (16) instruccion -> . declaraciones
    (17) instruccion -> . condicional_ifs
    (18) instruccion -> . ciclos
    (19) instruccion -> . funciones
    (20) instruccion -> . llamadaFuncion
    (21) instruccion -> . cReturn
    (22) instruccion -> . asignaciones
    (23) instruccion -> . de_control
    (24) instruccion -> . imprimir
    (25) instruccion -> . creacionStruct
    (38) nativas -> . exponencial
    (39) nativas -> . toLower
    (40) nativas -> . toUpper
    (41) nativas -> . toFixed
    (42) nativas -> . splitss
    (43) nativas -> . typeoff
    (44) nativas -> . toString
    (45) nativas -> . String
    (46) nativas -> . push
    (47) nativas -> . Concat
    (48) nativas -> . Length
    (49) nativas -> . Number
    (104) declaraciones -> . declaracion_normal
    (105) declaraciones -> . declaracion_sin_tipo_normal
    (106) declaraciones -> . declaracion_sin_valor
    (107) declaraciones -> . declaracion_sin_tipo_valor
    (108) declaraciones -> . declaracionArray
    (109) declaraciones -> . declaracionArrayAny
    (110) declaraciones -> . declaracionObjeto
    (118) condicional_ifs -> . bloqueifs
    (128) ciclos -> . cliclo_for
    (129) ciclos -> . cicloForOf
    (130) ciclos -> . cicloForIn
    (131) ciclos -> . cicloWhile
    (93) funciones -> . funcionesP
    (94) funciones -> . funcionesV
    (82) llamadaFuncion -> . llamadaParam
    (83) llamadaFuncion -> . llamadaSin
    (80) cReturn -> . RRETURN expresion
    (74) asignaciones -> . asignacionVariable
    (75) asignaciones -> . asignacionArreglo
    (76) asignaciones -> . asignacionAtributo
    (70) de_control -> . pBreak
    (71) de_control -> . pContinue
    (103) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ paramsC PARDER
    (27) creacionStruct -> . RINTERFACE ID LLIZQ atributos LLDER
    (69) exponencial -> . ID PUNTO NEXP PARIZQ expresion PARDER
    (67) toLower -> . ID PUNTO NLOWER PARIZQ PARDER
    (68) toUpper -> . ID PUNTO NUPPER PARIZQ PARDER
    (58) toFixed -> . ID PUNTO NFIXED PARIZQ expresion PARDER
    (63) splitss -> . split
    (64) splitss -> . splitSin
    (61) typeoff -> . NTYPEOF PARIZQ expresion PARDER
    (62) typeoff -> . NTYPEOF PARIZQ PARDER
    (59) toString -> . ID PUNTO NTOSTRING PARIZQ PARDER
    (60) String -> . NSTRING PARIZQ ID PARDER
    (51) push -> . ID PUNTO NPUSH PARIZQ expresion PARDER
    (52) push -> . ID PUNTO NPUSH PARIZQ CORIZQ paramsC CORDER PARDER
    (57) Concat -> . ID PUNTO NCONCAT PARIZQ CORIZQ paramsC CORDER PARDER
    (53) Length -> . ID PUNTO NLENGTH PARIZQ PARDER
    (54) Length -> . ID PUNTO NLENGTH
    (55) Length -> . accesoArreglo PUNTO NLENGTH
    (56) Length -> . accesoArreglo PUNTO NLENGTH PARIZQ PARDER
    (50) Number -> . NNUMBER PARIZQ expresion PARDER
    (114) declaracion_normal -> . RLET ID DOSPTS tipo IGUAL expresion
    (115) declaracion_sin_tipo_normal -> . RLET ID IGUAL expresion
    (116) declaracion_sin_valor -> . RLET ID DOSPTS tipo
    (117) declaracion_sin_tipo_valor -> . RLET ID
    (112) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER IGUAL CORIZQ paramsC CORDER
    (113) declaracionArray -> . RLET ID DOSPTS tipo CORIZQ CORDER
    (111) declaracionArrayAny -> . RLET ID IGUAL CORIZQ paramsC CORDER
    (26) declaracionObjeto -> . RLET ID DOSPTS ID IGUAL LLIZQ atributos LLDER
    (119) bloqueifs -> . soloif
    (120) bloqueifs -> . ifelse
    (137) cliclo_for -> . RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER
    (135) cicloForOf -> . RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (136) cicloForOf -> . RFOR PARIZQ declaraciones ROF expresion PARDER LLIZQ instrucciones LLDER
    (132) cicloForIn -> . RWHILE PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (133) cicloWhile -> . RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER
    (134) cicloWhile -> . RFOR PARIZQ declaraciones RIN expresion PARDER LLIZQ instrucciones LLDER
    (95) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER LLIZQ instrucciones LLDER
    (96) funcionesP -> . RFUNCTION ID PARIZQ parametrosL PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (101) funcionesV -> . RFUNCTION ID PARIZQ PARDER LLIZQ instrucciones LLDER
    (102) funcionesV -> . RFUNCTION ID PARIZQ PARDER DOSPTS tipo LLIZQ instrucciones LLDER
    (84) llamadaParam -> . ID PARIZQ paramsC PARDER
    (92) llamadaSin -> . ID PARIZQ PARDER
    (79) asignacionVariable -> . ID IGUAL expresion
    (78) asignacionArreglo -> . ID dimensiones IGUAL expresion
    (77) asignacionAtributo -> . ID PUNTO ID IGUAL expresion
    (72) pBreak -> . RBREAK
    (73) pContinue -> . RCONTINUE
    (65) split -> . ID PUNTO NSPLIT PARIZQ expresion PARDER
    (66) splitSin -> . ID PUNTO NSPLIT PARIZQ PARDER
    (173) accesoArreglo -> . ID dimensiones
    (121) soloif -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER
    (122) ifelse -> . RIF PARIZQ expresion PARDER LLIZQ instrucciones LLDER velse

    LLDER           shift and go to state 360
    RRETURN         shift and go to state 43
    RCONSOLE        shift and go to state 49
    RINTERFACE      shift and go to state 50
    ID              shift and go to state 51
    NTYPEOF         shift and go to state 54
    NSTRING         shift and go to state 55
    NNUMBER         shift and go to state 57
    RLET            shift and go to state 58
    RFOR            shift and go to state 61
    RWHILE          shift and go to state 62
    RFUNCTION       shift and go to state 63
    RBREAK          shift and go to state 64
    RCONTINUE       shift and go to state 65
    RIF             shift and go to state 66

    instruccion                    shift and go to state 67
    nativas                        shift and go to state 4
    declaraciones                  shift and go to state 5
    condicional_ifs                shift and go to state 6
    ciclos                         shift and go to state 7
    funciones                      shift and go to state 8
    llamadaFuncion                 shift and go to state 9
    cReturn                        shift and go to state 10
    asignaciones                   shift and go to state 11
    de_control                     shift and go to state 12
    imprimir                       shift and go to state 13
    creacionStruct                 shift and go to state 14
    exponencial                    shift and go to state 15
    toLower                        shift and go to state 16
    toUpper                        shift and go to state 17
    toFixed                        shift and go to state 18
    splitss                        shift and go to state 19
    typeoff                        shift and go to state 20
    toString                       shift and go to state 21
    String                         shift and go to state 22
    push                           shift and go to state 23
    Concat                         shift and go to state 24
    Length                         shift and go to state 25
    Number                         shift and go to state 26
    declaracion_normal             shift and go to state 27
    declaracion_sin_tipo_normal    shift and go to state 28
    declaracion_sin_valor          shift and go to state 29
    declaracion_sin_tipo_valor     shift and go to state 30
    declaracionArray               shift and go to state 31
    declaracionArrayAny            shift and go to state 32
    declaracionObjeto              shift and go to state 33
    bloqueifs                      shift and go to state 34
    cliclo_for                     shift and go to state 35
    cicloForOf                     shift and go to state 36
    cicloForIn                     shift and go to state 37
    cicloWhile                     shift and go to state 38
    funcionesP                     shift and go to state 39
    funcionesV                     shift and go to state 40
    llamadaParam                   shift and go to state 41
    llamadaSin                     shift and go to state 42
    asignacionVariable             shift and go to state 44
    asignacionArreglo              shift and go to state 45
    asignacionAtributo             shift and go to state 46
    pBreak                         shift and go to state 47
    pContinue                      shift and go to state 48
    split                          shift and go to state 52
    splitSin                       shift and go to state 53
    accesoArreglo                  shift and go to state 56
    soloif                         shift and go to state 59
    ifelse                         shift and go to state 60

state 357

    (137) cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 137 (cliclo_for -> RFOR PARIZQ declaraciones PTYCOMA expresion PTYCOMA expresion PARDER LLIZQ instrucciones LLDER .)


state 358

    (135) cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 135 (cicloForOf -> RFOR PARIZQ declaraciones ROF CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)


state 359

    (133) cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    ID              reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    $end            reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 133 (cicloWhile -> RFOR PARIZQ declaraciones RIN CORIZQ paramsC CORDER PARDER LLIZQ instrucciones LLDER .)


state 360

    (125) soloelse -> LLIZQ instrucciones LLDER .

    PTYCOMA         reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RRETURN         reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RCONSOLE        reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RINTERFACE      reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    ID              reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    NTYPEOF         reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    NSTRING         reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    NNUMBER         reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RLET            reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RFOR            reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RWHILE          reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RFUNCTION       reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RBREAK          reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RCONTINUE       reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    RIF             reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    $end            reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)
    LLDER           reduce using rule 125 (soloelse -> LLIZQ instrucciones LLDER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL in state 216 resolved as shift
WARNING: shift/reduce conflict for PTYCOMA in state 237 resolved as shift
WARNING: shift/reduce conflict for PTYCOMA in state 274 resolved as shift
