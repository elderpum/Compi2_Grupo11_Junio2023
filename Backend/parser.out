Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones
Rule 2     instrucciones -> instrucciones instruccion
Rule 3     instrucciones -> instruccion
Rule 4     instruccion -> imprimir PUNTOCOMA
Rule 5     instruccion -> asignacion PUNTOCOMA
Rule 6     instruccion -> array PUNTOCOMA
Rule 7     instruccion -> condicional PUNTOCOMA
Rule 8     instruccion -> whilee PUNTOCOMA
Rule 9     instruccion -> forr PUNTOCOMA
Rule 10    instruccion -> struct PUNTOCOMA
Rule 11    instruccion -> functionn PUNTOCOMA
Rule 12    instruccion -> llamada PUNTOCOMA
Rule 13    instruccion -> BREAKk PUNTOCOMA
Rule 14    instruccion -> RETURNN PUNTOCOMA
Rule 15    instruccion -> CONTINUEE PUNTOCOMA
Rule 16    instruccion -> PUSHH PUNTOCOMA
Rule 17    instruccion -> POPP PUNTOCOMA
Rule 18    instruccion -> LENGHTT PUNTOCOMA
Rule 19    PUSHH -> RPUSH PARIZQ expresion COMA expresion PARDER
Rule 20    POPP -> RPOP PARIZQ expresion PARDER
Rule 21    LENGHTT -> RLENGTH PARIZQ expresion PARDER
Rule 22    condicional -> if_ RELSE LLAVEIZQ instrucciones LLAVEDER
Rule 23    condicional -> if_
Rule 24    BREAKk -> RBREAK
Rule 25    CONTINUEE -> RCONTINUE
Rule 26    RETURNN -> RRETURN
Rule 27    RETURNN -> RRETURN expresion
Rule 28    if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 29    if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 30    whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 31    forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 32    forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 33    asignacion -> RLET ID IGUAL expresion
Rule 34    asignacion -> RLET ID DOSPUNTOS tipo IGUAL expresion
Rule 35    asignacion -> RLET ID DOSPUNTOS ID IGUAL expresion
Rule 36    array -> ID number_array lista_id IGUAL expresion
Rule 37    array -> RLET ID number_array IGUAL expresion
Rule 38    asignacion -> ID lista_id IGUAL expresion
Rule 39    lista_id -> lista_id PUNTO ID
Rule 40    lista_id -> lista_id PUNTO ID number_array
Rule 41    lista_id -> PUNTO ID
Rule 42    lista_id -> PUNTO ID number_array
Rule 43    llamada -> ID PARIZQ parametro_print PARDER
Rule 44    llamada -> ID PARIZQ PARDER
Rule 45    functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 46    functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
Rule 47    parametros_function -> parametros_function COMA ID
Rule 48    parametros_function -> parametros_function COMA ID DOSPUNTOS tipo
Rule 49    parametros_function -> parametros_function COMA ID DOSPUNTOS ID
Rule 50    parametros_function -> ID
Rule 51    parametros_function -> ID DOSPUNTOS tipo
Rule 52    parametros_function -> ID DOSPUNTOS ID
Rule 53    struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
Rule 54    parametros_struct -> parametros_struct parametro_struct
Rule 55    parametros_struct -> parametro_struct
Rule 56    parametro_struct -> ID PUNTOCOMA
Rule 57    parametro_struct -> ID DOSPUNTOS tipo PUNTOCOMA
Rule 58    parametro_struct -> ID DOSPUNTOS ID PUNTOCOMA
Rule 59    imprimir -> RCONSOLE PUNTO RLOG PARIZQ PARDER
Rule 60    parametro_print -> parametro_print COMA expresion
Rule 61    parametro_print -> expresion
Rule 62    tipo -> RNUMBER
Rule 63    tipo -> RBOOL
Rule 64    tipo -> RSTRING
Rule 65    tipo -> RANY
Rule 66    tipo -> RNULL
Rule 67    expresion -> exp_struct
Rule 68    exp_struct -> exp_struct PUNTO ID
Rule 69    exp_struct -> exp_struct PUNTO ID number_array
Rule 70    exp_struct -> ID
Rule 71    exp_struct -> ID number_array
Rule 72    number_array -> CORIZQ expresion CORDER
Rule 73    number_array -> number_array CORIZQ expresion CORDER
Rule 74    expresion -> CORIZQ expresion_exp CORDER
Rule 75    expresion_exp -> expresion_exp COMA expresion
Rule 76    expresion_exp -> expresion
Rule 77    expresion -> ID PARIZQ parametro_print PARDER
Rule 78    expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER
Rule 79    expresion -> RPOP NOT PARIZQ expresion PARDER
Rule 80    expresion -> RLENGTH PARIZQ expresion PARDER
Rule 81    expresion -> RTOFIXED PARIZQ expresion PARDER
Rule 82    expresion -> RTOSTRING PARIZQ expresion PARDER
Rule 83    expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER
Rule 84    expresion -> RTYPEOF PARIZQ expresion PARDER
Rule 85    expresion -> RTOUPPERCASE PARIZQ expresion PARDER
Rule 86    expresion -> RTOLOWERCASE PARIZQ expresion PARDER
Rule 87    expresion -> expresion MAS expresion
Rule 88    expresion -> expresion MENOS expresion
Rule 89    expresion -> expresion POR expresion
Rule 90    expresion -> expresion DIVI expresion
Rule 91    expresion -> expresion POTENCIA expresion
Rule 92    expresion -> expresion MODULO expresion
Rule 93    expresion -> expresion IGUALIGUAL expresion
Rule 94    expresion -> expresion DIFERENTE expresion
Rule 95    expresion -> expresion MAYOR expresion
Rule 96    expresion -> expresion MENOR expresion
Rule 97    expresion -> expresion MAYORIGUAL expresion
Rule 98    expresion -> expresion MENORIGUAL expresion
Rule 99    expresion -> expresion AND expresion
Rule 100   expresion -> expresion OR expresion
Rule 101   expresion -> NOT expresion
Rule 102   expresion -> RNUMBER
Rule 103   expresion -> RSTRING
Rule 104   expresion -> RFALSE
Rule 105   expresion -> RTRUE
Rule 106   expresion -> RANY
Rule 107   expresion -> PARIZQ expresion PARDER

Terminals, with rules where they appear

AND                  : 99
COMA                 : 19 47 48 49 60 75 78
CORDER               : 72 73 74
CORIZQ               : 72 73 74
DIFERENTE            : 94
DIVI                 : 90
DOSPUNTOS            : 34 35 48 49 51 52 57 58
ID                   : 31 32 33 34 35 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 49 50 51 52 52 53 56 57 58 58 68 69 70 71 77
IGUAL                : 33 34 35 36 37 38
IGUALIGUAL           : 93
LLAVEDER             : 22 28 29 30 31 32 45 46 53
LLAVEIZQ             : 22 28 29 30 31 32 45 46 53
MAS                  : 87
MAYOR                : 95
MAYORIGUAL           : 97
MENOR                : 96
MENORIGUAL           : 98
MENOS                : 88
MODULO               : 92
NOT                  : 78 79 101
OR                   : 100
PARDER               : 19 20 21 28 29 30 31 32 43 44 45 46 59 77 78 79 80 81 82 83 84 85 86 107
PARIZQ               : 19 20 21 28 29 30 31 32 43 44 45 46 59 77 78 79 80 81 82 83 84 85 86 107
POR                  : 89
POTENCIA             : 91
PUNTO                : 39 40 41 42 59 68 69
PUNTOCOMA            : 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 32 56 57 58
RANY                 : 65 106
RBOOL                : 63
RBREAK               : 24
RCONSOLE             : 59
RCONTINUE            : 25
RELSE                : 22
RELSEIF              : 29
RFALSE               : 104
RFOR                 : 31 32
RFUNCTION            : 45 46
RIF                  : 28
RINTERFACE           : 53
RLENGTH              : 21 80
RLET                 : 31 32 33 34 35 37
RLOG                 : 59
RNULL                : 66
RNUMBER              : 62 102
ROF                  : 31 32
RPOP                 : 20 79
RPUSH                : 19 78
RRETURN              : 26 27
RSTRING              : 64 103
RTOEXPONENTIAL       : 83
RTOFIXED             : 81
RTOLOWERCASE         : 86
RTOSTRING            : 82
RTOUPPERCASE         : 85
RTRUE                : 105
RTYPEOF              : 84
RWHILE               : 30
error                : 

Nonterminals, with rules where they appear

BREAKk               : 13
CONTINUEE            : 15
LENGHTT              : 18
POPP                 : 17
PUSHH                : 16
RETURNN              : 14
array                : 6
asignacion           : 5
condicional          : 7
exp_struct           : 67 68 69
expresion            : 19 19 20 21 27 28 29 30 31 32 32 33 34 35 36 37 38 60 61 72 73 75 76 78 78 79 80 81 82 83 84 85 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 107
expresion_exp        : 74 75
forr                 : 9
functionn            : 11
if_                  : 22 23 29
imprimir             : 4
init                 : 0
instruccion          : 2 3
instrucciones        : 1 2 22 28 29 30 31 32 45 46
lista_id             : 36 38 39 40
llamada              : 12
number_array         : 36 37 40 42 69 71 73
parametro_print      : 43 60 77
parametro_struct     : 54 55
parametros_function  : 46 47 48 49
parametros_struct    : 53 54
struct               : 10
tipo                 : 34 48 51 57
whilee               : 8

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    init                           shift and go to state 1
    instrucciones                  shift and go to state 2
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones .
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    $end            reduce using rule 1 (init -> instrucciones .)
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 3

    (3) instrucciones -> instruccion .

    RCONSOLE        reduce using rule 3 (instrucciones -> instruccion .)
    RLET            reduce using rule 3 (instrucciones -> instruccion .)
    ID              reduce using rule 3 (instrucciones -> instruccion .)
    RWHILE          reduce using rule 3 (instrucciones -> instruccion .)
    RFOR            reduce using rule 3 (instrucciones -> instruccion .)
    RINTERFACE      reduce using rule 3 (instrucciones -> instruccion .)
    RFUNCTION       reduce using rule 3 (instrucciones -> instruccion .)
    RBREAK          reduce using rule 3 (instrucciones -> instruccion .)
    RRETURN         reduce using rule 3 (instrucciones -> instruccion .)
    RCONTINUE       reduce using rule 3 (instrucciones -> instruccion .)
    RPUSH           reduce using rule 3 (instrucciones -> instruccion .)
    RPOP            reduce using rule 3 (instrucciones -> instruccion .)
    RLENGTH         reduce using rule 3 (instrucciones -> instruccion .)
    RIF             reduce using rule 3 (instrucciones -> instruccion .)
    $end            reduce using rule 3 (instrucciones -> instruccion .)
    LLAVEDER        reduce using rule 3 (instrucciones -> instruccion .)


state 4

    (4) instruccion -> imprimir . PUNTOCOMA

    PUNTOCOMA       shift and go to state 35


state 5

    (5) instruccion -> asignacion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 36


state 6

    (6) instruccion -> array . PUNTOCOMA

    PUNTOCOMA       shift and go to state 37


state 7

    (7) instruccion -> condicional . PUNTOCOMA

    PUNTOCOMA       shift and go to state 38


state 8

    (8) instruccion -> whilee . PUNTOCOMA

    PUNTOCOMA       shift and go to state 39


state 9

    (9) instruccion -> forr . PUNTOCOMA

    PUNTOCOMA       shift and go to state 40


state 10

    (10) instruccion -> struct . PUNTOCOMA

    PUNTOCOMA       shift and go to state 41


state 11

    (11) instruccion -> functionn . PUNTOCOMA

    PUNTOCOMA       shift and go to state 42


state 12

    (12) instruccion -> llamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 43


state 13

    (13) instruccion -> BREAKk . PUNTOCOMA

    PUNTOCOMA       shift and go to state 44


state 14

    (14) instruccion -> RETURNN . PUNTOCOMA

    PUNTOCOMA       shift and go to state 45


state 15

    (15) instruccion -> CONTINUEE . PUNTOCOMA

    PUNTOCOMA       shift and go to state 46


state 16

    (16) instruccion -> PUSHH . PUNTOCOMA

    PUNTOCOMA       shift and go to state 47


state 17

    (17) instruccion -> POPP . PUNTOCOMA

    PUNTOCOMA       shift and go to state 48


state 18

    (18) instruccion -> LENGHTT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 49


state 19

    (59) imprimir -> RCONSOLE . PUNTO RLOG PARIZQ PARDER

    PUNTO           shift and go to state 50


state 20

    (33) asignacion -> RLET . ID IGUAL expresion
    (34) asignacion -> RLET . ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> RLET . ID DOSPUNTOS ID IGUAL expresion
    (37) array -> RLET . ID number_array IGUAL expresion

    ID              shift and go to state 51


state 21

    (38) asignacion -> ID . lista_id IGUAL expresion
    (36) array -> ID . number_array lista_id IGUAL expresion
    (43) llamada -> ID . PARIZQ parametro_print PARDER
    (44) llamada -> ID . PARIZQ PARDER
    (39) lista_id -> . lista_id PUNTO ID
    (40) lista_id -> . lista_id PUNTO ID number_array
    (41) lista_id -> . PUNTO ID
    (42) lista_id -> . PUNTO ID number_array
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    PARIZQ          shift and go to state 54
    PUNTO           shift and go to state 55
    CORIZQ          shift and go to state 56

    lista_id                       shift and go to state 52
    number_array                   shift and go to state 53

state 22

    (22) condicional -> if_ . RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> if_ .
    (29) if_ -> if_ . RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RELSE           shift and go to state 57
    PUNTOCOMA       reduce using rule 23 (condicional -> if_ .)
    RELSEIF         shift and go to state 58


state 23

    (30) whilee -> RWHILE . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 59


state 24

    (31) forr -> RFOR . PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR . PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 60


state 25

    (53) struct -> RINTERFACE . ID LLAVEIZQ parametros_struct LLAVEDER

    ID              shift and go to state 61


state 26

    (45) functionn -> RFUNCTION . ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> RFUNCTION . ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 62


state 27

    (24) BREAKk -> RBREAK .

    PUNTOCOMA       reduce using rule 24 (BREAKk -> RBREAK .)


state 28

    (26) RETURNN -> RRETURN .
    (27) RETURNN -> RRETURN . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    PUNTOCOMA       reduce using rule 26 (RETURNN -> RRETURN .)
    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 63
    exp_struct                     shift and go to state 64

state 29

    (25) CONTINUEE -> RCONTINUE .

    PUNTOCOMA       reduce using rule 25 (CONTINUEE -> RCONTINUE .)


state 30

    (19) PUSHH -> RPUSH . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 83


state 31

    (20) POPP -> RPOP . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 84


state 32

    (21) LENGHTT -> RLENGTH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 85


state 33

    (28) if_ -> RIF . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 86


state 34

    (2) instrucciones -> instrucciones instruccion .

    RCONSOLE        reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLET            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    ID              reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RWHILE          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFOR            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RINTERFACE      reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RFUNCTION       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RBREAK          reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RRETURN         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RCONTINUE       reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RPUSH           reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RPOP            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RLENGTH         reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    RIF             reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    $end            reduce using rule 2 (instrucciones -> instrucciones instruccion .)
    LLAVEDER        reduce using rule 2 (instrucciones -> instrucciones instruccion .)


state 35

    (4) instruccion -> imprimir PUNTOCOMA .

    RCONSOLE        reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RLET            reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    ID              reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RWHILE          reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RFOR            reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RINTERFACE      reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RFUNCTION       reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RBREAK          reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RRETURN         reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RCONTINUE       reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RPUSH           reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RPOP            reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RLENGTH         reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    RIF             reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    $end            reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)
    LLAVEDER        reduce using rule 4 (instruccion -> imprimir PUNTOCOMA .)


state 36

    (5) instruccion -> asignacion PUNTOCOMA .

    RCONSOLE        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RLET            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    ID              reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RWHILE          reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RFOR            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RINTERFACE      reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RFUNCTION       reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RBREAK          reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RRETURN         reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RCONTINUE       reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RPUSH           reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RPOP            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RLENGTH         reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    RIF             reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    $end            reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)
    LLAVEDER        reduce using rule 5 (instruccion -> asignacion PUNTOCOMA .)


state 37

    (6) instruccion -> array PUNTOCOMA .

    RCONSOLE        reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RLET            reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    ID              reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RWHILE          reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RFOR            reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RINTERFACE      reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RFUNCTION       reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RBREAK          reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RRETURN         reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RCONTINUE       reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RPUSH           reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RPOP            reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RLENGTH         reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    RIF             reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    $end            reduce using rule 6 (instruccion -> array PUNTOCOMA .)
    LLAVEDER        reduce using rule 6 (instruccion -> array PUNTOCOMA .)


state 38

    (7) instruccion -> condicional PUNTOCOMA .

    RCONSOLE        reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RLET            reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    ID              reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RWHILE          reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RFOR            reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RINTERFACE      reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RFUNCTION       reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RBREAK          reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RRETURN         reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RCONTINUE       reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RPUSH           reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RPOP            reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RLENGTH         reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    RIF             reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    $end            reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)
    LLAVEDER        reduce using rule 7 (instruccion -> condicional PUNTOCOMA .)


state 39

    (8) instruccion -> whilee PUNTOCOMA .

    RCONSOLE        reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RLET            reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    ID              reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RWHILE          reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RFOR            reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RINTERFACE      reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RFUNCTION       reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RBREAK          reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RRETURN         reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RCONTINUE       reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RPUSH           reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RPOP            reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RLENGTH         reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    RIF             reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    $end            reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)
    LLAVEDER        reduce using rule 8 (instruccion -> whilee PUNTOCOMA .)


state 40

    (9) instruccion -> forr PUNTOCOMA .

    RCONSOLE        reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RLET            reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    ID              reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RWHILE          reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RFOR            reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RINTERFACE      reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RFUNCTION       reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RBREAK          reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RRETURN         reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RCONTINUE       reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RPUSH           reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RPOP            reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RLENGTH         reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    RIF             reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    $end            reduce using rule 9 (instruccion -> forr PUNTOCOMA .)
    LLAVEDER        reduce using rule 9 (instruccion -> forr PUNTOCOMA .)


state 41

    (10) instruccion -> struct PUNTOCOMA .

    RCONSOLE        reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RLET            reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    ID              reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RWHILE          reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RFOR            reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RINTERFACE      reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RFUNCTION       reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RBREAK          reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RRETURN         reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RCONTINUE       reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RPUSH           reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RPOP            reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RLENGTH         reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    RIF             reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    $end            reduce using rule 10 (instruccion -> struct PUNTOCOMA .)
    LLAVEDER        reduce using rule 10 (instruccion -> struct PUNTOCOMA .)


state 42

    (11) instruccion -> functionn PUNTOCOMA .

    RCONSOLE        reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RLET            reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    ID              reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RWHILE          reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RFOR            reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RINTERFACE      reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RFUNCTION       reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RBREAK          reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RRETURN         reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RCONTINUE       reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RPUSH           reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RPOP            reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RLENGTH         reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    RIF             reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    $end            reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)
    LLAVEDER        reduce using rule 11 (instruccion -> functionn PUNTOCOMA .)


state 43

    (12) instruccion -> llamada PUNTOCOMA .

    RCONSOLE        reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RLET            reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    ID              reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RWHILE          reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RFOR            reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RINTERFACE      reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RFUNCTION       reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RBREAK          reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RRETURN         reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RCONTINUE       reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RPUSH           reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RPOP            reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RLENGTH         reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    RIF             reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    $end            reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)
    LLAVEDER        reduce using rule 12 (instruccion -> llamada PUNTOCOMA .)


state 44

    (13) instruccion -> BREAKk PUNTOCOMA .

    RCONSOLE        reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RLET            reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    ID              reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RWHILE          reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RFOR            reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RINTERFACE      reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RFUNCTION       reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RBREAK          reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RRETURN         reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RCONTINUE       reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RPUSH           reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RPOP            reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RLENGTH         reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    RIF             reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    $end            reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)
    LLAVEDER        reduce using rule 13 (instruccion -> BREAKk PUNTOCOMA .)


state 45

    (14) instruccion -> RETURNN PUNTOCOMA .

    RCONSOLE        reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RLET            reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    ID              reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RWHILE          reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RFOR            reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RINTERFACE      reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RFUNCTION       reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RBREAK          reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RRETURN         reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RCONTINUE       reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RPUSH           reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RPOP            reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RLENGTH         reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    RIF             reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    $end            reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)
    LLAVEDER        reduce using rule 14 (instruccion -> RETURNN PUNTOCOMA .)


state 46

    (15) instruccion -> CONTINUEE PUNTOCOMA .

    RCONSOLE        reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RLET            reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    ID              reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RWHILE          reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RFOR            reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RINTERFACE      reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RFUNCTION       reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RBREAK          reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RRETURN         reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RCONTINUE       reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RPUSH           reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RPOP            reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RLENGTH         reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    RIF             reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    $end            reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)
    LLAVEDER        reduce using rule 15 (instruccion -> CONTINUEE PUNTOCOMA .)


state 47

    (16) instruccion -> PUSHH PUNTOCOMA .

    RCONSOLE        reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RLET            reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    ID              reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RWHILE          reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RFOR            reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RINTERFACE      reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RFUNCTION       reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RBREAK          reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RRETURN         reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RCONTINUE       reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RPUSH           reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RPOP            reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RLENGTH         reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    RIF             reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    $end            reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)
    LLAVEDER        reduce using rule 16 (instruccion -> PUSHH PUNTOCOMA .)


state 48

    (17) instruccion -> POPP PUNTOCOMA .

    RCONSOLE        reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RLET            reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    ID              reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RWHILE          reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RFOR            reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RINTERFACE      reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RFUNCTION       reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RBREAK          reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RRETURN         reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RCONTINUE       reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RPUSH           reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RPOP            reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RLENGTH         reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    RIF             reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    $end            reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)
    LLAVEDER        reduce using rule 17 (instruccion -> POPP PUNTOCOMA .)


state 49

    (18) instruccion -> LENGHTT PUNTOCOMA .

    RCONSOLE        reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RLET            reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    ID              reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RWHILE          reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RFOR            reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RINTERFACE      reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RFUNCTION       reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RBREAK          reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RRETURN         reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RCONTINUE       reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RPUSH           reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RPOP            reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RLENGTH         reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    RIF             reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    $end            reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)
    LLAVEDER        reduce using rule 18 (instruccion -> LENGHTT PUNTOCOMA .)


state 50

    (59) imprimir -> RCONSOLE PUNTO . RLOG PARIZQ PARDER

    RLOG            shift and go to state 87


state 51

    (33) asignacion -> RLET ID . IGUAL expresion
    (34) asignacion -> RLET ID . DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> RLET ID . DOSPUNTOS ID IGUAL expresion
    (37) array -> RLET ID . number_array IGUAL expresion
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    IGUAL           shift and go to state 88
    DOSPUNTOS       shift and go to state 89
    CORIZQ          shift and go to state 56

    number_array                   shift and go to state 90

state 52

    (38) asignacion -> ID lista_id . IGUAL expresion
    (39) lista_id -> lista_id . PUNTO ID
    (40) lista_id -> lista_id . PUNTO ID number_array

    IGUAL           shift and go to state 91
    PUNTO           shift and go to state 92


state 53

    (36) array -> ID number_array . lista_id IGUAL expresion
    (73) number_array -> number_array . CORIZQ expresion CORDER
    (39) lista_id -> . lista_id PUNTO ID
    (40) lista_id -> . lista_id PUNTO ID number_array
    (41) lista_id -> . PUNTO ID
    (42) lista_id -> . PUNTO ID number_array

    CORIZQ          shift and go to state 94
    PUNTO           shift and go to state 55

    lista_id                       shift and go to state 93

state 54

    (43) llamada -> ID PARIZQ . parametro_print PARDER
    (44) llamada -> ID PARIZQ . PARDER
    (60) parametro_print -> . parametro_print COMA expresion
    (61) parametro_print -> . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    PARDER          shift and go to state 96
    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    parametro_print                shift and go to state 95
    expresion                      shift and go to state 97
    exp_struct                     shift and go to state 64

state 55

    (41) lista_id -> PUNTO . ID
    (42) lista_id -> PUNTO . ID number_array

    ID              shift and go to state 98


state 56

    (72) number_array -> CORIZQ . expresion CORDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 99
    exp_struct                     shift and go to state 64

state 57

    (22) condicional -> if_ RELSE . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 100


state 58

    (29) if_ -> if_ RELSEIF . PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 101


state 59

    (30) whilee -> RWHILE PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 102
    exp_struct                     shift and go to state 64

state 60

    (31) forr -> RFOR PARIZQ . RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR PARIZQ . RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RLET            shift and go to state 103


state 61

    (53) struct -> RINTERFACE ID . LLAVEIZQ parametros_struct LLAVEDER

    LLAVEIZQ        shift and go to state 104


state 62

    (45) functionn -> RFUNCTION ID . PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> RFUNCTION ID . PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER

    PARIZQ          shift and go to state 105


state 63

    (27) RETURNN -> RRETURN expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 27 (RETURNN -> RRETURN expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 64

    (67) expresion -> exp_struct .
    (68) exp_struct -> exp_struct . PUNTO ID
    (69) exp_struct -> exp_struct . PUNTO ID number_array

    MAS             reduce using rule 67 (expresion -> exp_struct .)
    MENOS           reduce using rule 67 (expresion -> exp_struct .)
    POR             reduce using rule 67 (expresion -> exp_struct .)
    DIVI            reduce using rule 67 (expresion -> exp_struct .)
    POTENCIA        reduce using rule 67 (expresion -> exp_struct .)
    MODULO          reduce using rule 67 (expresion -> exp_struct .)
    IGUALIGUAL      reduce using rule 67 (expresion -> exp_struct .)
    DIFERENTE       reduce using rule 67 (expresion -> exp_struct .)
    MAYOR           reduce using rule 67 (expresion -> exp_struct .)
    MENOR           reduce using rule 67 (expresion -> exp_struct .)
    MAYORIGUAL      reduce using rule 67 (expresion -> exp_struct .)
    MENORIGUAL      reduce using rule 67 (expresion -> exp_struct .)
    AND             reduce using rule 67 (expresion -> exp_struct .)
    OR              reduce using rule 67 (expresion -> exp_struct .)
    PUNTOCOMA       reduce using rule 67 (expresion -> exp_struct .)
    PARDER          reduce using rule 67 (expresion -> exp_struct .)
    COMA            reduce using rule 67 (expresion -> exp_struct .)
    CORDER          reduce using rule 67 (expresion -> exp_struct .)
    PUNTO           shift and go to state 120


state 65

    (74) expresion -> CORIZQ . expresion_exp CORDER
    (75) expresion_exp -> . expresion_exp COMA expresion
    (76) expresion_exp -> . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion_exp                  shift and go to state 121
    expresion                      shift and go to state 122
    exp_struct                     shift and go to state 64

state 66

    (77) expresion -> ID . PARIZQ parametro_print PARDER
    (70) exp_struct -> ID .
    (71) exp_struct -> ID . number_array
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    PARIZQ          shift and go to state 123
    PUNTO           reduce using rule 70 (exp_struct -> ID .)
    MAS             reduce using rule 70 (exp_struct -> ID .)
    MENOS           reduce using rule 70 (exp_struct -> ID .)
    POR             reduce using rule 70 (exp_struct -> ID .)
    DIVI            reduce using rule 70 (exp_struct -> ID .)
    POTENCIA        reduce using rule 70 (exp_struct -> ID .)
    MODULO          reduce using rule 70 (exp_struct -> ID .)
    IGUALIGUAL      reduce using rule 70 (exp_struct -> ID .)
    DIFERENTE       reduce using rule 70 (exp_struct -> ID .)
    MAYOR           reduce using rule 70 (exp_struct -> ID .)
    MENOR           reduce using rule 70 (exp_struct -> ID .)
    MAYORIGUAL      reduce using rule 70 (exp_struct -> ID .)
    MENORIGUAL      reduce using rule 70 (exp_struct -> ID .)
    AND             reduce using rule 70 (exp_struct -> ID .)
    OR              reduce using rule 70 (exp_struct -> ID .)
    PUNTOCOMA       reduce using rule 70 (exp_struct -> ID .)
    PARDER          reduce using rule 70 (exp_struct -> ID .)
    COMA            reduce using rule 70 (exp_struct -> ID .)
    CORDER          reduce using rule 70 (exp_struct -> ID .)
    CORIZQ          shift and go to state 56

    number_array                   shift and go to state 124

state 67

    (107) expresion -> PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 125
    exp_struct                     shift and go to state 64

state 68

    (78) expresion -> RPUSH . NOT PARIZQ expresion COMA expresion PARDER

    NOT             shift and go to state 126


state 69

    (101) expresion -> NOT . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 127
    exp_struct                     shift and go to state 64

state 70

    (79) expresion -> RPOP . NOT PARIZQ expresion PARDER

    NOT             shift and go to state 128


state 71

    (80) expresion -> RLENGTH . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 129


state 72

    (81) expresion -> RTOFIXED . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 130


state 73

    (82) expresion -> RTOSTRING . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 131


state 74

    (83) expresion -> RTOEXPONENTIAL . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 132


state 75

    (84) expresion -> RTYPEOF . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 133


state 76

    (85) expresion -> RTOUPPERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 134


state 77

    (86) expresion -> RTOLOWERCASE . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 135


state 78

    (102) expresion -> RNUMBER .

    MAS             reduce using rule 102 (expresion -> RNUMBER .)
    MENOS           reduce using rule 102 (expresion -> RNUMBER .)
    POR             reduce using rule 102 (expresion -> RNUMBER .)
    DIVI            reduce using rule 102 (expresion -> RNUMBER .)
    POTENCIA        reduce using rule 102 (expresion -> RNUMBER .)
    MODULO          reduce using rule 102 (expresion -> RNUMBER .)
    IGUALIGUAL      reduce using rule 102 (expresion -> RNUMBER .)
    DIFERENTE       reduce using rule 102 (expresion -> RNUMBER .)
    MAYOR           reduce using rule 102 (expresion -> RNUMBER .)
    MENOR           reduce using rule 102 (expresion -> RNUMBER .)
    MAYORIGUAL      reduce using rule 102 (expresion -> RNUMBER .)
    MENORIGUAL      reduce using rule 102 (expresion -> RNUMBER .)
    AND             reduce using rule 102 (expresion -> RNUMBER .)
    OR              reduce using rule 102 (expresion -> RNUMBER .)
    PUNTOCOMA       reduce using rule 102 (expresion -> RNUMBER .)
    PARDER          reduce using rule 102 (expresion -> RNUMBER .)
    COMA            reduce using rule 102 (expresion -> RNUMBER .)
    CORDER          reduce using rule 102 (expresion -> RNUMBER .)


state 79

    (103) expresion -> RSTRING .

    MAS             reduce using rule 103 (expresion -> RSTRING .)
    MENOS           reduce using rule 103 (expresion -> RSTRING .)
    POR             reduce using rule 103 (expresion -> RSTRING .)
    DIVI            reduce using rule 103 (expresion -> RSTRING .)
    POTENCIA        reduce using rule 103 (expresion -> RSTRING .)
    MODULO          reduce using rule 103 (expresion -> RSTRING .)
    IGUALIGUAL      reduce using rule 103 (expresion -> RSTRING .)
    DIFERENTE       reduce using rule 103 (expresion -> RSTRING .)
    MAYOR           reduce using rule 103 (expresion -> RSTRING .)
    MENOR           reduce using rule 103 (expresion -> RSTRING .)
    MAYORIGUAL      reduce using rule 103 (expresion -> RSTRING .)
    MENORIGUAL      reduce using rule 103 (expresion -> RSTRING .)
    AND             reduce using rule 103 (expresion -> RSTRING .)
    OR              reduce using rule 103 (expresion -> RSTRING .)
    PUNTOCOMA       reduce using rule 103 (expresion -> RSTRING .)
    PARDER          reduce using rule 103 (expresion -> RSTRING .)
    COMA            reduce using rule 103 (expresion -> RSTRING .)
    CORDER          reduce using rule 103 (expresion -> RSTRING .)


state 80

    (104) expresion -> RFALSE .

    MAS             reduce using rule 104 (expresion -> RFALSE .)
    MENOS           reduce using rule 104 (expresion -> RFALSE .)
    POR             reduce using rule 104 (expresion -> RFALSE .)
    DIVI            reduce using rule 104 (expresion -> RFALSE .)
    POTENCIA        reduce using rule 104 (expresion -> RFALSE .)
    MODULO          reduce using rule 104 (expresion -> RFALSE .)
    IGUALIGUAL      reduce using rule 104 (expresion -> RFALSE .)
    DIFERENTE       reduce using rule 104 (expresion -> RFALSE .)
    MAYOR           reduce using rule 104 (expresion -> RFALSE .)
    MENOR           reduce using rule 104 (expresion -> RFALSE .)
    MAYORIGUAL      reduce using rule 104 (expresion -> RFALSE .)
    MENORIGUAL      reduce using rule 104 (expresion -> RFALSE .)
    AND             reduce using rule 104 (expresion -> RFALSE .)
    OR              reduce using rule 104 (expresion -> RFALSE .)
    PUNTOCOMA       reduce using rule 104 (expresion -> RFALSE .)
    PARDER          reduce using rule 104 (expresion -> RFALSE .)
    COMA            reduce using rule 104 (expresion -> RFALSE .)
    CORDER          reduce using rule 104 (expresion -> RFALSE .)


state 81

    (105) expresion -> RTRUE .

    MAS             reduce using rule 105 (expresion -> RTRUE .)
    MENOS           reduce using rule 105 (expresion -> RTRUE .)
    POR             reduce using rule 105 (expresion -> RTRUE .)
    DIVI            reduce using rule 105 (expresion -> RTRUE .)
    POTENCIA        reduce using rule 105 (expresion -> RTRUE .)
    MODULO          reduce using rule 105 (expresion -> RTRUE .)
    IGUALIGUAL      reduce using rule 105 (expresion -> RTRUE .)
    DIFERENTE       reduce using rule 105 (expresion -> RTRUE .)
    MAYOR           reduce using rule 105 (expresion -> RTRUE .)
    MENOR           reduce using rule 105 (expresion -> RTRUE .)
    MAYORIGUAL      reduce using rule 105 (expresion -> RTRUE .)
    MENORIGUAL      reduce using rule 105 (expresion -> RTRUE .)
    AND             reduce using rule 105 (expresion -> RTRUE .)
    OR              reduce using rule 105 (expresion -> RTRUE .)
    PUNTOCOMA       reduce using rule 105 (expresion -> RTRUE .)
    PARDER          reduce using rule 105 (expresion -> RTRUE .)
    COMA            reduce using rule 105 (expresion -> RTRUE .)
    CORDER          reduce using rule 105 (expresion -> RTRUE .)


state 82

    (106) expresion -> RANY .

    MAS             reduce using rule 106 (expresion -> RANY .)
    MENOS           reduce using rule 106 (expresion -> RANY .)
    POR             reduce using rule 106 (expresion -> RANY .)
    DIVI            reduce using rule 106 (expresion -> RANY .)
    POTENCIA        reduce using rule 106 (expresion -> RANY .)
    MODULO          reduce using rule 106 (expresion -> RANY .)
    IGUALIGUAL      reduce using rule 106 (expresion -> RANY .)
    DIFERENTE       reduce using rule 106 (expresion -> RANY .)
    MAYOR           reduce using rule 106 (expresion -> RANY .)
    MENOR           reduce using rule 106 (expresion -> RANY .)
    MAYORIGUAL      reduce using rule 106 (expresion -> RANY .)
    MENORIGUAL      reduce using rule 106 (expresion -> RANY .)
    AND             reduce using rule 106 (expresion -> RANY .)
    OR              reduce using rule 106 (expresion -> RANY .)
    PUNTOCOMA       reduce using rule 106 (expresion -> RANY .)
    PARDER          reduce using rule 106 (expresion -> RANY .)
    COMA            reduce using rule 106 (expresion -> RANY .)
    CORDER          reduce using rule 106 (expresion -> RANY .)


state 83

    (19) PUSHH -> RPUSH PARIZQ . expresion COMA expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 136
    exp_struct                     shift and go to state 64

state 84

    (20) POPP -> RPOP PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 137
    exp_struct                     shift and go to state 64

state 85

    (21) LENGHTT -> RLENGTH PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 138
    exp_struct                     shift and go to state 64

state 86

    (28) if_ -> RIF PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 139
    exp_struct                     shift and go to state 64

state 87

    (59) imprimir -> RCONSOLE PUNTO RLOG . PARIZQ PARDER

    PARIZQ          shift and go to state 140


state 88

    (33) asignacion -> RLET ID IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 141
    exp_struct                     shift and go to state 64

state 89

    (34) asignacion -> RLET ID DOSPUNTOS . tipo IGUAL expresion
    (35) asignacion -> RLET ID DOSPUNTOS . ID IGUAL expresion
    (62) tipo -> . RNUMBER
    (63) tipo -> . RBOOL
    (64) tipo -> . RSTRING
    (65) tipo -> . RANY
    (66) tipo -> . RNULL

    ID              shift and go to state 142
    RNUMBER         shift and go to state 144
    RBOOL           shift and go to state 145
    RSTRING         shift and go to state 146
    RANY            shift and go to state 147
    RNULL           shift and go to state 148

    tipo                           shift and go to state 143

state 90

    (37) array -> RLET ID number_array . IGUAL expresion
    (73) number_array -> number_array . CORIZQ expresion CORDER

    IGUAL           shift and go to state 149
    CORIZQ          shift and go to state 94


state 91

    (38) asignacion -> ID lista_id IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 150
    exp_struct                     shift and go to state 64

state 92

    (39) lista_id -> lista_id PUNTO . ID
    (40) lista_id -> lista_id PUNTO . ID number_array

    ID              shift and go to state 151


state 93

    (36) array -> ID number_array lista_id . IGUAL expresion
    (39) lista_id -> lista_id . PUNTO ID
    (40) lista_id -> lista_id . PUNTO ID number_array

    IGUAL           shift and go to state 152
    PUNTO           shift and go to state 92


state 94

    (73) number_array -> number_array CORIZQ . expresion CORDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 153
    exp_struct                     shift and go to state 64

state 95

    (43) llamada -> ID PARIZQ parametro_print . PARDER
    (60) parametro_print -> parametro_print . COMA expresion

    PARDER          shift and go to state 154
    COMA            shift and go to state 155


state 96

    (44) llamada -> ID PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 44 (llamada -> ID PARIZQ PARDER .)


state 97

    (61) parametro_print -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          reduce using rule 61 (parametro_print -> expresion .)
    COMA            reduce using rule 61 (parametro_print -> expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 98

    (41) lista_id -> PUNTO ID .
    (42) lista_id -> PUNTO ID . number_array
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    IGUAL           reduce using rule 41 (lista_id -> PUNTO ID .)
    PUNTO           reduce using rule 41 (lista_id -> PUNTO ID .)
    CORIZQ          shift and go to state 56

    number_array                   shift and go to state 156

state 99

    (72) number_array -> CORIZQ expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    CORDER          shift and go to state 157
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 100

    (22) condicional -> if_ RELSE LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    if_                            shift and go to state 22
    instrucciones                  shift and go to state 158
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18

state 101

    (29) if_ -> if_ RELSEIF PARIZQ . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 159
    exp_struct                     shift and go to state 64

state 102

    (30) whilee -> RWHILE PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 160
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 103

    (31) forr -> RFOR PARIZQ RLET . ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR PARIZQ RLET . ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    ID              shift and go to state 161


state 104

    (53) struct -> RINTERFACE ID LLAVEIZQ . parametros_struct LLAVEDER
    (54) parametros_struct -> . parametros_struct parametro_struct
    (55) parametros_struct -> . parametro_struct
    (56) parametro_struct -> . ID PUNTOCOMA
    (57) parametro_struct -> . ID DOSPUNTOS tipo PUNTOCOMA
    (58) parametro_struct -> . ID DOSPUNTOS ID PUNTOCOMA

    ID              shift and go to state 162

    parametros_struct              shift and go to state 163
    parametro_struct               shift and go to state 164

state 105

    (45) functionn -> RFUNCTION ID PARIZQ . PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> RFUNCTION ID PARIZQ . parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) parametros_function -> . parametros_function COMA ID
    (48) parametros_function -> . parametros_function COMA ID DOSPUNTOS tipo
    (49) parametros_function -> . parametros_function COMA ID DOSPUNTOS ID
    (50) parametros_function -> . ID
    (51) parametros_function -> . ID DOSPUNTOS tipo
    (52) parametros_function -> . ID DOSPUNTOS ID

    PARDER          shift and go to state 166
    ID              shift and go to state 165

    parametros_function            shift and go to state 167

state 106

    (87) expresion -> expresion MAS . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 168
    exp_struct                     shift and go to state 64

state 107

    (88) expresion -> expresion MENOS . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 169
    exp_struct                     shift and go to state 64

state 108

    (89) expresion -> expresion POR . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 170
    exp_struct                     shift and go to state 64

state 109

    (90) expresion -> expresion DIVI . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 171
    exp_struct                     shift and go to state 64

state 110

    (91) expresion -> expresion POTENCIA . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 172
    exp_struct                     shift and go to state 64

state 111

    (92) expresion -> expresion MODULO . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 173
    exp_struct                     shift and go to state 64

state 112

    (93) expresion -> expresion IGUALIGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 174
    exp_struct                     shift and go to state 64

state 113

    (94) expresion -> expresion DIFERENTE . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 175
    exp_struct                     shift and go to state 64

state 114

    (95) expresion -> expresion MAYOR . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 176
    exp_struct                     shift and go to state 64

state 115

    (96) expresion -> expresion MENOR . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 177
    exp_struct                     shift and go to state 64

state 116

    (97) expresion -> expresion MAYORIGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 178
    exp_struct                     shift and go to state 64

state 117

    (98) expresion -> expresion MENORIGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 179
    exp_struct                     shift and go to state 64

state 118

    (99) expresion -> expresion AND . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 180
    exp_struct                     shift and go to state 64

state 119

    (100) expresion -> expresion OR . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 181
    exp_struct                     shift and go to state 64

state 120

    (68) exp_struct -> exp_struct PUNTO . ID
    (69) exp_struct -> exp_struct PUNTO . ID number_array

    ID              shift and go to state 182


state 121

    (74) expresion -> CORIZQ expresion_exp . CORDER
    (75) expresion_exp -> expresion_exp . COMA expresion

    CORDER          shift and go to state 183
    COMA            shift and go to state 184


state 122

    (76) expresion_exp -> expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    CORDER          reduce using rule 76 (expresion_exp -> expresion .)
    COMA            reduce using rule 76 (expresion_exp -> expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 123

    (77) expresion -> ID PARIZQ . parametro_print PARDER
    (60) parametro_print -> . parametro_print COMA expresion
    (61) parametro_print -> . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    parametro_print                shift and go to state 185
    expresion                      shift and go to state 97
    exp_struct                     shift and go to state 64

state 124

    (71) exp_struct -> ID number_array .
    (73) number_array -> number_array . CORIZQ expresion CORDER

    PUNTO           reduce using rule 71 (exp_struct -> ID number_array .)
    MAS             reduce using rule 71 (exp_struct -> ID number_array .)
    MENOS           reduce using rule 71 (exp_struct -> ID number_array .)
    POR             reduce using rule 71 (exp_struct -> ID number_array .)
    DIVI            reduce using rule 71 (exp_struct -> ID number_array .)
    POTENCIA        reduce using rule 71 (exp_struct -> ID number_array .)
    MODULO          reduce using rule 71 (exp_struct -> ID number_array .)
    IGUALIGUAL      reduce using rule 71 (exp_struct -> ID number_array .)
    DIFERENTE       reduce using rule 71 (exp_struct -> ID number_array .)
    MAYOR           reduce using rule 71 (exp_struct -> ID number_array .)
    MENOR           reduce using rule 71 (exp_struct -> ID number_array .)
    MAYORIGUAL      reduce using rule 71 (exp_struct -> ID number_array .)
    MENORIGUAL      reduce using rule 71 (exp_struct -> ID number_array .)
    AND             reduce using rule 71 (exp_struct -> ID number_array .)
    OR              reduce using rule 71 (exp_struct -> ID number_array .)
    PUNTOCOMA       reduce using rule 71 (exp_struct -> ID number_array .)
    PARDER          reduce using rule 71 (exp_struct -> ID number_array .)
    COMA            reduce using rule 71 (exp_struct -> ID number_array .)
    CORDER          reduce using rule 71 (exp_struct -> ID number_array .)
    CORIZQ          shift and go to state 94


state 125

    (107) expresion -> PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 186
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 126

    (78) expresion -> RPUSH NOT . PARIZQ expresion COMA expresion PARDER

    PARIZQ          shift and go to state 187


state 127

    (101) expresion -> NOT expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 101 (expresion -> NOT expresion .)
    MENOS           reduce using rule 101 (expresion -> NOT expresion .)
    POR             reduce using rule 101 (expresion -> NOT expresion .)
    DIVI            reduce using rule 101 (expresion -> NOT expresion .)
    MODULO          reduce using rule 101 (expresion -> NOT expresion .)
    IGUALIGUAL      reduce using rule 101 (expresion -> NOT expresion .)
    DIFERENTE       reduce using rule 101 (expresion -> NOT expresion .)
    MAYOR           reduce using rule 101 (expresion -> NOT expresion .)
    MENOR           reduce using rule 101 (expresion -> NOT expresion .)
    MAYORIGUAL      reduce using rule 101 (expresion -> NOT expresion .)
    MENORIGUAL      reduce using rule 101 (expresion -> NOT expresion .)
    AND             reduce using rule 101 (expresion -> NOT expresion .)
    OR              reduce using rule 101 (expresion -> NOT expresion .)
    PUNTOCOMA       reduce using rule 101 (expresion -> NOT expresion .)
    PARDER          reduce using rule 101 (expresion -> NOT expresion .)
    COMA            reduce using rule 101 (expresion -> NOT expresion .)
    CORDER          reduce using rule 101 (expresion -> NOT expresion .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 101 (expresion -> NOT expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! POR             [ shift and go to state 108 ]
  ! DIVI            [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 128

    (79) expresion -> RPOP NOT . PARIZQ expresion PARDER

    PARIZQ          shift and go to state 188


state 129

    (80) expresion -> RLENGTH PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 189
    exp_struct                     shift and go to state 64

state 130

    (81) expresion -> RTOFIXED PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 190
    exp_struct                     shift and go to state 64

state 131

    (82) expresion -> RTOSTRING PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 191
    exp_struct                     shift and go to state 64

state 132

    (83) expresion -> RTOEXPONENTIAL PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 192
    exp_struct                     shift and go to state 64

state 133

    (84) expresion -> RTYPEOF PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 193
    exp_struct                     shift and go to state 64

state 134

    (85) expresion -> RTOUPPERCASE PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 194
    exp_struct                     shift and go to state 64

state 135

    (86) expresion -> RTOLOWERCASE PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 195
    exp_struct                     shift and go to state 64

state 136

    (19) PUSHH -> RPUSH PARIZQ expresion . COMA expresion PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    COMA            shift and go to state 196
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 137

    (20) POPP -> RPOP PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 197
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 138

    (21) LENGHTT -> RLENGTH PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 198
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 139

    (28) if_ -> RIF PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 199
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 140

    (59) imprimir -> RCONSOLE PUNTO RLOG PARIZQ . PARDER

    PARDER          shift and go to state 200


state 141

    (33) asignacion -> RLET ID IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 33 (asignacion -> RLET ID IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 142

    (35) asignacion -> RLET ID DOSPUNTOS ID . IGUAL expresion

    IGUAL           shift and go to state 201


state 143

    (34) asignacion -> RLET ID DOSPUNTOS tipo . IGUAL expresion

    IGUAL           shift and go to state 202


state 144

    (62) tipo -> RNUMBER .

    IGUAL           reduce using rule 62 (tipo -> RNUMBER .)
    PUNTOCOMA       reduce using rule 62 (tipo -> RNUMBER .)
    PARDER          reduce using rule 62 (tipo -> RNUMBER .)
    COMA            reduce using rule 62 (tipo -> RNUMBER .)


state 145

    (63) tipo -> RBOOL .

    IGUAL           reduce using rule 63 (tipo -> RBOOL .)
    PUNTOCOMA       reduce using rule 63 (tipo -> RBOOL .)
    PARDER          reduce using rule 63 (tipo -> RBOOL .)
    COMA            reduce using rule 63 (tipo -> RBOOL .)


state 146

    (64) tipo -> RSTRING .

    IGUAL           reduce using rule 64 (tipo -> RSTRING .)
    PUNTOCOMA       reduce using rule 64 (tipo -> RSTRING .)
    PARDER          reduce using rule 64 (tipo -> RSTRING .)
    COMA            reduce using rule 64 (tipo -> RSTRING .)


state 147

    (65) tipo -> RANY .

    IGUAL           reduce using rule 65 (tipo -> RANY .)
    PUNTOCOMA       reduce using rule 65 (tipo -> RANY .)
    PARDER          reduce using rule 65 (tipo -> RANY .)
    COMA            reduce using rule 65 (tipo -> RANY .)


state 148

    (66) tipo -> RNULL .

    IGUAL           reduce using rule 66 (tipo -> RNULL .)
    PUNTOCOMA       reduce using rule 66 (tipo -> RNULL .)
    PARDER          reduce using rule 66 (tipo -> RNULL .)
    COMA            reduce using rule 66 (tipo -> RNULL .)


state 149

    (37) array -> RLET ID number_array IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 203
    exp_struct                     shift and go to state 64

state 150

    (38) asignacion -> ID lista_id IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 38 (asignacion -> ID lista_id IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 151

    (39) lista_id -> lista_id PUNTO ID .
    (40) lista_id -> lista_id PUNTO ID . number_array
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    IGUAL           reduce using rule 39 (lista_id -> lista_id PUNTO ID .)
    PUNTO           reduce using rule 39 (lista_id -> lista_id PUNTO ID .)
    CORIZQ          shift and go to state 56

    number_array                   shift and go to state 204

state 152

    (36) array -> ID number_array lista_id IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 205
    exp_struct                     shift and go to state 64

state 153

    (73) number_array -> number_array CORIZQ expresion . CORDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    CORDER          shift and go to state 206
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 154

    (43) llamada -> ID PARIZQ parametro_print PARDER .

    PUNTOCOMA       reduce using rule 43 (llamada -> ID PARIZQ parametro_print PARDER .)


state 155

    (60) parametro_print -> parametro_print COMA . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 207
    exp_struct                     shift and go to state 64

state 156

    (42) lista_id -> PUNTO ID number_array .
    (73) number_array -> number_array . CORIZQ expresion CORDER

    IGUAL           reduce using rule 42 (lista_id -> PUNTO ID number_array .)
    PUNTO           reduce using rule 42 (lista_id -> PUNTO ID number_array .)
    CORIZQ          shift and go to state 94


state 157

    (72) number_array -> CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MAS             reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MENOS           reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    POR             reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    DIVI            reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MODULO          reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MENOR           reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    AND             reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    OR              reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    PARDER          reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    COMA            reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)
    CORDER          reduce using rule 72 (number_array -> CORIZQ expresion CORDER .)


state 158

    (22) condicional -> if_ RELSE LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 208
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    if_                            shift and go to state 22
    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18

state 159

    (29) if_ -> if_ RELSEIF PARIZQ expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 209
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 160

    (30) whilee -> RWHILE PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 210


state 161

    (31) forr -> RFOR PARIZQ RLET ID . ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR PARIZQ RLET ID . ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    ROF             shift and go to state 211


state 162

    (56) parametro_struct -> ID . PUNTOCOMA
    (57) parametro_struct -> ID . DOSPUNTOS tipo PUNTOCOMA
    (58) parametro_struct -> ID . DOSPUNTOS ID PUNTOCOMA

    PUNTOCOMA       shift and go to state 212
    DOSPUNTOS       shift and go to state 213


state 163

    (53) struct -> RINTERFACE ID LLAVEIZQ parametros_struct . LLAVEDER
    (54) parametros_struct -> parametros_struct . parametro_struct
    (56) parametro_struct -> . ID PUNTOCOMA
    (57) parametro_struct -> . ID DOSPUNTOS tipo PUNTOCOMA
    (58) parametro_struct -> . ID DOSPUNTOS ID PUNTOCOMA

    LLAVEDER        shift and go to state 214
    ID              shift and go to state 162

    parametro_struct               shift and go to state 215

state 164

    (55) parametros_struct -> parametro_struct .

    LLAVEDER        reduce using rule 55 (parametros_struct -> parametro_struct .)
    ID              reduce using rule 55 (parametros_struct -> parametro_struct .)


state 165

    (50) parametros_function -> ID .
    (51) parametros_function -> ID . DOSPUNTOS tipo
    (52) parametros_function -> ID . DOSPUNTOS ID

    PARDER          reduce using rule 50 (parametros_function -> ID .)
    COMA            reduce using rule 50 (parametros_function -> ID .)
    DOSPUNTOS       shift and go to state 216


state 166

    (45) functionn -> RFUNCTION ID PARIZQ PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 217


state 167

    (46) functionn -> RFUNCTION ID PARIZQ parametros_function . PARDER LLAVEIZQ instrucciones LLAVEDER
    (47) parametros_function -> parametros_function . COMA ID
    (48) parametros_function -> parametros_function . COMA ID DOSPUNTOS tipo
    (49) parametros_function -> parametros_function . COMA ID DOSPUNTOS ID

    PARDER          shift and go to state 218
    COMA            shift and go to state 219


state 168

    (87) expresion -> expresion MAS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOS           reduce using rule 87 (expresion -> expresion MAS expresion .)
    IGUALIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    DIFERENTE       reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYOR           reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENOR           reduce using rule 87 (expresion -> expresion MAS expresion .)
    MAYORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    MENORIGUAL      reduce using rule 87 (expresion -> expresion MAS expresion .)
    AND             reduce using rule 87 (expresion -> expresion MAS expresion .)
    OR              reduce using rule 87 (expresion -> expresion MAS expresion .)
    PUNTOCOMA       reduce using rule 87 (expresion -> expresion MAS expresion .)
    PARDER          reduce using rule 87 (expresion -> expresion MAS expresion .)
    COMA            reduce using rule 87 (expresion -> expresion MAS expresion .)
    CORDER          reduce using rule 87 (expresion -> expresion MAS expresion .)
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! POR             [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! DIVI            [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! POTENCIA        [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MODULO          [ reduce using rule 87 (expresion -> expresion MAS expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 169

    (88) expresion -> expresion MENOS expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOS           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    IGUALIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    DIFERENTE       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYOR           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENOR           reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MAYORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    MENORIGUAL      reduce using rule 88 (expresion -> expresion MENOS expresion .)
    AND             reduce using rule 88 (expresion -> expresion MENOS expresion .)
    OR              reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PUNTOCOMA       reduce using rule 88 (expresion -> expresion MENOS expresion .)
    PARDER          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    COMA            reduce using rule 88 (expresion -> expresion MENOS expresion .)
    CORDER          reduce using rule 88 (expresion -> expresion MENOS expresion .)
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! POR             [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! DIVI            [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! POTENCIA        [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MODULO          [ reduce using rule 88 (expresion -> expresion MENOS expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 170

    (89) expresion -> expresion POR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 89 (expresion -> expresion POR expresion .)
    MENOS           reduce using rule 89 (expresion -> expresion POR expresion .)
    POR             reduce using rule 89 (expresion -> expresion POR expresion .)
    DIVI            reduce using rule 89 (expresion -> expresion POR expresion .)
    MODULO          reduce using rule 89 (expresion -> expresion POR expresion .)
    IGUALIGUAL      reduce using rule 89 (expresion -> expresion POR expresion .)
    DIFERENTE       reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYOR           reduce using rule 89 (expresion -> expresion POR expresion .)
    MENOR           reduce using rule 89 (expresion -> expresion POR expresion .)
    MAYORIGUAL      reduce using rule 89 (expresion -> expresion POR expresion .)
    MENORIGUAL      reduce using rule 89 (expresion -> expresion POR expresion .)
    AND             reduce using rule 89 (expresion -> expresion POR expresion .)
    OR              reduce using rule 89 (expresion -> expresion POR expresion .)
    PUNTOCOMA       reduce using rule 89 (expresion -> expresion POR expresion .)
    PARDER          reduce using rule 89 (expresion -> expresion POR expresion .)
    COMA            reduce using rule 89 (expresion -> expresion POR expresion .)
    CORDER          reduce using rule 89 (expresion -> expresion POR expresion .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 89 (expresion -> expresion POR expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! POR             [ shift and go to state 108 ]
  ! DIVI            [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 171

    (90) expresion -> expresion DIVI expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MENOS           reduce using rule 90 (expresion -> expresion DIVI expresion .)
    POR             reduce using rule 90 (expresion -> expresion DIVI expresion .)
    DIVI            reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MODULO          reduce using rule 90 (expresion -> expresion DIVI expresion .)
    IGUALIGUAL      reduce using rule 90 (expresion -> expresion DIVI expresion .)
    DIFERENTE       reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MAYOR           reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MENOR           reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MAYORIGUAL      reduce using rule 90 (expresion -> expresion DIVI expresion .)
    MENORIGUAL      reduce using rule 90 (expresion -> expresion DIVI expresion .)
    AND             reduce using rule 90 (expresion -> expresion DIVI expresion .)
    OR              reduce using rule 90 (expresion -> expresion DIVI expresion .)
    PUNTOCOMA       reduce using rule 90 (expresion -> expresion DIVI expresion .)
    PARDER          reduce using rule 90 (expresion -> expresion DIVI expresion .)
    COMA            reduce using rule 90 (expresion -> expresion DIVI expresion .)
    CORDER          reduce using rule 90 (expresion -> expresion DIVI expresion .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 90 (expresion -> expresion DIVI expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! POR             [ shift and go to state 108 ]
  ! DIVI            [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 172

    (91) expresion -> expresion POTENCIA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MENOS           reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    POR             reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    DIVI            reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MODULO          reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    IGUALIGUAL      reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    DIFERENTE       reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MAYOR           reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MENOR           reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MAYORIGUAL      reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    MENORIGUAL      reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    AND             reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    OR              reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    PUNTOCOMA       reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    PARDER          reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    COMA            reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    CORDER          reduce using rule 91 (expresion -> expresion POTENCIA expresion .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 91 (expresion -> expresion POTENCIA expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! POR             [ shift and go to state 108 ]
  ! DIVI            [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 173

    (92) expresion -> expresion MODULO expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    MAS             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENOS           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    POR             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DIVI            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MODULO          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    IGUALIGUAL      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    DIFERENTE       reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MAYOR           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENOR           reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MAYORIGUAL      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    MENORIGUAL      reduce using rule 92 (expresion -> expresion MODULO expresion .)
    AND             reduce using rule 92 (expresion -> expresion MODULO expresion .)
    OR              reduce using rule 92 (expresion -> expresion MODULO expresion .)
    PUNTOCOMA       reduce using rule 92 (expresion -> expresion MODULO expresion .)
    PARDER          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    COMA            reduce using rule 92 (expresion -> expresion MODULO expresion .)
    CORDER          reduce using rule 92 (expresion -> expresion MODULO expresion .)
    POTENCIA        shift and go to state 110

  ! POTENCIA        [ reduce using rule 92 (expresion -> expresion MODULO expresion .) ]
  ! MAS             [ shift and go to state 106 ]
  ! MENOS           [ shift and go to state 107 ]
  ! POR             [ shift and go to state 108 ]
  ! DIVI            [ shift and go to state 109 ]
  ! MODULO          [ shift and go to state 111 ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 174

    (93) expresion -> expresion IGUALIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    DIFERENTE       reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    AND             reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    OR              reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    PUNTOCOMA       reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    PARDER          reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    COMA            reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    CORDER          reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117

  ! MAS             [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POR             [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! DIVI            [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYOR           [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENOR           [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! MENORIGUAL      [ reduce using rule 93 (expresion -> expresion IGUALIGUAL expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 175

    (94) expresion -> expresion DIFERENTE expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    DIFERENTE       reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    AND             reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    OR              reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    PUNTOCOMA       reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    PARDER          reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    COMA            reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    CORDER          reduce using rule 94 (expresion -> expresion DIFERENTE expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117

  ! MAS             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOS           [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! POR             [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! DIVI            [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! POTENCIA        [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MODULO          [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYOR           [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENOR           [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! MENORIGUAL      [ reduce using rule 94 (expresion -> expresion DIFERENTE expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 176

    (95) expresion -> expresion MAYOR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    DIFERENTE       reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MAYOR           reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MENOR           reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MAYORIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MENORIGUAL      reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    AND             reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    OR              reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    PUNTOCOMA       reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    PARDER          reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    COMA            reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    CORDER          reduce using rule 95 (expresion -> expresion MAYOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! MAS             [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MENOS           [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! POR             [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! DIVI            [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! POTENCIA        [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! MODULO          [ reduce using rule 95 (expresion -> expresion MAYOR expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 177

    (96) expresion -> expresion MENOR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    DIFERENTE       reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MAYOR           reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MENOR           reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MAYORIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MENORIGUAL      reduce using rule 96 (expresion -> expresion MENOR expresion .)
    AND             reduce using rule 96 (expresion -> expresion MENOR expresion .)
    OR              reduce using rule 96 (expresion -> expresion MENOR expresion .)
    PUNTOCOMA       reduce using rule 96 (expresion -> expresion MENOR expresion .)
    PARDER          reduce using rule 96 (expresion -> expresion MENOR expresion .)
    COMA            reduce using rule 96 (expresion -> expresion MENOR expresion .)
    CORDER          reduce using rule 96 (expresion -> expresion MENOR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! MAS             [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MENOS           [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! POR             [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! DIVI            [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! POTENCIA        [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! MODULO          [ reduce using rule 96 (expresion -> expresion MENOR expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 178

    (97) expresion -> expresion MAYORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    DIFERENTE       reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAYOR           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENOR           reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MENORIGUAL      reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    AND             reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    OR              reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    PARDER          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    COMA            reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    CORDER          reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! MAS             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POR             [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! DIVI            [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 97 (expresion -> expresion MAYORIGUAL expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 179

    (98) expresion -> expresion MENORIGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    IGUALIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    DIFERENTE       reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAYOR           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENOR           reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAYORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MENORIGUAL      reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    AND             reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    OR              reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PUNTOCOMA       reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    PARDER          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    COMA            reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    CORDER          reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111

  ! MAS             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MENOS           [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POR             [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! DIVI            [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! POTENCIA        [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! MODULO          [ reduce using rule 98 (expresion -> expresion MENORIGUAL expresion .) ]
  ! IGUALIGUAL      [ shift and go to state 112 ]
  ! DIFERENTE       [ shift and go to state 113 ]
  ! MAYOR           [ shift and go to state 114 ]
  ! MENOR           [ shift and go to state 115 ]
  ! MAYORIGUAL      [ shift and go to state 116 ]
  ! MENORIGUAL      [ shift and go to state 117 ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 180

    (99) expresion -> expresion AND expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    AND             reduce using rule 99 (expresion -> expresion AND expresion .)
    OR              reduce using rule 99 (expresion -> expresion AND expresion .)
    PUNTOCOMA       reduce using rule 99 (expresion -> expresion AND expresion .)
    PARDER          reduce using rule 99 (expresion -> expresion AND expresion .)
    COMA            reduce using rule 99 (expresion -> expresion AND expresion .)
    CORDER          reduce using rule 99 (expresion -> expresion AND expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117

  ! MAS             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENOS           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! POR             [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! DIVI            [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! POTENCIA        [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MODULO          [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! DIFERENTE       [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MAYOR           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENOR           [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! MENORIGUAL      [ reduce using rule 99 (expresion -> expresion AND expresion .) ]
  ! AND             [ shift and go to state 118 ]
  ! OR              [ shift and go to state 119 ]


state 181

    (100) expresion -> expresion OR expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    OR              reduce using rule 100 (expresion -> expresion OR expresion .)
    PUNTOCOMA       reduce using rule 100 (expresion -> expresion OR expresion .)
    PARDER          reduce using rule 100 (expresion -> expresion OR expresion .)
    COMA            reduce using rule 100 (expresion -> expresion OR expresion .)
    CORDER          reduce using rule 100 (expresion -> expresion OR expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118

  ! MAS             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENOS           [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! POR             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! DIVI            [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! POTENCIA        [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MODULO          [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! IGUALIGUAL      [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! DIFERENTE       [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MAYOR           [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENOR           [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MAYORIGUAL      [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! MENORIGUAL      [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! AND             [ reduce using rule 100 (expresion -> expresion OR expresion .) ]
  ! OR              [ shift and go to state 119 ]


state 182

    (68) exp_struct -> exp_struct PUNTO ID .
    (69) exp_struct -> exp_struct PUNTO ID . number_array
    (72) number_array -> . CORIZQ expresion CORDER
    (73) number_array -> . number_array CORIZQ expresion CORDER

    PUNTO           reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MAS             reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MENOS           reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    POR             reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    DIVI            reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    POTENCIA        reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MODULO          reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    IGUALIGUAL      reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    DIFERENTE       reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MAYOR           reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MENOR           reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MAYORIGUAL      reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    MENORIGUAL      reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    AND             reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    OR              reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    PUNTOCOMA       reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    PARDER          reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    COMA            reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    CORDER          reduce using rule 68 (exp_struct -> exp_struct PUNTO ID .)
    CORIZQ          shift and go to state 56

    number_array                   shift and go to state 220

state 183

    (74) expresion -> CORIZQ expresion_exp CORDER .

    MAS             reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MENOS           reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    POR             reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    DIVI            reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    POTENCIA        reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MODULO          reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    IGUALIGUAL      reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    DIFERENTE       reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MAYOR           reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MENOR           reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MAYORIGUAL      reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    MENORIGUAL      reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    AND             reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    OR              reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    PUNTOCOMA       reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    PARDER          reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    COMA            reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)
    CORDER          reduce using rule 74 (expresion -> CORIZQ expresion_exp CORDER .)


state 184

    (75) expresion_exp -> expresion_exp COMA . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 221
    exp_struct                     shift and go to state 64

state 185

    (77) expresion -> ID PARIZQ parametro_print . PARDER
    (60) parametro_print -> parametro_print . COMA expresion

    PARDER          shift and go to state 222
    COMA            shift and go to state 155


state 186

    (107) expresion -> PARIZQ expresion PARDER .

    MAS             reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MENOS           reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    POR             reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    DIVI            reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MODULO          reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MENOR           reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    AND             reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    OR              reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    PARDER          reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    COMA            reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)
    CORDER          reduce using rule 107 (expresion -> PARIZQ expresion PARDER .)


state 187

    (78) expresion -> RPUSH NOT PARIZQ . expresion COMA expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 223
    exp_struct                     shift and go to state 64

state 188

    (79) expresion -> RPOP NOT PARIZQ . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 224
    exp_struct                     shift and go to state 64

state 189

    (80) expresion -> RLENGTH PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 225
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 190

    (81) expresion -> RTOFIXED PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 226
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 191

    (82) expresion -> RTOSTRING PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 227
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 192

    (83) expresion -> RTOEXPONENTIAL PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 228
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 193

    (84) expresion -> RTYPEOF PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 229
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 194

    (85) expresion -> RTOUPPERCASE PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 230
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 195

    (86) expresion -> RTOLOWERCASE PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 231
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 196

    (19) PUSHH -> RPUSH PARIZQ expresion COMA . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 232
    exp_struct                     shift and go to state 64

state 197

    (20) POPP -> RPOP PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 20 (POPP -> RPOP PARIZQ expresion PARDER .)


state 198

    (21) LENGHTT -> RLENGTH PARIZQ expresion PARDER .

    PUNTOCOMA       reduce using rule 21 (LENGHTT -> RLENGTH PARIZQ expresion PARDER .)


state 199

    (28) if_ -> RIF PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 233


state 200

    (59) imprimir -> RCONSOLE PUNTO RLOG PARIZQ PARDER .

    PUNTOCOMA       reduce using rule 59 (imprimir -> RCONSOLE PUNTO RLOG PARIZQ PARDER .)


state 201

    (35) asignacion -> RLET ID DOSPUNTOS ID IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 234
    exp_struct                     shift and go to state 64

state 202

    (34) asignacion -> RLET ID DOSPUNTOS tipo IGUAL . expresion
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 235
    exp_struct                     shift and go to state 64

state 203

    (37) array -> RLET ID number_array IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 37 (array -> RLET ID number_array IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 204

    (40) lista_id -> lista_id PUNTO ID number_array .
    (73) number_array -> number_array . CORIZQ expresion CORDER

    IGUAL           reduce using rule 40 (lista_id -> lista_id PUNTO ID number_array .)
    PUNTO           reduce using rule 40 (lista_id -> lista_id PUNTO ID number_array .)
    CORIZQ          shift and go to state 94


state 205

    (36) array -> ID number_array lista_id IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 36 (array -> ID number_array lista_id IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 206

    (73) number_array -> number_array CORIZQ expresion CORDER .

    CORIZQ          reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    PUNTO           reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    IGUAL           reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MAS             reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MENOS           reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    POR             reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    DIVI            reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    POTENCIA        reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MODULO          reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    IGUALIGUAL      reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    DIFERENTE       reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MAYOR           reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MENOR           reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MAYORIGUAL      reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    MENORIGUAL      reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    AND             reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    OR              reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    PUNTOCOMA       reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    PARDER          reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    COMA            reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)
    CORDER          reduce using rule 73 (number_array -> number_array CORIZQ expresion CORDER .)


state 207

    (60) parametro_print -> parametro_print COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          reduce using rule 60 (parametro_print -> parametro_print COMA expresion .)
    COMA            reduce using rule 60 (parametro_print -> parametro_print COMA expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 208

    (22) condicional -> if_ RELSE LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 22 (condicional -> if_ RELSE LLAVEIZQ instrucciones LLAVEDER .)


state 209

    (29) if_ -> if_ RELSEIF PARIZQ expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 236


state 210

    (30) whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 237
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 211

    (31) forr -> RFOR PARIZQ RLET ID ROF . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR PARIZQ RLET ID ROF . expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 238
    exp_struct                     shift and go to state 64

state 212

    (56) parametro_struct -> ID PUNTOCOMA .

    LLAVEDER        reduce using rule 56 (parametro_struct -> ID PUNTOCOMA .)
    ID              reduce using rule 56 (parametro_struct -> ID PUNTOCOMA .)


state 213

    (57) parametro_struct -> ID DOSPUNTOS . tipo PUNTOCOMA
    (58) parametro_struct -> ID DOSPUNTOS . ID PUNTOCOMA
    (62) tipo -> . RNUMBER
    (63) tipo -> . RBOOL
    (64) tipo -> . RSTRING
    (65) tipo -> . RANY
    (66) tipo -> . RNULL

    ID              shift and go to state 239
    RNUMBER         shift and go to state 144
    RBOOL           shift and go to state 145
    RSTRING         shift and go to state 146
    RANY            shift and go to state 147
    RNULL           shift and go to state 148

    tipo                           shift and go to state 240

state 214

    (53) struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .

    PUNTOCOMA       reduce using rule 53 (struct -> RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER .)


state 215

    (54) parametros_struct -> parametros_struct parametro_struct .

    LLAVEDER        reduce using rule 54 (parametros_struct -> parametros_struct parametro_struct .)
    ID              reduce using rule 54 (parametros_struct -> parametros_struct parametro_struct .)


state 216

    (51) parametros_function -> ID DOSPUNTOS . tipo
    (52) parametros_function -> ID DOSPUNTOS . ID
    (62) tipo -> . RNUMBER
    (63) tipo -> . RBOOL
    (64) tipo -> . RSTRING
    (65) tipo -> . RANY
    (66) tipo -> . RNULL

    ID              shift and go to state 241
    RNUMBER         shift and go to state 144
    RBOOL           shift and go to state 145
    RSTRING         shift and go to state 146
    RANY            shift and go to state 147
    RNULL           shift and go to state 148

    tipo                           shift and go to state 242

state 217

    (45) functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 243
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 218

    (46) functionn -> RFUNCTION ID PARIZQ parametros_function PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 244


state 219

    (47) parametros_function -> parametros_function COMA . ID
    (48) parametros_function -> parametros_function COMA . ID DOSPUNTOS tipo
    (49) parametros_function -> parametros_function COMA . ID DOSPUNTOS ID

    ID              shift and go to state 245


state 220

    (69) exp_struct -> exp_struct PUNTO ID number_array .
    (73) number_array -> number_array . CORIZQ expresion CORDER

    PUNTO           reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MAS             reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MENOS           reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    POR             reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    DIVI            reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    POTENCIA        reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MODULO          reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    IGUALIGUAL      reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    DIFERENTE       reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MAYOR           reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MENOR           reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MAYORIGUAL      reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    MENORIGUAL      reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    AND             reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    OR              reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    PUNTOCOMA       reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    PARDER          reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    COMA            reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    CORDER          reduce using rule 69 (exp_struct -> exp_struct PUNTO ID number_array .)
    CORIZQ          shift and go to state 94


state 221

    (75) expresion_exp -> expresion_exp COMA expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    CORDER          reduce using rule 75 (expresion_exp -> expresion_exp COMA expresion .)
    COMA            reduce using rule 75 (expresion_exp -> expresion_exp COMA expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 222

    (77) expresion -> ID PARIZQ parametro_print PARDER .

    MAS             reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MENOS           reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    POR             reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    DIVI            reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    POTENCIA        reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MODULO          reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    IGUALIGUAL      reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    DIFERENTE       reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MAYOR           reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MENOR           reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MAYORIGUAL      reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    MENORIGUAL      reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    AND             reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    OR              reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    PUNTOCOMA       reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    PARDER          reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    COMA            reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)
    CORDER          reduce using rule 77 (expresion -> ID PARIZQ parametro_print PARDER .)


state 223

    (78) expresion -> RPUSH NOT PARIZQ expresion . COMA expresion PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    COMA            shift and go to state 246
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 224

    (79) expresion -> RPOP NOT PARIZQ expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 247
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 225

    (80) expresion -> RLENGTH PARIZQ expresion PARDER .

    MAS             reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MENOS           reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    POR             reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    DIVI            reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MODULO          reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MENOR           reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    AND             reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    OR              reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    PARDER          reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    COMA            reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)
    CORDER          reduce using rule 80 (expresion -> RLENGTH PARIZQ expresion PARDER .)


state 226

    (81) expresion -> RTOFIXED PARIZQ expresion PARDER .

    MAS             reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MENOS           reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    POR             reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    DIVI            reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MODULO          reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MENOR           reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    AND             reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    OR              reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    PARDER          reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    COMA            reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)
    CORDER          reduce using rule 81 (expresion -> RTOFIXED PARIZQ expresion PARDER .)


state 227

    (82) expresion -> RTOSTRING PARIZQ expresion PARDER .

    MAS             reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MENOS           reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    POR             reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    DIVI            reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MODULO          reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MENOR           reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    AND             reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    OR              reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    PARDER          reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    COMA            reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)
    CORDER          reduce using rule 82 (expresion -> RTOSTRING PARIZQ expresion PARDER .)


state 228

    (83) expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .

    MAS             reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOS           reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    POR             reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    DIVI            reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MODULO          reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MENOR           reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    AND             reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    OR              reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    PARDER          reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    COMA            reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)
    CORDER          reduce using rule 83 (expresion -> RTOEXPONENTIAL PARIZQ expresion PARDER .)


state 229

    (84) expresion -> RTYPEOF PARIZQ expresion PARDER .

    MAS             reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MENOS           reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    POR             reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    DIVI            reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MODULO          reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MENOR           reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    AND             reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    OR              reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    PARDER          reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    COMA            reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)
    CORDER          reduce using rule 84 (expresion -> RTYPEOF PARIZQ expresion PARDER .)


state 230

    (85) expresion -> RTOUPPERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    DIVI            reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 85 (expresion -> RTOUPPERCASE PARIZQ expresion PARDER .)


state 231

    (86) expresion -> RTOLOWERCASE PARIZQ expresion PARDER .

    MAS             reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MENOS           reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    POR             reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    DIVI            reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MODULO          reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MENOR           reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    AND             reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    OR              reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    PARDER          reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    COMA            reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)
    CORDER          reduce using rule 86 (expresion -> RTOLOWERCASE PARIZQ expresion PARDER .)


state 232

    (19) PUSHH -> RPUSH PARIZQ expresion COMA expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 248
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 233

    (28) if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 249
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 234

    (35) asignacion -> RLET ID DOSPUNTOS ID IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 35 (asignacion -> RLET ID DOSPUNTOS ID IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 235

    (34) asignacion -> RLET ID DOSPUNTOS tipo IGUAL expresion .
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PUNTOCOMA       reduce using rule 34 (asignacion -> RLET ID DOSPUNTOS tipo IGUAL expresion .)
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 236

    (29) if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    if_                            shift and go to state 22
    instrucciones                  shift and go to state 250
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18

state 237

    (30) whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 251
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 238

    (31) forr -> RFOR PARIZQ RLET ID ROF expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> RFOR PARIZQ RLET ID ROF expresion . PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 252
    PUNTOCOMA       shift and go to state 253
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 239

    (58) parametro_struct -> ID DOSPUNTOS ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 254


state 240

    (57) parametro_struct -> ID DOSPUNTOS tipo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 255


state 241

    (52) parametros_function -> ID DOSPUNTOS ID .

    PARDER          reduce using rule 52 (parametros_function -> ID DOSPUNTOS ID .)
    COMA            reduce using rule 52 (parametros_function -> ID DOSPUNTOS ID .)


state 242

    (51) parametros_function -> ID DOSPUNTOS tipo .

    PARDER          reduce using rule 51 (parametros_function -> ID DOSPUNTOS tipo .)
    COMA            reduce using rule 51 (parametros_function -> ID DOSPUNTOS tipo .)


state 243

    (45) functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 256
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 244

    (46) functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 257
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 245

    (47) parametros_function -> parametros_function COMA ID .
    (48) parametros_function -> parametros_function COMA ID . DOSPUNTOS tipo
    (49) parametros_function -> parametros_function COMA ID . DOSPUNTOS ID

    PARDER          reduce using rule 47 (parametros_function -> parametros_function COMA ID .)
    COMA            reduce using rule 47 (parametros_function -> parametros_function COMA ID .)
    DOSPUNTOS       shift and go to state 258


state 246

    (78) expresion -> RPUSH NOT PARIZQ expresion COMA . expresion PARDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 259
    exp_struct                     shift and go to state 64

state 247

    (79) expresion -> RPOP NOT PARIZQ expresion PARDER .

    MAS             reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MENOS           reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    POR             reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    DIVI            reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    POTENCIA        reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MODULO          reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    IGUALIGUAL      reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    DIFERENTE       reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MAYOR           reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MENOR           reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MAYORIGUAL      reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    MENORIGUAL      reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    AND             reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    OR              reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    PUNTOCOMA       reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    PARDER          reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    COMA            reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)
    CORDER          reduce using rule 79 (expresion -> RPOP NOT PARIZQ expresion PARDER .)


state 248

    (19) PUSHH -> RPUSH PARIZQ expresion COMA expresion PARDER .

    PUNTOCOMA       reduce using rule 19 (PUSHH -> RPUSH PARIZQ expresion COMA expresion PARDER .)


state 249

    (28) if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 260
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 250

    (29) if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 261
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    if_                            shift and go to state 22
    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18

state 251

    (30) whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 30 (whilee -> RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 252

    (31) forr -> RFOR PARIZQ RLET ID ROF expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 262


state 253

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA . expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (67) expresion -> . exp_struct
    (74) expresion -> . CORIZQ expresion_exp CORDER
    (77) expresion -> . ID PARIZQ parametro_print PARDER
    (78) expresion -> . RPUSH NOT PARIZQ expresion COMA expresion PARDER
    (79) expresion -> . RPOP NOT PARIZQ expresion PARDER
    (80) expresion -> . RLENGTH PARIZQ expresion PARDER
    (81) expresion -> . RTOFIXED PARIZQ expresion PARDER
    (82) expresion -> . RTOSTRING PARIZQ expresion PARDER
    (83) expresion -> . RTOEXPONENTIAL PARIZQ expresion PARDER
    (84) expresion -> . RTYPEOF PARIZQ expresion PARDER
    (85) expresion -> . RTOUPPERCASE PARIZQ expresion PARDER
    (86) expresion -> . RTOLOWERCASE PARIZQ expresion PARDER
    (87) expresion -> . expresion MAS expresion
    (88) expresion -> . expresion MENOS expresion
    (89) expresion -> . expresion POR expresion
    (90) expresion -> . expresion DIVI expresion
    (91) expresion -> . expresion POTENCIA expresion
    (92) expresion -> . expresion MODULO expresion
    (93) expresion -> . expresion IGUALIGUAL expresion
    (94) expresion -> . expresion DIFERENTE expresion
    (95) expresion -> . expresion MAYOR expresion
    (96) expresion -> . expresion MENOR expresion
    (97) expresion -> . expresion MAYORIGUAL expresion
    (98) expresion -> . expresion MENORIGUAL expresion
    (99) expresion -> . expresion AND expresion
    (100) expresion -> . expresion OR expresion
    (101) expresion -> . NOT expresion
    (102) expresion -> . RNUMBER
    (103) expresion -> . RSTRING
    (104) expresion -> . RFALSE
    (105) expresion -> . RTRUE
    (106) expresion -> . RANY
    (107) expresion -> . PARIZQ expresion PARDER
    (68) exp_struct -> . exp_struct PUNTO ID
    (69) exp_struct -> . exp_struct PUNTO ID number_array
    (70) exp_struct -> . ID
    (71) exp_struct -> . ID number_array

    CORIZQ          shift and go to state 65
    ID              shift and go to state 66
    RPUSH           shift and go to state 68
    RPOP            shift and go to state 70
    RLENGTH         shift and go to state 71
    RTOFIXED        shift and go to state 72
    RTOSTRING       shift and go to state 73
    RTOEXPONENTIAL  shift and go to state 74
    RTYPEOF         shift and go to state 75
    RTOUPPERCASE    shift and go to state 76
    RTOLOWERCASE    shift and go to state 77
    NOT             shift and go to state 69
    RNUMBER         shift and go to state 78
    RSTRING         shift and go to state 79
    RFALSE          shift and go to state 80
    RTRUE           shift and go to state 81
    RANY            shift and go to state 82
    PARIZQ          shift and go to state 67

    expresion                      shift and go to state 263
    exp_struct                     shift and go to state 64

state 254

    (58) parametro_struct -> ID DOSPUNTOS ID PUNTOCOMA .

    LLAVEDER        reduce using rule 58 (parametro_struct -> ID DOSPUNTOS ID PUNTOCOMA .)
    ID              reduce using rule 58 (parametro_struct -> ID DOSPUNTOS ID PUNTOCOMA .)


state 255

    (57) parametro_struct -> ID DOSPUNTOS tipo PUNTOCOMA .

    LLAVEDER        reduce using rule 57 (parametro_struct -> ID DOSPUNTOS tipo PUNTOCOMA .)
    ID              reduce using rule 57 (parametro_struct -> ID DOSPUNTOS tipo PUNTOCOMA .)


state 256

    (45) functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 45 (functionn -> RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 257

    (46) functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 264
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 258

    (48) parametros_function -> parametros_function COMA ID DOSPUNTOS . tipo
    (49) parametros_function -> parametros_function COMA ID DOSPUNTOS . ID
    (62) tipo -> . RNUMBER
    (63) tipo -> . RBOOL
    (64) tipo -> . RSTRING
    (65) tipo -> . RANY
    (66) tipo -> . RNULL

    ID              shift and go to state 265
    RNUMBER         shift and go to state 144
    RBOOL           shift and go to state 145
    RSTRING         shift and go to state 146
    RANY            shift and go to state 147
    RNULL           shift and go to state 148

    tipo                           shift and go to state 266

state 259

    (78) expresion -> RPUSH NOT PARIZQ expresion COMA expresion . PARDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 267
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 260

    (28) if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    RELSE           reduce using rule 28 (if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RELSEIF         reduce using rule 28 (if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PUNTOCOMA       reduce using rule 28 (if_ -> RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 261

    (29) if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    RELSE           reduce using rule 29 (if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    RELSEIF         reduce using rule 29 (if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)
    PUNTOCOMA       reduce using rule 29 (if_ -> if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 262

    (31) forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 268
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 263

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion . PARDER LLAVEIZQ instrucciones LLAVEDER
    (87) expresion -> expresion . MAS expresion
    (88) expresion -> expresion . MENOS expresion
    (89) expresion -> expresion . POR expresion
    (90) expresion -> expresion . DIVI expresion
    (91) expresion -> expresion . POTENCIA expresion
    (92) expresion -> expresion . MODULO expresion
    (93) expresion -> expresion . IGUALIGUAL expresion
    (94) expresion -> expresion . DIFERENTE expresion
    (95) expresion -> expresion . MAYOR expresion
    (96) expresion -> expresion . MENOR expresion
    (97) expresion -> expresion . MAYORIGUAL expresion
    (98) expresion -> expresion . MENORIGUAL expresion
    (99) expresion -> expresion . AND expresion
    (100) expresion -> expresion . OR expresion

    PARDER          shift and go to state 269
    MAS             shift and go to state 106
    MENOS           shift and go to state 107
    POR             shift and go to state 108
    DIVI            shift and go to state 109
    POTENCIA        shift and go to state 110
    MODULO          shift and go to state 111
    IGUALIGUAL      shift and go to state 112
    DIFERENTE       shift and go to state 113
    MAYOR           shift and go to state 114
    MENOR           shift and go to state 115
    MAYORIGUAL      shift and go to state 116
    MENORIGUAL      shift and go to state 117
    AND             shift and go to state 118
    OR              shift and go to state 119


state 264

    (46) functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 46 (functionn -> RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 265

    (49) parametros_function -> parametros_function COMA ID DOSPUNTOS ID .

    PARDER          reduce using rule 49 (parametros_function -> parametros_function COMA ID DOSPUNTOS ID .)
    COMA            reduce using rule 49 (parametros_function -> parametros_function COMA ID DOSPUNTOS ID .)


state 266

    (48) parametros_function -> parametros_function COMA ID DOSPUNTOS tipo .

    PARDER          reduce using rule 48 (parametros_function -> parametros_function COMA ID DOSPUNTOS tipo .)
    COMA            reduce using rule 48 (parametros_function -> parametros_function COMA ID DOSPUNTOS tipo .)


state 267

    (78) expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .

    MAS             reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENOS           reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    POR             reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DIVI            reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    POTENCIA        reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MODULO          reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    IGUALIGUAL      reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    DIFERENTE       reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MAYOR           reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENOR           reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MAYORIGUAL      reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    MENORIGUAL      reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    AND             reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    OR              reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PUNTOCOMA       reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    PARDER          reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    COMA            reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)
    CORDER          reduce using rule 78 (expresion -> RPUSH NOT PARIZQ expresion COMA expresion PARDER .)


state 268

    (31) forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 270
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 269

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER . LLAVEIZQ instrucciones LLAVEDER

    LLAVEIZQ        shift and go to state 271


state 270

    (31) forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 31 (forr -> RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)


state 271

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ . instrucciones LLAVEDER
    (2) instrucciones -> . instrucciones instruccion
    (3) instrucciones -> . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instrucciones                  shift and go to state 272
    instruccion                    shift and go to state 3
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 272

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones . LLAVEDER
    (2) instrucciones -> instrucciones . instruccion
    (4) instruccion -> . imprimir PUNTOCOMA
    (5) instruccion -> . asignacion PUNTOCOMA
    (6) instruccion -> . array PUNTOCOMA
    (7) instruccion -> . condicional PUNTOCOMA
    (8) instruccion -> . whilee PUNTOCOMA
    (9) instruccion -> . forr PUNTOCOMA
    (10) instruccion -> . struct PUNTOCOMA
    (11) instruccion -> . functionn PUNTOCOMA
    (12) instruccion -> . llamada PUNTOCOMA
    (13) instruccion -> . BREAKk PUNTOCOMA
    (14) instruccion -> . RETURNN PUNTOCOMA
    (15) instruccion -> . CONTINUEE PUNTOCOMA
    (16) instruccion -> . PUSHH PUNTOCOMA
    (17) instruccion -> . POPP PUNTOCOMA
    (18) instruccion -> . LENGHTT PUNTOCOMA
    (59) imprimir -> . RCONSOLE PUNTO RLOG PARIZQ PARDER
    (33) asignacion -> . RLET ID IGUAL expresion
    (34) asignacion -> . RLET ID DOSPUNTOS tipo IGUAL expresion
    (35) asignacion -> . RLET ID DOSPUNTOS ID IGUAL expresion
    (38) asignacion -> . ID lista_id IGUAL expresion
    (36) array -> . ID number_array lista_id IGUAL expresion
    (37) array -> . RLET ID number_array IGUAL expresion
    (22) condicional -> . if_ RELSE LLAVEIZQ instrucciones LLAVEDER
    (23) condicional -> . if_
    (30) whilee -> . RWHILE PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (31) forr -> . RFOR PARIZQ RLET ID ROF expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (32) forr -> . RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (53) struct -> . RINTERFACE ID LLAVEIZQ parametros_struct LLAVEDER
    (45) functionn -> . RFUNCTION ID PARIZQ PARDER LLAVEIZQ instrucciones LLAVEDER
    (46) functionn -> . RFUNCTION ID PARIZQ parametros_function PARDER LLAVEIZQ instrucciones LLAVEDER
    (43) llamada -> . ID PARIZQ parametro_print PARDER
    (44) llamada -> . ID PARIZQ PARDER
    (24) BREAKk -> . RBREAK
    (26) RETURNN -> . RRETURN
    (27) RETURNN -> . RRETURN expresion
    (25) CONTINUEE -> . RCONTINUE
    (19) PUSHH -> . RPUSH PARIZQ expresion COMA expresion PARDER
    (20) POPP -> . RPOP PARIZQ expresion PARDER
    (21) LENGHTT -> . RLENGTH PARIZQ expresion PARDER
    (28) if_ -> . RIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER
    (29) if_ -> . if_ RELSEIF PARIZQ expresion PARDER LLAVEIZQ instrucciones LLAVEDER

    LLAVEDER        shift and go to state 273
    RCONSOLE        shift and go to state 19
    RLET            shift and go to state 20
    ID              shift and go to state 21
    RWHILE          shift and go to state 23
    RFOR            shift and go to state 24
    RINTERFACE      shift and go to state 25
    RFUNCTION       shift and go to state 26
    RBREAK          shift and go to state 27
    RRETURN         shift and go to state 28
    RCONTINUE       shift and go to state 29
    RPUSH           shift and go to state 30
    RPOP            shift and go to state 31
    RLENGTH         shift and go to state 32
    RIF             shift and go to state 33

    instruccion                    shift and go to state 34
    imprimir                       shift and go to state 4
    asignacion                     shift and go to state 5
    array                          shift and go to state 6
    condicional                    shift and go to state 7
    whilee                         shift and go to state 8
    forr                           shift and go to state 9
    struct                         shift and go to state 10
    functionn                      shift and go to state 11
    llamada                        shift and go to state 12
    BREAKk                         shift and go to state 13
    RETURNN                        shift and go to state 14
    CONTINUEE                      shift and go to state 15
    PUSHH                          shift and go to state 16
    POPP                           shift and go to state 17
    LENGHTT                        shift and go to state 18
    if_                            shift and go to state 22

state 273

    (32) forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .

    PUNTOCOMA       reduce using rule 32 (forr -> RFOR PARIZQ RLET ID ROF expresion PUNTOCOMA expresion PARDER LLAVEIZQ instrucciones LLAVEDER .)

